<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Telerik.Reporting</name>
  </assembly>
  <members>
    <member name="T:Telerik.Reporting.Data.Filter">
      <summary>
      </summary>
    </member>
    <member name="P:Telerik.Reporting.Data.Filter.Expression">
      <summary>
      </summary>
    </member>
    <member name="P:Telerik.Reporting.Data.Filter.Operator">
      <summary>
      </summary>
    </member>
    <member name="P:Telerik.Reporting.Data.Filter.Value">
      <summary>
            If the Value starts with the equal (=) sign, it will be evaluated as an expression
            otherwise - as string value. For ex. if the value is 7 it is interpreted as
            the string "7"; To compare a numeric expression with the number 7, use the
            expression syntax which begins with the equal sign: =7.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Data.FilterCollection">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Data.FilterCombineOperator">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Data.FilterConverter">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Data.FilterExpression">
      <summary>
            Represents a string expression used for filtering.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Data.FilterExpression.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Data.FilterExpression" /> with an
            empty expression.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Data.FilterExpression.Expression">
      <summary>
            Gets or sets the expression for the filter.
            </summary>
      <value>
            A <I>string</I> value representing the filter expression.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Data.FilterExpressionCollection">
      <summary>
            Represents a collection of 
            <see cref="T:Telerik.Reporting.Data.FilterExpression" /> objects. 
            </summary>
      <remarks>
            The <see cref="M:Telerik.Reporting.Data.FilterExpressionCollection.Add(Telerik.Reporting.Data.FilterExpression)" />, 
            <see cref="M:Telerik.Reporting.Data.FilterExpressionCollection.Remove(Telerik.Reporting.Data.FilterExpression)" />, 
            and <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" /> 
            methods enable you to add and remove individual filter expressions from 
            the collection. You can also use the 
            <see cref="M:Telerik.Reporting.Data.FilterExpressionCollection.AddRange(Telerik.Reporting.Data.FilterExpression[])" /> 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> methods 
            to add or remove all the filter expressions from the collection. You 
            can determine if a 
            <see cref="T:Telerik.Reporting.Data.FilterExpression" /> is a member of 
            the collection by passing the filter expression into the 
            <see cref="M:Telerik.Reporting.Data.FilterExpressionCollection.Contains(Telerik.Reporting.Data.FilterExpression)" /> 
            method. To get the index value of the location of a 
            <see cref="T:Telerik.Reporting.Data.FilterExpression" /> in the collection, 
            pass the item into the <see cref="M:Telerik.Reporting.Data.FilterExpressionCollection.IndexOf(Telerik.Reporting.Data.FilterExpression)" /> 
            method. The collection can be copied into an array by calling the 
            <see cref="M:Telerik.Reporting.Data.FilterExpressionCollection.CopyTo(Telerik.Reporting.Data.FilterExpression[],System.Int32)" /> 
            method.
            </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.FilterExpressionCollection.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Data.FilterExpressionCollection" /> 
            class. 
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Data.FilterExpressionCollection.Add(Telerik.Reporting.Data.FilterExpression)">
      <summary>
            Adds the specified filter expression to the filter expression 
            collection.
            </summary>
      <returns>
            The index of the added 
            <see cref="T:Telerik.Reporting.Data.FilterExpression" /></returns>
      <param name="item">
            The <see cref="T:Telerik.Reporting.Data.FilterExpression" /> to add to 
            the filter expression collection. 
            </param>
      <remarks>
        <para>The 
            <see cref="M:Telerik.Reporting.Data.FilterExpressionCollection.Add(Telerik.Reporting.Data.FilterExpression)" /> 
            method allows you to add 
            <see cref="T:Telerik.Reporting.Data.FilterExpression" /> objects to 
            the end of the filter expression collection.
            </para>
        <para>
            You can also add new 
            <see cref="T:Telerik.Reporting.Data.FilterExpression" /> objects to 
            the collection by using the 
            <see cref="M:Telerik.Reporting.Data.FilterExpressionCollection.AddRange(Telerik.Reporting.Data.FilterExpression[])" /> 
            method.
            </para>
        <para>
            To remove a 
            <see cref="T:Telerik.Reporting.Data.FilterExpression" /> that you 
            previously added, use the 
            <see cref="M:Telerik.Reporting.Data.FilterExpressionCollection.Remove(Telerik.Reporting.Data.FilterExpression)" />, 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />, 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.FilterExpressionCollection.AddRange(Telerik.Reporting.Data.FilterExpression[])">
      <summary>
            Adds an array of filter expressions to the collection. 
            </summary>
      <param name="items">
            An array of <see cref="T:Telerik.Reporting.Data.FilterExpression" /> 
            objects to add to the collection.
            </param>
      <remarks>
        <para>
            The <B>FilterExpression</B> objects contained in the 
            <I>items</I> array are appended to the end of the collection.
            </para>
        <para>
            You can use the <B>AddRange</B> method to quickly add a 
            group of <B>FilterExpression</B> objects to the collection 
            instead of manually adding each <B>FilterExpression</B> to the 
            collection using the 
            <see cref="M:Telerik.Reporting.Data.FilterExpressionCollection.Add(Telerik.Reporting.Data.FilterExpression)" /> 
            method.
            </para>
        <para>
            To remove a 
            <see cref="T:Telerik.Reporting.Data.FilterExpression" /> that you 
            previously added, use the 
            <see cref="M:Telerik.Reporting.Data.FilterExpressionCollection.Remove(Telerik.Reporting.Data.FilterExpression)" />, 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />, 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.FilterExpressionCollection.Insert(System.Int32,Telerik.Reporting.Data.FilterExpression)">
      <summary>
            Inserts a specified <B>FilterExpression</B> object into the 
            <see cref="T:Telerik.Reporting.Data.FilterExpressionCollection" /> 
            at the specified index location.
            </summary>
      <param name="index">
            The zero-based index location at which to insert the 
            <see cref="T:Telerik.Reporting.Data.FilterExpression" /> object.
            </param>
      <param name="item">
            The <B>FilterExpression</B> object to insert into the collection.
            </param>
      <remarks>
        <para>
            Use the <B>Insert</B> method to insert a specified 
            <B>FilterExpression</B> object into the 
            <B>FilterExpressionCollection</B> object at a specified 
            index location.
            </para>
        <para>
            To add a <B>FilterExpression</B> object at the end of the 
            <B>FilterExpressionCollection</B> object, use the 
            <see cref="M:Telerik.Reporting.Data.FilterExpressionCollection.Add(Telerik.Reporting.Data.FilterExpression)" /> 
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.FilterExpressionCollection.Remove(Telerik.Reporting.Data.FilterExpression)">
      <summary>
            Removes the specified filter expression from the filter expression 
            collection.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.Data.FilterExpression" /> to remove 
            from the 
            <see cref="T:Telerik.Reporting.Data.FilterExpressionCollection" />.
            </param>
      <remarks>
        <para>
            When a <B>FilterExpression</B> is removed from the filter 
            expression collection, all subsequent filter expressions are moved 
            up one position in the collection.
            </para>
        <para>
            You can also remove a <B>FilterExpression</B> by using the 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" /> 
            method, or remove all filter expressions by using the 
            <see cref="M:System.Collections.CollectionBase.Clear" /> method.
            </para>
        <para>
            To add new <B>FilterExpression</B> objects to the collection, use 
            the 
            <see cref="M:Telerik.Reporting.Data.FilterExpressionCollection.Add(Telerik.Reporting.Data.FilterExpression)" /> 
            or 
            <see cref="M:Telerik.Reporting.Data.FilterExpressionCollection.AddRange(Telerik.Reporting.Data.FilterExpression[])" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.FilterExpressionCollection.Contains(Telerik.Reporting.Data.FilterExpression)">
      <summary>
            Determines whether the specified filter expression is a member of 
            the collection.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.Data.FilterExpression" /> to locate 
            in the collection.
            </param>
      <returns>
        <B>true</B> if the <B>FilterExpression</B> is a member of the 
            collection; otherwise, <B>false</B>.
            </returns>
      <remarks>
        <para>This method enables you to determine whether a 
            <B>FilterExpression</B> is a member of the collection before 
            attempting to perform operations on the <B>FilterExpression</B>. 
            You can use this method to confirm that an <B>FilterExpression</B> 
            has been added to or is still a member of the collection.</para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.FilterExpressionCollection.IndexOf(Telerik.Reporting.Data.FilterExpression)">
      <summary>
            Retrieves the index of the specified filter expression in the 
            filte expression collection.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.Data.FilterExpression" /> to locate 
            in the collection.
            </param>
      <returns>
            A zero-based index value that represents the position of the 
            specified <B>FilterExpression</B> in the 
            <see cref="T:Telerik.Reporting.Data.FilterExpressionCollection" />.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Data.FilterExpressionCollection.CopyTo(Telerik.Reporting.Data.FilterExpression[],System.Int32)">
      <summary>
            Copies the entire
            <see cref="T:Telerik.Reporting.Data.FilterExpressionCollection" />
            to the specified <I>array</I>, starting at the specified index of 
            the target array.
            </summary>
      <param name="array">
            The one-dimensional array that is the destination of the elements 
            copied from 
            <see cref="T:Telerik.Reporting.Data.FilterExpressionCollection" />. 
            The <I>array</I> must have zero-based indexing.
            </param>
      <param name="index">
            The zero-based index in <I>array</I> at which copying begins.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Data.FilterExpressionCollection.ToArray">
      <summary>
            Copies the elements of the 
            <see cref="T:Telerik.Reporting.Data.FilterExpressionCollection" /> to 
            a new <see cref="T:Telerik.Reporting.Data.FilterExpression" /> array.
            </summary>
      <returns>
            An <B>FilterExpression</B> array containing copies of the elements 
            of the <B>FilterExpressionCollection</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Data.FilterExpressionCollection.OnValidate(System.Object)">
      <summary>
            Performs additional custom processes when validating a value. 
            </summary>
      <param name="value">
            The object to validate.
            </param>
      <exception cref="T:System.ArgumentException">
            The object is not a
            <see cref="T:Telerik.Reporting.Data.FilterExpression" />.
            </exception>
    </member>
    <member name="P:Telerik.Reporting.Data.FilterExpressionCollection.Item(System.Int32)">
      <summary>
            Returns the <see cref="T:Telerik.Reporting.Data.FilterExpression" /> 
            at the specified indexed location in the collection.
            </summary>
      <param name="index">
            The index of the filter expression to retrieve from the filter 
            expression collection.
            </param>
      <value>
            The <see cref="T:Telerik.Reporting.Data.FilterExpression" /> located 
            at the specified index location within the filter expression 
            collection. 
            </value>
    </member>
    <member name="T:Telerik.Reporting.Data.FilterOperator">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Data.GroupCollection">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Data.GroupExpression">
      <summary>
            Represents an expression used for grouping by a field name from the
            data source.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Data.GroupExpression.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Data.GroupExpression" /> with an
            empty field name.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Data.GroupExpression.FieldName">
      <summary>
            Gets or sets the field name of this 
            <see cref="T:Telerik.Reporting.Data.GroupExpression" /></summary>
      <value>
            A <I>string</I> value representing the field name.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Data.GroupExpressionCollection">
      <summary>
            Represents a collection of 
            <see cref="T:Telerik.Reporting.Data.GroupExpression" /> objects. 
            </summary>
      <remarks>
            The <see cref="M:Telerik.Reporting.Data.GroupExpressionCollection.Add(Telerik.Reporting.Data.GroupExpression)" />, 
            <see cref="M:Telerik.Reporting.Data.GroupExpressionCollection.Remove(Telerik.Reporting.Data.GroupExpression)" />, 
            and <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" /> 
            methods enable you to add and remove individual group expressions from 
            the collection. You can also use the 
            <see cref="M:Telerik.Reporting.Data.GroupExpressionCollection.AddRange(Telerik.Reporting.Data.GroupExpression[])" /> 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> methods 
            to add or remove all the group expressions from the collection. You 
            can determine if a 
            <see cref="T:Telerik.Reporting.Data.GroupExpression" /> is a member of 
            the collection by passing the group expression into the 
            <see cref="M:Telerik.Reporting.Data.GroupExpressionCollection.Contains(Telerik.Reporting.Data.GroupExpression)" /> 
            method. To get the index value of the location of a 
            <see cref="T:Telerik.Reporting.Data.GroupExpression" /> in the collection, 
            pass the item into the <see cref="M:Telerik.Reporting.Data.GroupExpressionCollection.IndexOf(Telerik.Reporting.Data.GroupExpression)" /> 
            method.
            </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.GroupExpressionCollection.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Data.GroupExpressionCollection" /> 
            class. 
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Data.GroupExpressionCollection.Add(Telerik.Reporting.Data.GroupExpression)">
      <summary>
            Adds the specified group expression to the group expression 
            collection.
            </summary>
      <returns>
            The index of the added 
            <see cref="T:Telerik.Reporting.Data.GroupExpression" /></returns>
      <param name="item">
            The <see cref="T:Telerik.Reporting.Data.GroupExpression" /> to add to 
            the group expression collection. 
            </param>
      <remarks>
        <para>The 
            <see cref="M:Telerik.Reporting.Data.GroupExpressionCollection.Add(Telerik.Reporting.Data.GroupExpression)" /> 
            method allows you to add 
            <see cref="T:Telerik.Reporting.Data.GroupExpression" /> objects to 
            the end of the group expression collection.
            </para>
        <para>
            You can also add new 
            <see cref="T:Telerik.Reporting.Data.GroupExpression" /> objects to 
            the collection by using the 
            <see cref="M:Telerik.Reporting.Data.GroupExpressionCollection.AddRange(Telerik.Reporting.Data.GroupExpression[])" /> 
            method.
            </para>
        <para>
            To remove a 
            <see cref="T:Telerik.Reporting.Data.GroupExpression" /> that you 
            previously added, use the 
            <see cref="M:Telerik.Reporting.Data.GroupExpressionCollection.Remove(Telerik.Reporting.Data.GroupExpression)" />, 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />, 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.GroupExpressionCollection.AddRange(Telerik.Reporting.Data.GroupExpression[])">
      <summary>
            Adds an array of group expressions to the collection. 
            </summary>
      <param name="items">
            An array of <see cref="T:Telerik.Reporting.Data.GroupExpression" /> 
            objects to add to the collection.
            </param>
      <remarks>
        <para>
            The <B>GroupExpression</B> objects contained in the 
            <I>items</I> array are appended to the end of the collection.
            </para>
        <para>
            You can use the <B>AddRange</B> method to quickly add a 
            group of <B>GroupExpression</B> objects to the collection 
            instead of manually adding each <B>GroupExpression</B> to the 
            collection using the 
            <see cref="M:Telerik.Reporting.Data.GroupExpressionCollection.Add(Telerik.Reporting.Data.GroupExpression)" /> 
            method.
            </para>
        <para>
            To remove a 
            <see cref="T:Telerik.Reporting.Data.GroupExpression" /> that you 
            previously added, use the 
            <see cref="M:Telerik.Reporting.Data.GroupExpressionCollection.Remove(Telerik.Reporting.Data.GroupExpression)" />, 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />, 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.GroupExpressionCollection.Insert(System.Int32,Telerik.Reporting.Data.GroupExpression)">
      <summary>
            Inserts a specified <B>GroupExpression</B> object into the 
            <see cref="T:Telerik.Reporting.Data.GroupExpressionCollection" /> 
            at the specified index location.
            </summary>
      <param name="index">
            The zero-based index location at which to insert the 
            <see cref="T:Telerik.Reporting.Data.GroupExpression" /> object.
            </param>
      <param name="item">
            The <B>GroupExpression</B> object to insert into the collection.
            </param>
      <remarks>
        <para>
            Use the <B>Insert</B> method to insert a specified 
            <B>GroupExpression</B> object into the 
            <B>GroupExpressionCollection</B> object at a specified 
            index location.
            </para>
        <para>
            To add a <B>GroupExpression</B> object at the end of the 
            <B>GroupExpressionCollection</B> object, use the 
            <see cref="M:Telerik.Reporting.Data.GroupExpressionCollection.Add(Telerik.Reporting.Data.GroupExpression)" /> 
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.GroupExpressionCollection.Remove(Telerik.Reporting.Data.GroupExpression)">
      <summary>
            Removes the specified group expression from the group expression 
            collection.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.Data.GroupExpression" /> to remove 
            from the 
            <see cref="T:Telerik.Reporting.Data.GroupExpressionCollection" />.
            </param>
      <remarks>
        <para>
            When a <B>GroupExpression</B> is removed from the group 
            expression collection, all subsequent group expressions are moved 
            up one position in the collection.
            </para>
        <para>
            You can also remove a <B>GroupExpression</B> by using the 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" /> 
            method, or remove all group expressions by using the 
            <see cref="M:System.Collections.CollectionBase.Clear" /> method.
            </para>
        <para>
            To add new <B>GroupExpression</B> objects to the collection, use 
            the 
            <see cref="M:Telerik.Reporting.Data.GroupExpressionCollection.Add(Telerik.Reporting.Data.GroupExpression)" /> 
            or 
            <see cref="M:Telerik.Reporting.Data.GroupExpressionCollection.AddRange(Telerik.Reporting.Data.GroupExpression[])" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.GroupExpressionCollection.Contains(Telerik.Reporting.Data.GroupExpression)">
      <summary>
            Determines whether the specified group expression is a member of 
            the collection.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.Data.GroupExpression" /> to locate 
            in the collection.
            </param>
      <returns>
        <B>true</B> if the <B>GroupExpression</B> is a member of the 
            collection; otherwise, <B>false</B>.
            </returns>
      <remarks>
        <para>This method enables you to determine whether a 
            <B>GroupExpression</B> is a member of the collection before 
            attempting to perform operations on the <B>GroupExpression</B>. 
            You can use this method to confirm that an <B>GroupExpression</B> 
            has been added to or is still a member of the collection.</para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.GroupExpressionCollection.IndexOf(Telerik.Reporting.Data.GroupExpression)">
      <summary>
            Retrieves the index of the specified group expression in the 
            group expression collection.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.Data.GroupExpression" /> to locate 
            in the collection.
            </param>
      <returns>
            A zero-based index value that represents the position of the 
            specified <B>GroupExpression</B> in the 
            <see cref="T:Telerik.Reporting.Data.GroupExpressionCollection" />.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Data.GroupExpressionCollection.OnValidate(System.Object)">
      <summary>
            Performs additional custom processes when validating a value. 
            </summary>
      <param name="value">
            The object to validate.
            </param>
      <exception cref="T:System.ArgumentException">
            The object is not a
            <see cref="T:Telerik.Reporting.Data.GroupExpression" />.
            </exception>
    </member>
    <member name="P:Telerik.Reporting.Data.GroupExpressionCollection.Item(System.Int32)">
      <summary>
            Returns the <see cref="T:Telerik.Reporting.Data.GroupExpression" /> 
            at the specified indexed location in the collection.
            </summary>
      <param name="index">
            The index of the group expression to retrieve from the group 
            expression collection.
            </param>
      <value>
            The <see cref="T:Telerik.Reporting.Data.GroupExpression" /> located 
            at the specified index location within the group expression 
            collection. 
            </value>
    </member>
    <member name="T:Telerik.Reporting.Data.Grouping">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Data.GroupingCollection">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Data.IGroup">
      <summary>
            Represents an interface for grouping, filtering and sorting data.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Data.SortDirection">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Data.SortExpression">
      <summary>
            Represents an expression used for sorting by a field name and a sort 
            order.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Data.SortExpression.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Data.SortExpression" /> with an
            empty field name.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Data.SortExpression.FieldName">
      <summary>
            Gets or sets the field name of this 
            <see cref="T:Telerik.Reporting.Data.SortExpression" /></summary>
      <value>
            A <I>string</I> value representing the field name.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Data.SortExpression.SortOrder">
      <summary>
            Gets or sets the sort order of this 
            <see cref="T:Telerik.Reporting.Data.SortExpression" /></summary>
      <value>
            A <see cref="T:Telerik.Reporting.Data.SortOrder" /> value representing 
            the sort order for this sort expression.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Data.SortExpressionCollection">
      <summary>
            Represents a collection of 
            <see cref="T:Telerik.Reporting.Data.SortExpression" /> objects. 
            </summary>
      <remarks>
            The <see cref="M:Telerik.Reporting.Data.SortExpressionCollection.Add(Telerik.Reporting.Data.SortExpression)" />, 
            <see cref="M:Telerik.Reporting.Data.SortExpressionCollection.Remove(Telerik.Reporting.Data.SortExpression)" />, 
            and <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" /> 
            methods enable you to add and remove individual sort expressions from 
            the collection. You can also use the 
            <see cref="M:Telerik.Reporting.Data.SortExpressionCollection.AddRange(Telerik.Reporting.Data.SortExpression[])" /> 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> methods 
            to add or remove all the sort expressions from the collection. You 
            can determine if a 
            <see cref="T:Telerik.Reporting.Data.SortExpression" /> is a member of 
            the collection by passing the sort expression into the 
            <see cref="M:Telerik.Reporting.Data.SortExpressionCollection.Contains(Telerik.Reporting.Data.SortExpression)" /> 
            method. To get the index value of the location of a 
            <see cref="T:Telerik.Reporting.Data.SortExpression" /> in the collection, 
            pass the item into the <see cref="M:Telerik.Reporting.Data.SortExpressionCollection.IndexOf(Telerik.Reporting.Data.SortExpression)" /> 
            method.
            </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.SortExpressionCollection.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Data.SortExpressionCollection" /> 
            class. 
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Data.SortExpressionCollection.Add(Telerik.Reporting.Data.SortExpression)">
      <summary>
            Adds the specified sort expression to the sort expression 
            collection.
            </summary>
      <returns>
            The index of the added 
            <see cref="T:Telerik.Reporting.Data.SortExpression" /></returns>
      <param name="item">
            The <see cref="T:Telerik.Reporting.Data.SortExpression" /> to add to 
            the sort expression collection. 
            </param>
      <remarks>
        <para>The 
            <see cref="M:Telerik.Reporting.Data.SortExpressionCollection.Add(Telerik.Reporting.Data.SortExpression)" /> 
            method allows you to add 
            <see cref="T:Telerik.Reporting.Data.SortExpression" /> objects to 
            the end of the sort expression collection.
            </para>
        <para>
            You can also add new 
            <see cref="T:Telerik.Reporting.Data.SortExpression" /> objects to 
            the collection by using the 
            <see cref="M:Telerik.Reporting.Data.SortExpressionCollection.AddRange(Telerik.Reporting.Data.SortExpression[])" /> 
            method.
            </para>
        <para>
            To remove a 
            <see cref="T:Telerik.Reporting.Data.SortExpression" /> that you 
            previously added, use the 
            <see cref="M:Telerik.Reporting.Data.SortExpressionCollection.Remove(Telerik.Reporting.Data.SortExpression)" />, 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />, 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.SortExpressionCollection.AddRange(Telerik.Reporting.Data.SortExpression[])">
      <summary>
            Adds an array of sort expressions to the collection. 
            </summary>
      <param name="items">
            An array of <see cref="T:Telerik.Reporting.Data.SortExpression" /> 
            objects to add to the collection.
            </param>
      <remarks>
        <para>
            The <B>SortExpression</B> objects contained in the 
            <I>items</I> array are appended to the end of the collection.
            </para>
        <para>
            You can use the <B>AddRange</B> method to quickly add a 
            sort of <B>SortExpression</B> objects to the collection 
            instead of manually adding each <B>SortExpression</B> to the 
            collection using the 
            <see cref="M:Telerik.Reporting.Data.SortExpressionCollection.Add(Telerik.Reporting.Data.SortExpression)" /> 
            method.
            </para>
        <para>
            To remove a 
            <see cref="T:Telerik.Reporting.Data.SortExpression" /> that you 
            previously added, use the 
            <see cref="M:Telerik.Reporting.Data.SortExpressionCollection.Remove(Telerik.Reporting.Data.SortExpression)" />, 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />, 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.SortExpressionCollection.Insert(System.Int32,Telerik.Reporting.Data.SortExpression)">
      <summary>
            Inserts a specified <B>SortExpression</B> object into the 
            <see cref="T:Telerik.Reporting.Data.SortExpressionCollection" /> 
            at the specified index location.
            </summary>
      <param name="index">
            The zero-based index location at which to insert the 
            <see cref="T:Telerik.Reporting.Data.SortExpression" /> object.
            </param>
      <param name="item">
            The <B>SortExpression</B> object to insert into the collection.
            </param>
      <remarks>
        <para>
            Use the <B>Insert</B> method to insert a specified 
            <B>SortExpression</B> object into the 
            <B>SortExpressionCollection</B> object at a specified 
            index location.
            </para>
        <para>
            To add a <B>SortExpression</B> object at the end of the 
            <B>SortExpressionCollection</B> object, use the 
            <see cref="M:Telerik.Reporting.Data.SortExpressionCollection.Add(Telerik.Reporting.Data.SortExpression)" /> 
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.SortExpressionCollection.Remove(Telerik.Reporting.Data.SortExpression)">
      <summary>
            Removes the specified sort expression from the sort expression 
            collection.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.Data.SortExpression" /> to remove 
            from the 
            <see cref="T:Telerik.Reporting.Data.SortExpressionCollection" />.
            </param>
      <remarks>
        <para>
            When a <B>SortExpression</B> is removed from the sort 
            expression collection, all subsequent sort expressions are moved 
            up one position in the collection.
            </para>
        <para>
            You can also remove a <B>SortExpression</B> by using the 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" /> 
            method, or remove all sort expressions by using the 
            <see cref="M:System.Collections.CollectionBase.Clear" /> method.
            </para>
        <para>
            To add new <B>SortExpression</B> objects to the collection, use 
            the 
            <see cref="M:Telerik.Reporting.Data.SortExpressionCollection.Add(Telerik.Reporting.Data.SortExpression)" /> 
            or 
            <see cref="M:Telerik.Reporting.Data.SortExpressionCollection.AddRange(Telerik.Reporting.Data.SortExpression[])" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.SortExpressionCollection.Contains(Telerik.Reporting.Data.SortExpression)">
      <summary>
            Determines whether the specified sort expression is a member of 
            the collection.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.Data.SortExpression" /> to locate 
            in the collection.
            </param>
      <returns>
        <B>true</B> if the <B>SortExpression</B> is a member of the 
            collection; otherwise, <B>false</B>.
            </returns>
      <remarks>
        <para>This method enables you to determine whether a 
            <B>SortExpression</B> is a member of the collection before 
            attempting to perform operations on the <B>SortExpression</B>. 
            You can use this method to confirm that an <B>SortExpression</B> 
            has been added to or is still a member of the collection.</para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Data.SortExpressionCollection.IndexOf(Telerik.Reporting.Data.SortExpression)">
      <summary>
            Retrieves the index of the specified sort expression in the 
            sort expression collection.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.Data.SortExpression" /> to locate 
            in the collection.
            </param>
      <returns>
            A zero-based index value that represents the position of the 
            specified <B>SortExpression</B> in the 
            <see cref="T:Telerik.Reporting.Data.SortExpressionCollection" />.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Data.SortExpressionCollection.CopyTo(Telerik.Reporting.Data.SortExpression[],System.Int32)">
      <summary>
            Copies the entire
            <see cref="T:Telerik.Reporting.Data.SortExpressionCollection" />
            to the specified <I>array</I>, starting at the specified index of 
            the target array.
            </summary>
      <param name="array">
            The one-dimensional array that is the destination of the elements 
            copied from 
            <see cref="T:Telerik.Reporting.Data.SortExpressionCollection" />. 
            The <I>array</I> must have zero-based indexing.
            </param>
      <param name="index">
            The zero-based index in <I>array</I> at which copying begins.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Data.SortExpressionCollection.ToArray">
      <summary>
            Copies the elements of the 
            <see cref="T:Telerik.Reporting.Data.SortExpressionCollection" /> to 
            a new <see cref="T:Telerik.Reporting.Data.SortExpression" /> array.
            </summary>
      <returns>
            An <B>SortExpression</B> array containing copies of the elements 
            of the <B>SortExpressionCollection</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Data.SortExpressionCollection.OnValidate(System.Object)">
      <summary>
            Performs additional custom processes when validating a value. 
            </summary>
      <param name="value">
            The object to validate.
            </param>
      <exception cref="T:System.ArgumentException">
            The object is not a
            <see cref="T:Telerik.Reporting.Data.SortExpression" />.
            </exception>
    </member>
    <member name="P:Telerik.Reporting.Data.SortExpressionCollection.Item(System.Int32)">
      <summary>
            Returns the <see cref="T:Telerik.Reporting.Data.SortExpression" /> 
            at the specified indexed location in the collection.
            </summary>
      <param name="index">
            The index of the sort expression to retrieve from the sort 
            expression collection.
            </param>
      <value>
            The <see cref="T:Telerik.Reporting.Data.SortExpression" /> located 
            at the specified index location within the sort expression 
            collection. 
            </value>
    </member>
    <member name="T:Telerik.Reporting.Data.Sorting">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Data.SortingCollection">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Data.SortOrder">
      <summary>
            Specifies how items in a list are sorted.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Data.SortOrder.Ascending">
      <summary>
            The items are sorted in ascending order.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Data.SortOrder.Descending">
      <summary>
            The items are sorted in ascending order.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.ShapeBase">
      <summary>
            Base class for all shape types.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.ShapeBase" /> with 
            zero angle of rotation.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.#ctor(System.Double)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.ShapeBase" /> with 
            the specified angle of rotation in degrees.
            </summary>
      <param name="angle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.CreateShape">
      <summary>
            When overriden this method should create the shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Adds a straight line to the shape.
            </summary>
      <param name="point1">
            The statr point of the line.
            </param>
      <param name="point2">
            The end point of the line.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.AddLines(System.Drawing.PointF[],System.Boolean)">
      <summary>
            Adds a series of straight lines to the shape.
            </summary>
      <param name="points">
            A point array representing the starting and ending points of the
            lines.
            </param>
      <param name="close">
            A <I>boolean</I> value specifying whether to close the shape.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.AddBeziers(System.Drawing.PointF[])">
      <summary>
            Adds a Bezier curve to the shape.
            </summary>
      <param name="points">
            A point array representing the points of the Bezier curve.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.AddEllipse(System.Drawing.RectangleF)">
      <summary>
            Adds an ellipse to the shape.
            </summary>
      <param name="bounds">
            The bounding rectangle of the ellipse.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.RecreateShape">
      <summary>
            Recreates the shape.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.ShapeBase.AngleInRad">
      <summary>
            Gets the angle of rotation of this shape in radians.
            </summary>
      <value>
            A <I>double</I> value representing the angle of rotation of this 
            shape in radians.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.ShapeBase.Bounds">
      <summary>
            Gets or sets the bounds of this shape.
            </summary>
      <value>
            A <see cref="T:System.Drawing.RectangleF" /> structure representing
            the bounds of this shape.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.RoundedCornerShape">
      <summary>
            Represents shape with rounded corners.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.RoundedCornerShape.#ctor(System.Double,System.Int32)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.RoundedCornerShape" /> 
            with the specified angle of rotation in degrees.
            </summary>
      <param name="angle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
      <param name="rounding">
            An <I>int</I> value between 0 and 100 specifying the rounding of
            the edges in percent.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.RoundedCornerShape.CreateShape">
      <summary>
            Creates the shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.RoundedCornerShape.CreateRawShape">
      <summary>
            When overriden this method should create shape 
            that will be rounded using the RoundVertexOp operator.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.RoundedCornerShape.Rounding">
      <summary>
            Gets or sets the rounding factor for the shape.
            </summary>
      <value>
            A <I>double</I> value between 0 and 100 specifying the rounding
            factor of the shape. 0 means no rounding, 100 means full rounding.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.ArrowShape">
      <summary>
            Represents an arrow shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.ArrowShape.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.ArrowShape" /> with 
            zero angle of rotation.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.ArrowShape.#ctor(System.Double,System.Int32)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.ArrowShape" /> with 
            the specified angle of rotation in degrees.
            </summary>
      <param name="angle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
      <param name="rounding">
            An <I>int</I> value between 0 and 100 specifying the rounding of
            the edges in percent.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.ArrowShape.CreateRawShape">
      <summary>
            Creates the raw shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.ArrowShape.ToString">
      <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.ArrowShape" />.
            </summary>
      <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.ArrowShape" />.
            </returns>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.IShapeSegment">
      <summary>
            Represents a shape segment.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.IShapeSegment.Points">
      <summary>
            Gets the points of this segment.
            </summary>
      <value>
            A point array representing the points of the segment.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.BezierSegment">
      <summary>
            Represents a Bezier curve segment of a shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.BezierSegment.#ctor(System.Drawing.PointF[])">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.BezierSegment" /> class 
            with the specified points.
            </summary>
      <param name="points">
            A point array representing the points of the segment. The array 
            should contain 4 points -- start, control1, control2 and end.
            </param>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.BezierSegment.Points">
      <summary>
            Gets the points of this segment.
            </summary>
      <value>
            A point array representing the points of the segment.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.BezierSegment.StartPoint">
      <summary>
            Gets the start point of this segment.
            </summary>
      <value>
            The start point of the segment.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.BezierSegment.ControlPoint1">
      <summary>
            Gets the first control point of this segment.
            </summary>
      <value>
            The first control point of the segment.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.BezierSegment.ControlPoint2">
      <summary>
            Gets the second control point of this segment.
            </summary>
      <value>
            The second control point of the segment.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.BezierSegment.EndPoint">
      <summary>
            Gets the end point of this segment.
            </summary>
      <value>
            The end point of the segment.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.CrossShape">
      <summary>
            Represents an cross shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.CrossShape.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.CrossShape" /> with 
            zero angle of rotation.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.CrossShape.#ctor(System.Double,System.Int32)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.CrossShape" /> with 
            the specified angle of rotation in degrees.
            </summary>
      <param name="angle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
      <param name="rounding">
            An <I>int</I> value between 0 and 100 specifying the rounding of
            the edges in percent.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.CrossShape.CreateRawShape">
      <summary>
            Creates the raw shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.CrossShape.ToString">
      <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.CrossShape" />.
            </summary>
      <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.CrossShape" />.
            </returns>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.Ellipse">
      <summary>
            Represents an ellipse segment of a shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.Ellipse.#ctor(System.Drawing.RectangleF)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.Ellipse" /> class 
            with the specified points.
            </summary>
      <param name="rectangle">
            A <see cref="T:System.Drawing.RectangleF" /> structure representing
            the bounding rectangle of the segment. 
            </param>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.Ellipse.Rectangle">
      <summary>
            Gets the bounding rectangle of the segment. 
            </summary>
      <value>
            A <see cref="T:System.Drawing.RectangleF" /> structure representing
            the bounding rectangle of the segment. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.Ellipse.Points">
      <summary>
            Gets the points of this segment.
            </summary>
      <value>
            A point array representing the points of the segment.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.EllipseShape">
      <summary>
            Represents an ellipse shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.EllipseShape.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.EllipseShape" /> with 
            zero angle of rotation.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.EllipseShape.#ctor(System.Double)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.EllipseShape" /> with 
            the specified angle of rotation in degrees.
            </summary>
      <param name="angle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.EllipseShape.CreateShape">
      <summary>
            Creates the shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.EllipseShape.ToString">
      <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.EllipseShape" />.
            </summary>
      <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.EllipseShape" />.
            </returns>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.IShapeOperation">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.LineDirection">
      <summary>
            Represents the direction of a line in a shape.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.Shapes.LineDirection.NS">
      <summary>
            Vertical line
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.Shapes.LineDirection.EW">
      <summary>
            Horizontal line
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.Shapes.LineDirection.NWSE">
      <summary>
            Top-Right - Bottom-Left line
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.Shapes.LineDirection.NESW">
      <summary>
            Top-Left - Bottom-Right line
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.LineSegment">
      <summary>
            Represents line segment of a shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.LineSegment.#ctor(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.LineSegment" /> class 
            with the specified points.
            </summary>
      <param name="point1">
            The start point of the line segment.
            </param>
      <param name="point2">
            The end point of the line segment.
            </param>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.LineSegment.Points">
      <summary>
            Gets the points of this segment.
            </summary>
      <value>
            A point array representing the points of the segment.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.LineSegment.StartPoint">
      <summary>
            Gets the start point of this segment.
            </summary>
      <value>
            The start point of the segment.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.LineSegment.EndPoint">
      <summary>
            Gets the end point of this segment.
            </summary>
      <value>
            The end point of the segment.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.LineSegment.Length">
      <summary>
            Gets the length of the line.
            </summary>
      <value>
            A <I>float</I> value representing the lenght of the line segment.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.LineShape">
      <summary>
            Represents a line shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.LineShape.#ctor(Telerik.Reporting.Drawing.Shapes.LineDirection)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.LineShape" /> with 
            specified line direction.
            </summary>
      <param name="lineDirection">
            The direction of the line.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.LineShape.CreateShape">
      <summary>
            Creates the shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.LineShape.ToString">
      <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.LineShape" />.
            </summary>
      <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.LineShape" />.
            </returns>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.MathHelper">
      <summary>
      </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.MathHelper.CalcCirclePoint(System.Drawing.PointF,System.Double,System.Double)">
      <summary>
            The circle in polar coordinates.
            x = x0 + R*cos(Alpha)
            y = y0 + R*sin(Alpha)
            </summary>
      <param name="center">Center of the circle</param>
      <param name="radius">Radius of the circle</param>
      <param name="angle">An angle, measured in radians</param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.MathHelper.CenterOfRect(System.Drawing.RectangleF)">
      <summary>
            Returns the center of point of a rectangle
            </summary>
      <param name="bounds">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.MathHelper.CalcScaleFactor(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Boolean)">
      <summary>
            Returns the scaling factor to stretch the size of the source rectangle
            to the size of the destination rectangle.
            </summary>
      <param name="source">Rectangle to stretch</param>
      <param name="destination">Rectangle to which the src rectangle will be stretched</param>
      <param name="proportional">
            if true the source rectangle will be scaled proportional by width and height;
            otherwise the width/height ratio won't be preserved.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.MathHelper.Divide(System.Single,System.Single,System.Single)">
      <summary>
            Factor [0 - 1]
                0 - result === start
                1 - result === end
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.PolygonShapeBase">
      <summary>
            Represents  the base class for all polygon shapes.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShapeBase.#ctor(System.Int32,System.Double,System.Int32)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.PolygonShapeBase" /> with 
            the specified vertex count and angle of rotation in degrees.
            </summary>
      <param name="vertexCount">
            The number of vertices of the polygon.
            </param>
      <param name="angle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
      <param name="rounding">
            An <I>int</I> value between 0 and 100 specifying the rounding of
            the edges in percent.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShapeBase.CreateRawShape">
      <summary>
            Creates the raw shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShapeBase.GetPoints(System.Drawing.RectangleF)">
      <summary>
            Gets the points of this shape.
            </summary>
      <param name="bounds">
            The bound of the shape.
            </param>
      <returns>
            A point array representing the points of this shape.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShapeBase.GetPointsCore(System.Drawing.PointF,System.Int32,System.Double,System.Double)">
      <summary>
            Gets the core points for this shape.
            </summary>
      <param name="center">
            The center of the shape.
            </param>
      <param name="segmentCount">
            The number of segments of the shape.
            </param>
      <param name="radius">
            The radius of the shape.
            </param>
      <param name="angle">
            The angle of rotation of the shape.
            </param>
      <returns>
            A point array representing the core points of this shape.
            </returns>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.PolygonShape">
      <summary>
            Represents a polygon shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShape.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.PolygonShape" /> with 
            the specified vertex count and zero angle of rotation.
            </summary>
      <param name="vertexCount">
            The number of vertices of the shape.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShape.#ctor(System.Int32,System.Double,System.Int32)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.PolygonShape" /> with 
            the specified vertex count and angle of rotation in degrees.
            </summary>
      <param name="vertexCount">
            The number of vertices of the shape.
            </param>
      <param name="angle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
      <param name="rounding">
            An <I>int</I> value between 0 and 100 specifying the rounding of
            the edges in percent.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShape.GetPoints(System.Drawing.RectangleF)">
      <summary>
            Gets the points of this shape.
            </summary>
      <param name="bounds">
            The bound of the shape.
            </param>
      <returns>
            A point array representing the points of this shape.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShape.ToString">
      <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.PolygonShape" />.
            </summary>
      <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.PolygonShape" />.
            </returns>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.ShapeOperationBase">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.RotateShapeOp">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.RoundVertexOp">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.ScaleShapeOp">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.ShapeBoundingRectangleOp">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.Action">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.ShapeIterator">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.ShapeOperator">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.ShortestLineVertexOp">
      <summary>
            Scans the shape segments and for any 2 consecutive lines
            splits the longer line in 2 parts so the vertex
            will occur between 2 equal lines.
            
                     L2
                   +-----
                  /  L1' == L2
            L1  ./  
                /
               /   L1"
              /
            
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.StarShape">
      <summary>
            Represents a star shape.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.StarShape.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.StarShape" /> with 
            the specified vertex count, 50% concavity, and zero angle of rotation.
            </summary>
      <param name="vertexCount">
            The number of vertices of the shape.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.StarShape.#ctor(System.Int32,System.Int32,System.Double,System.Int32)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.StarShape" /> with 
            the specified vertex count, concavity, and angle of rotation in degrees.
            </summary>
      <param name="vertexCount">
            The number of vertices of the shape.
            </param>
      <param name="concavity">
            The concavity in percent of the shape.
            </param>
      <param name="angle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
      <param name="rounding">
            An <I>int</I> value between 0 and 100 specifying the rounding of
            the edges in percent.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.StarShape.GetPoints(System.Drawing.RectangleF)">
      <summary>
            Gets the points of this shape.
            </summary>
      <param name="bounds">
            The bound of the shape.
            </param>
      <returns>
            A point array representing the points of this shape.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Shapes.StarShape.ToString">
      <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.StarShape" />.
            </summary>
      <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.StarShape" />.
            </returns>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Shapes.StarShape.Concavity">
      <summary>
            Gets or sets a percent value specifying the concavity of the shape. 
            </summary>
      <value>
            An <I>int</I> value between 0 and 100 specifying the concavity
            of the shape in percent.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Shapes.TranslateShapeOp">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.ISelector">
      <summary>
            Allows an object to implement a style selector, and represents a set
            of methods to match a <see cref="T:Telerik.Reporting.ReportItemBase" /> 
            and clone the selector.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.ISelector.Match(Telerik.Reporting.ReportItemBase)">
      <summary>
            Matches a <see cref="T:Telerik.Reporting.ReportItemBase" /> based on 
            certain criteria.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase" /> to match.
            </param>
      <returns>
        <B>true</B> if <I>item</I> matches; otherwise <B>false</B>.
            </returns>
    </member>
    <member name="T:Telerik.Reporting.Drawing.TypeSelector">
      <summary>
            Represents a selector base on a <see cref="T:System.Type" /></summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.TypeSelector.AnyType">
      <summary>
            Initializes a new type that matches any type of report item.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.TypeSelector.PopulateInternalMap">
      <summary>
            Shortcut for all built-in types: appear as type names only in the type selector
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.TypeSelector.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.TypeSelector" /> class that
            matches any type of report item.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.TypeSelector.#ctor(System.Type)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.TypeSelector" /> class that
            matches items of the specified <I>type</I>.
            </summary>
      <param name="type">The <see cref="T:System.Type" /> that this selector
            matches.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.TypeSelector.Match(Telerik.Reporting.ReportItemBase)">
      <summary>
            Matches a <see cref="T:Telerik.Reporting.ReportItemBase" /> based on 
            its type.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase" /> to match.
            </param>
      <returns>
        <B>true</B> if <I>item</I> matches; otherwise <B>false</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.TypeSelector.DeepClone">
      <summary>
            Performs a deep clone of the 
            <see cref="T:Telerik.Reporting.Drawing.TypeSelector" />.
            </summary>
      <returns>
            The cloned <see cref="T:Telerik.Reporting.Drawing.TypeSelector" /></returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.TypeSelector.CopyTo(Telerik.Reporting.Drawing.TypeSelector)">
      <summary>
            Copies this <B>TypeSelector</B> to the specified <I>typeSelector</I>.
            </summary>
      <param name="typeSelector">
            The <see cref="T:Telerik.Reporting.Drawing.TypeSelector" /> to copy 
            to.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.TypeSelector.OnTypeChange">
      <summary>
            Called when the 
            <see cref="P:Telerik.Reporting.Drawing.TypeSelector.Type" /> of this
            selector changes.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.TypeSelector.ToString">
      <summary>
            Creates a human-readable string that represents this 
            <see cref="T:Telerik.Reporting.Drawing.TypeSelector" />. 
            </summary>
      <returns>
            A string that represents this <B>TypeSelector</B>. 
            </returns>
    </member>
    <member name="P:Telerik.Reporting.Drawing.TypeSelector.Type">
      <summary>
            Gets or sets the <see cref="T:System.Type" /> that this selector
            matches.
            </summary>
      <value>
            A <see cref="T:System.Type" /> value to match.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.AttributeSelectorBase">
      <summary>
            Provides the <B>abstract</B> base class for an attribute selector. 
            </summary>
      <remarks>
        <para>
            Selectors are defined for each 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> in the 
            <see cref="P:Telerik.Reporting.Report.StyleSheet" />.
            </para>
      </remarks>
    </member>
    <member name="F:Telerik.Reporting.Drawing.AttributeSelectorBase.descriptor">
      <summary>
            The property descriptor associated with the property that this
            selector matches.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.AttributeSelectorBase.attributeName">
      <summary>
            The name of the property to match.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.AttributeSelectorBase.attributeValue">
      <summary>
            The value of the property to match.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.AttributeSelectorBase.#ctor">
      <summary>
            Initializes a new instance of the <B>AttributeSelectorBase</B> 
            class with an empty property name and value, that matches all
            <see cref="T:Telerik.Reporting.ReportItemBase" /> objects.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.AttributeSelectorBase.#ctor(System.String,System.Object)">
      <summary>
            Initializes a new instance of the <B>AttributeSelectorBase</B> 
            class with the specified property name and value, that matches all
            <see cref="T:Telerik.Reporting.ReportItemBase" /> objects.
            </summary>
      <param name="propertyName">
            A string value indicating the property name to match.
            </param>
      <param name="propertyValue">
            A string value indicating the property value to match.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.AttributeSelectorBase.#ctor(System.Type,System.String,System.Object)">
      <summary>
            Initializes a new instance of the <B>AttributeSelectorBase</B> 
            class with the specified property name and value, that matches 
            items of the specified type.
            </summary>
      <param name="type">
            A <see cref="T:System.Type" /> value indicating the type of the items
            to match.
            </param>
      <param name="propertyName">
            A string value indicating the property name to match.
            </param>
      <param name="propertyValue">
            A string value indicating the property value to match.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.AttributeSelectorBase.CopyTo(Telerik.Reporting.Drawing.TypeSelector)">
      <summary>
            Copies the property name and value of the selector to the target
            <I>typeSelector</I>.
            </summary>
      <param name="typeSelector">
            The <see cref="T:Telerik.Reporting.Drawing.TypeSelector" /> to copy 
            to.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.AttributeSelectorBase.Match(Telerik.Reporting.ReportItemBase)">
      <summary>
            Matches a report item by the value of its property.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase" /> to match.
            </param>
      <returns>
        <B>true</B> if the <I>item</I>'s property value matches.
            </returns>
    </member>
    <member name="T:Telerik.Reporting.Drawing.AttributeSelector">
      <summary>
            Represents a selector that matches a property value of a report item.
            </summary>
      <remarks>
        <para>
            Selectors are defined for each 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> in the 
            <see cref="P:Telerik.Reporting.Report.StyleSheet" />.
            </para>
        <para>
          <B>AttributeSelector</B> should be used when you want to match all 
            report items of a certain <B>Type</B> that have a property set to a 
            certain value.
            </para>
      </remarks>
    </member>
    <member name="T:Telerik.Reporting.Drawing.AttributeSelector.PropertyValueDescriptor">
      <summary>
      </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.AttributeSelector.ToString">
      <summary>
            This member overrides <see cref="M:System.Object.ToString" /></summary>
      <returns>
            A string value describing the selector.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.AttributeSelector.OnTypeChange">
      <summary>
            This member overrides 
            <see cref="M:Telerik.Reporting.Drawing.TypeSelector.OnTypeChange" />.
            The method resets the selector.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Drawing.AttributeSelector.PropertyName">
      <summary>
            Gets or sets the name of the property to match.
            </summary>
      <value>
            The name of the property to match.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.AttributeSelector.PropertyValue">
      <summary>
            Gets or sets the value of the property to match.
            </summary>
      <value>
            The value of the property to match.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.AttributeSelectorConverter">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.StyleBase">
      <summary>
            This class supports the Telerik Reporting infrastructure 
            and is not intended to be used directly from your code.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.StyleBase.StyleBasePropertyDescriptor">
      <summary>
            PropertyDescriptor for all properties of type StyleBase
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.BackgroundImage">
      <summary>
            Represents a background image associated with a 
            <see cref="T:Telerik.Reporting.Drawing.Style" /></summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.BackgroundImage.BackgroundImagePropertyDescriptor">
      <summary>
      </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.BackgroundImage.#ctor(Telerik.Reporting.Drawing.Style)">
      <summary>
            Initializes a new instance of the <B>BackgroundImage</B> class as
            a member of the given 
            <see cref="T:Telerik.Reporting.Drawing.Style" /></summary>
      <param name="style">
            A <see cref="T:Telerik.Reporting.Drawing.Style" /> value representing
            the parent style of the <B>BackgroundImage</B>.
            </param>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BackgroundImage.Repeat">
      <summary>
            Gets or sets a 
            <see cref="T:Telerik.Reporting.Drawing.BackgroundRepeat" /> value
            defining the repeat style of the <B>BackgroundImage</B>.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.BackgroundRepeat" /> value
            representing the repeat style of the <B>BackgroundImage</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BackgroundImage.ImageData">
      <summary>
            Gets or sets a <see cref="T:System.Drawing.Image" /> containing the
            image data of this <B>BackgroundImage</B>.
            </summary>
      <value>
            A <see cref="T:System.Drawing.Image" /> objetc containing the
            image data of this <B>BackgroundImage</B>.
            </value>
      <remarks>
            Use this property if you want to bind the <B>BackgroundImage</B>
            to an image that is not in the data source.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BackgroundImage.MimeType">
      <summary>
            Gets or sets the <B>MIME</B> type of the current 
            <see cref="T:Telerik.Reporting.Drawing.BackgroundImage" /> object.
            </summary>
      <value>
            The MIME type of the current <B>BackgroundImage</B> object. 
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.StylePropertyDescriptorBase">
      <summary>
            Base class for the PropertyDescriptors of all
            style properties (marked with StylePropertyAttribute)
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.BackgroundRepeat">
      <summary>
            Indicates how a background image will be repeated.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.BackgroundRepeat.NoRepeat">
      <summary>
            The background-image will be displayed only once.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.BackgroundRepeat.RepeatX">
      <summary>
            The background image will be repeated horizontally.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.BackgroundRepeat.RepeatY">
      <summary>
            The background image will be repeated vertically.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.BackgroundRepeat.Repeat">
      <summary>
            The background image will be repeated vertically and horizontally.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.BorderBase">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.BorderBaseConverter">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.BorderColor">
      <summary>
            A class used to specify the color of the border of an item.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.BorderColor.BorderColorPropertyDescriptor">
      <summary>
      </summary>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BorderColor.Default">
      <summary>
            Gets or sets the default color of the border.
            </summary>
      <value>
            The default border <see cref="T:System.Drawing.Color" />.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BorderColor.Top">
      <summary>
            Gets or sets the top color of the border.
            </summary>
      <value>
            The top border <see cref="T:System.Drawing.Color" />.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BorderColor.Bottom">
      <summary>
            Gets or sets the bottom color of the border.
            </summary>
      <value>
            The bottom border <see cref="T:System.Drawing.Color" />.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BorderColor.Left">
      <summary>
            Gets or sets the left color of the border.
            </summary>
      <value>
            The left border <see cref="T:System.Drawing.Color" />.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BorderColor.Right">
      <summary>
            Gets or sets the right color of the border.
            </summary>
      <value>
            The right border <see cref="T:System.Drawing.Color" />.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.BorderStyle">
      <summary>
            A class used to specify the style of the border of an item.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.BorderStyle.BorderStylePropertyDescriptor">
      <summary>
      </summary>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BorderStyle.Default">
      <summary>
            Gets or sets the default style of the border.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderType" /> object 
            specifying the default border style.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BorderStyle.Top">
      <summary>
            Gets or sets the top style of the border.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderType" /> object 
            specifying the top border style.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BorderStyle.Bottom">
      <summary>
            Gets or sets the bottom style of the border.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderType" /> object 
            specifying the bottom border style.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BorderStyle.Left">
      <summary>
            Gets or sets the left style of the border.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderType" /> object 
            specifying the left border style.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BorderStyle.Right">
      <summary>
            Gets or sets the right style of the border.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderType" /> object 
            specifying the right border style.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.BorderType">
      <summary>
            Specifies the type of a border.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.BorderType.None">
      <summary>
            No line.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.BorderType.Dotted">
      <summary>
            A dotted line.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.BorderType.Dashed">
      <summary>
            A dashed line.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.BorderType.Solid">
      <summary>
            A solid line.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.BorderType.Double">
      <summary>
            A double solid line.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.BorderType.Groove">
      <summary>
            A grooved line for a sunken border appearance.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.BorderType.Ridge">
      <summary>
            A ridged line for a raised border appearance.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.BorderType.Inset">
      <summary>
            An inset line for a sunken item appearance.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.BorderType.Outset">
      <summary>
            An outset line for a raised item appearance.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.BorderWidth">
      <summary>
            A class used to specify the width of the border of an item.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.BorderWidth.BorderWidthPropertyDescriptor">
      <summary>
      </summary>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BorderWidth.Default">
      <summary>
            Gets or sets the default width of the border.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit" />  
            specifying the default border width.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BorderWidth.Top">
      <summary>
            Gets or sets the top width of the border.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit" />  
            specifying the top border width.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BorderWidth.Bottom">
      <summary>
            Gets or sets the bottom width of the border.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit" />  
            specifying the bottom border width.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BorderWidth.Left">
      <summary>
            Gets or sets the left width of the border.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit" />  
            specifying the left border width.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.BorderWidth.Right">
      <summary>
            Gets or sets the right width of the border.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit" />  
            specifying the right border width.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.ChildStylePropertyAttribute">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.ConditionalFormatting">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.DescendantSelector">
      <summary>
            Represents a selector that matches an item that is a descendant of
            another item.
            </summary>
      <remarks>
        <para>
            At times, authors may want selectors to match an item that is the 
            descendant of another item in the report item tree (e.g., "Match those 
            TextBox elements that are contained by a Panel element"). Descendant 
            selectors express such a relationship in a pattern.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.DescendantSelector.#ctor">
      <summary>
            Initializes a new instance of the <B>DescendantSelector</B>.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.DescendantSelector.#ctor(Telerik.Reporting.Drawing.ISelector[])">
      <summary>
            Initializes a new instance of the <B>DescendantSelector</B> 
            class with the specified <I>selectors</I>.
            </summary>
      <param name="selectors">
            A <see cref="T:Telerik.Reporting.Drawing.ISelector" /> array
            containig the selectors that define the descendence pattern used 
            to match the item.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.DescendantSelector.Match(Telerik.Reporting.ReportItemBase)">
      <summary>
            Matches a report item based on the descendence pattern defined by 
            the 
            <see cref="P:Telerik.Reporting.Drawing.DescendantSelector.Selectors" /></summary> of this selector.
            <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase" /> to match.
            </param><returns><B>true</B> if the <I>item</I> matches the descendence pattern.
            </returns></member>
    <member name="M:Telerik.Reporting.Drawing.DescendantSelector.ToString">
      <summary>
            This member overrides <see cref="M:System.Object.ToString" /></summary>
      <returns>
            A string value describing the selector.
            </returns>
    </member>
    <member name="P:Telerik.Reporting.Drawing.DescendantSelector.Selectors">
      <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.SelectorCollection" />
            containig the selectors that define the descendence pattern used 
            to match the item.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.ExternalStyleSheet">
      <summary>
            Represents an external style sheet used to style a report.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.ExternalStyleSheet.#ctor(System.String)">
      <summary>
            Creates a new ExternalStyleSheet with the given resource identifier.
            </summary>
      <param name="name">The identifier for the resource
            containing the external style sheet. This parameter can be an 
            absolute or relative filepath, an absolute or relative URL, or the 
            name of an embedded resource.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.ExternalStyleSheet.#ctor(System.IO.Stream)">
      <summary>
            Creates a new ExternalStyleSheet by loading it from the specified 
            stream.
            </summary>
      <param name="stream">The stram to load from.</param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.ExternalStyleSheet.#ctor(System.Uri)">
      <summary>
            Creates a new ExternalStyleSheet by loading it from the specified 
            Uri.
            </summary>
      <param name="uri">The Uri to load from.</param>
    </member>
    <member name="T:Telerik.Reporting.Drawing.ExternalStyleSheetCollection">
      <summary>
            Represents a collection of 
            <see cref="T:Telerik.Reporting.Drawing.ExternalStyleSheet" /> objects. 
            </summary>
      <remarks>
            Each time an <see cref="T:Telerik.Reporting.Drawing.ExternalStyleSheet" />
            object is inserted, deleted or set in this collection, the 
            <see cref="T:Telerik.Reporting.Report" /> that owns the collection is
            refreshed by re-applying or internal and external style sheets.
            </remarks>
    </member>
    <member name="T:Telerik.Reporting.Drawing.ExternalStyleSheetCollectionConverter">
      <summary>
            ExternalStyleSheetCollectionConverter
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.ExternalStyleSheetConverter">
      <summary>
            ExternalStyleSheetConverter
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Font">
      <summary>
            Defines a particular format for text, including font face, size, and 
            style attributes.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Font.FontPropertyDescriptor">
      <summary>
      </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Font.#ctor(Telerik.Reporting.Drawing.Style)">
      <summary>
            Initializes a new instance of the <B>Font</B> class as
            a member of the given 
            <see cref="T:Telerik.Reporting.Drawing.Style" /></summary>
      <param name="style">
            A <see cref="T:Telerik.Reporting.Drawing.Style" /> value representing
            the parent style of the <B>Font</B>.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Font.ToString">
      <summary>
            This member overrides <see cref="M:System.Object.ToString" /></summary>
      <returns>
            A string value describing the <B>Font</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Font.op_Explicit(Telerik.Reporting.Drawing.Font)~System.Drawing.Font">
      <summary>
            Converts the specified reporting 
            <see cref="T:Telerik.Reporting.Drawing.Font" /> to a 
            <see cref="T:System.Drawing.Font" />.
            </summary>
      <param name="font">
            The <see cref="T:Telerik.Reporting.Drawing.Font" /> to convert. 
            </param>
      <returns>
            The <see cref="T:System.Drawing.Font" /> that is converted from the 
            specified reporting <B>Font</B> structure. 
            </returns>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Font.Name">
      <summary>
            Gets or sets the face name of this 
            <see cref="T:Telerik.Reporting.Drawing.Font" />. 
            </summary>
      <value>
            A string representation of the face name of this <B>Font</B>. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Font.Size">
      <summary>
            Gets or sets the size of this 
            <see cref="T:Telerik.Reporting.Drawing.Font" /> measured in 
            <see cref="T:Telerik.Reporting.Drawing.Unit" />s.
            </summary>
      <value>
            The <see cref="T:Telerik.Reporting.Drawing.Unit" /> size of this 
            <B>Font</B>.  
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Font.Bold">
      <summary>
            Gets a value that indicates whether this 
            <see cref="T:Telerik.Reporting.Drawing.Font" /> is bold. 
            </summary>
      <value>
        <B>true</B> if this <B>Font</B> is bold; otherwise, <B>false</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Font.Italic">
      <summary>
            Gets a value that indicates whether this 
            <see cref="T:Telerik.Reporting.Drawing.Font" /> is italic. 
            </summary>
      <value>
        <B>true</B> if this <B>Font</B> is italic; otherwise, <B>false</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Font.Underline">
      <summary>
            Gets a value that indicates whether this 
            <see cref="T:Telerik.Reporting.Drawing.Font" /> is underlined. 
            </summary>
      <value>
        <B>true</B> if this <B>Font</B> is underlined; otherwise, <B>false</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Font.Strikeout">
      <summary>
            Gets a value that indicates whether this 
            <see cref="T:Telerik.Reporting.Drawing.Font" /> specifies a horizontal 
            line through the font. 
            </summary>
      <value>
        <B>true</B> if this <B>Font</B> has a horizontal line through it; 
            otherwise, <B>false</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Font.Style">
      <summary>
            Gets ot sets style information for this 
            <see cref="T:Telerik.Reporting.Drawing.Font" />.
            </summary>
      <value>
            A <see cref="T:System.Drawing.FontStyle" /> enumeration that contains 
            style information for this <B>Font</B>.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.FormattingRule">
      <summary>
      </summary>
    </member>
    <member name="P:Telerik.Reporting.Drawing.FormattingRule.StopIfTrue">
      <summary>
            Indicates whether if the current rule is applied to proceed 
            with the next FormattingRule in the ReportItemBase.ConditionalFormattings
            collection.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.ImageSizeMode">
      <summary>
            Specifies how an image is positioned within an item.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.ImageSizeMode.AutoSize">
      <summary>
            Grows or shrinks borders of the image item to fit the image.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.ImageSizeMode.Center">
      <summary>
            The image is displayed in the center of the item. 
            If the image is larger than the item, the image is clipped
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.ImageSizeMode.Normal">
      <summary>
            Clips the image to fit the height and width of the PictureBox.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.ImageSizeMode.Stretch">
      <summary>
            Resizes the image to match the height and width of the PictureBox.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.ImageSizeMode.ScaleProportional">
      <summary>
            Resizes the image to match the height and width of the PictureBox, 
            preserving the aspect ratio.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.InheritParentStyleAttribute">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.LineStyle">
      <summary>
            Specifies the type of a line item
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.MarginsU">
      <summary>
            Mockup class -- TO BE REMOVED!!!
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Padding">
      <summary>
            Represents padding information associated with a report item.
            </summary>
      <remarks>
        <para>
            The padding is the internal space between the body of the item and its 
            edge.
            </para>
        <para>
            Padding has a different effect on report items that are containers than 
            on report items that are not. For example, in a 
            <see cref="T:Telerik.Reporting.Panel" /> item, the <B>Padding</B> property 
            defines the spacing between the border of the <B>Panel</B> and its 
            child items. For a <see cref="T:Telerik.Reporting.TextBox" /> item, the 
            <B>Padding</B> property defines the spacing between the border of the 
            <B>TextBox</B> item and its contained text.
            </para>
      </remarks>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Padding.PaddingPropertyDescriptor">
      <summary>
      </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Padding.#ctor(Telerik.Reporting.Drawing.Style)">
      <summary>
            Initializes a new instance of the <B>Padding</B> class as
            a member of the given 
            <see cref="T:Telerik.Reporting.Drawing.Style" /></summary>
      <param name="style">
            A <see cref="T:Telerik.Reporting.Drawing.Style" /> value representing
            the parent style of the <B>Padding</B>.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Padding.ToString">
      <summary>
            This member overrides <see cref="M:System.Object.ToString" /></summary>
      <returns>
            A string value listing the <B>Padding</B>'s members.
            </returns>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Padding.Left">
      <summary>
            Gets or sets the padding value for the left edge.
            </summary>
      <value>
            The padding, in <see cref="T:Telerik.Reporting.Drawing.Unit" />s, for 
            the left edge.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Padding.Right">
      <summary>
            Gets or sets the padding value for the right edge.
            </summary>
      <value>
            The padding, in <see cref="T:Telerik.Reporting.Drawing.Unit" />s, for 
            the right edge.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Padding.Top">
      <summary>
            Gets or sets the padding value for the top edge.
            </summary>
      <value>
            The padding, in <see cref="T:Telerik.Reporting.Drawing.Unit" />s, for 
            the top edge.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Padding.Bottom">
      <summary>
            Gets or sets the padding value for the bottom edge.
            </summary>
      <value>
            The padding, in <see cref="T:Telerik.Reporting.Drawing.Unit" />s, for 
            the bottom edge.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.PageSettings">
      <summary>
            Specifies settings that apply to a single, printed page. 
            </summary>
      <remarks>
            The <B>PageSettings</B> class is used to specify settings that modify 
            the way a page will be printed.
            </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PageSettings.#ctor">
      <summary>
            Initializes a new instance of the <B>PageSettings</B> 
            class with the default settings.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PageSettings.#ctor(System.Drawing.Printing.PageSettings,System.Drawing.Printing.PrinterSettings)">
      <summary>
            Initializes a new instance of the <B>PageSettings</B> 
            class with the specified 
            <see cref="T:System.Drawing.Printing.PageSettings" /> and
            <see cref="T:System.Drawing.Printing.PrinterSettings" />.
            </summary>
      <param name="pageSettings">
            A <see cref="T:System.Drawing.Printing.PageSettings" /> object
            specifying the landscape and paper kind.
            </param>
      <param name="printerSettings">
            A <see cref="T:System.Drawing.Printing.PrinterSettings" /> object
            specifying the papers size and margins.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PageSettings.Clone">
      <summary>
            This member implements <see cref="M:System.ICloneable.Clone" /></summary>
      <returns>
            The cloned <B>PageSettings</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PageSettings.ToPageSettings(System.Drawing.Printing.PrinterSettings)">
      <summary>
            Returns a <see cref="T:System.Drawing.Printing.PageSettings" />
            object based on the given
            <see cref="T:System.Drawing.Printing.PrinterSettings" /> parameter.
            </summary>
      <param name="printerSettings">
            A <see cref="T:System.Drawing.Printing.PrinterSettings" /> object
            from which to create the 
            <see cref="T:System.Drawing.Printing.PageSettings" />.
            </param>
      <returns>
            A <see cref="T:System.Drawing.Printing.PageSettings" /> object 
            initialized from the <I>printerSettings</I>.
            </returns>
    </member>
    <member name="P:Telerik.Reporting.Drawing.PageSettings.PaperKind">
      <summary>
            Gets or sets the paper kind for the page.
            </summary>
      <value>
            A <see cref="T:System.Drawing.Printing.PaperKind" /> that represents 
            the kind of the paper.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.PageSettings.PaperSize">
      <summary>
            Gets or sets the paper size for the page.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.SizeU" /> that represents 
            the size of the paper.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.PageSettings.Landscape">
      <summary>
            Gets or sets a value indicating whether the page is printed in 
            landscape or portrait orientation.
            </summary>
      <value>
        <B>true</B> if the page should be printed in landscape orientation; 
            otherwise, <B>false</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.PageSettings.Margins">
      <summary>
            Gets or sets the margins for this page.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.MarginsU" /> that represents 
            the margins for the page.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.PageSettingsConverter">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.PageSettingsConverter.PaperSizeConverter">
      <summary>
            Non-expandable SizeU Converter
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.SizeUConverter">
      <summary>
            Converts a <see cref="T:Telerik.Reporting.Drawing.SizeU" /> object from 
            one data type to another. Access this class through the 
            <see cref="T:System.ComponentModel.TypeDescriptor" /> object. 
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeUConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if this converter can convert an object in the given 
            source type to the native type of the converter.
            </summary>
      <param name="context">
            A formatter context. This object can be used to get additional 
            information about the environment this converter is being called 
            from. This may be a null reference (<B>Nothing</B> in Visual 
            Basic), so you should always check. Also, properties on the context 
            object may also return a null reference (<B>Nothing</B> in Visual 
            Basic). 
            </param>
      <param name="sourceType">
            The type you want to convert from. 
            </param>
      <returns>
        <B>true</B> if this object can perform the conversion; otherwise, 
            <B>false</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeUConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Gets a value indicating whether this converter can convert an 
            object to the given destination type using the context.
            </summary>
      <param name="context">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 
            object that provides a format context.
            </param>
      <param name="destinationType">
            A <see cref="T:System.Type" /> object that represents the type you 
            want to convert to.
            </param>
      <returns>
        <B>true</B> if this converter can perform the conversion; 
            otherwise, <B>false</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeUConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Converts the specified object to a 
            <see cref="T:Telerik.Reporting.Drawing.SizeU" /> object. 
            </summary>
      <param name="context">
            A formatter context. This object can be used to get additional 
            information about the environment this converter is being called 
            from. This may be a null reference (<B>Nothing</B> in Visual 
            Basic), so you should always check. Also, properties on the context 
            object may also return a null reference (<B>Nothing</B> in Visual 
            Basic). 
            </param>
      <param name="culture">
            An object that contains culture specific information, such as the 
            language, calendar, and cultural conventions associated with a 
            specific culture. It is based on the RFC 1766 standard.
            </param>
      <param name="value">
            The object to convert.
            </param>
      <exception cref="T:System.ArgumentException">
            The conversion cannot be completed.
            </exception>
      <returns>
            The converted object.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeUConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Converts the specified object to the specified type. 
            </summary>
      <param name="context">
            A formatter context. This object can be used to get additional 
            information about the environment this converter is being called 
            from. This may be a null reference (<B>Nothing</B> in Visual 
            Basic), so you should always check. Also, properties on the context 
            object may also return a null reference (<B>Nothing</B> in Visual 
            Basic). 
            </param>
      <param name="culture">
            An object that contains culture specific information, such as the 
            language, calendar, and cultural conventions associated with a 
            specific culture. It is based on the RFC 1766 standard.
            </param>
      <param name="value">
            The object to convert.
            </param>
      <param name="destinationType">
            The type to convert the object to. 
            </param>
      <returns>
            The converted object.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeUConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
            Creates an instance of this type given a set of property values for 
            the object.
            </summary>
      <param name="context">
            A type descriptor through which additional context can be provided. 
            </param>
      <param name="propertyValues">
            A dictionary of new property values. The dictionary contains a 
            series of name-value pairs, one for each property returned from 
            <B>GetProperties</B>. 
            </param>
      <returns>
            The newly created object.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeUConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Determines if changing a value on this object should require a call 
            to <B>CreateInstance</B> to create a new value. 
            </summary>
      <param name="context">
            A type descriptor through which additional context can be provided. 
            </param>
      <returns>
        <B>true</B> if the <B>CreateInstance</B> method should be called 
            when a change is made to one or more properties of this object; 
            otherwise, <B>false</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeUConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            Retrieves the set of properties for this type. By default, a type 
            does not return any properties.
            </summary>
      <param name="context">
            A type descriptor through which additional context can be provided. 
            </param>
      <param name="value">
            The value of the object to get the properties for. 
            </param>
      <param name="attributes">
            An array of <see cref="T:System.Attribute" /> objects that describe 
            the properties. 
            </param>
      <returns>
            The set of properties that are exposed for this data type.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeUConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Determines if this object supports properties. By default, this is 
            <B>true</B>. 
            </summary>
      <param name="context">
            A type descriptor through which additional context can be provided.
            </param>
      <returns>
        <B>true</B> if <B>GetProperties</B> should be called to find the 
            properties of this object; otherwise, false. 
            </returns>
    </member>
    <member name="T:Telerik.Reporting.Drawing.PointU">
      <summary>
            Represents an ordered pair of unit-based point x- and y-coordinates
            that defines a point in a two-dimensional plane.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.PointU.Empty">
      <summary>
            Represents a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.PointU" /> class with member 
            data left uninitialized. 
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointU.#ctor(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Initializes a new instance of the PointU class with the specified
            coordinates.
            </summary>
      <param name="x">
            The horizontal position of the point.
            </param>
      <param name="y">
            The vertical position of the point.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointU.op_Addition(Telerik.Reporting.Drawing.PointU,Telerik.Reporting.Drawing.SizeU)">
      <summary>
            Translates the <B>PointU</B> by the specified <B>SizeU</B>. 
            </summary>
      <param name="pt">
            The <see cref="T:Telerik.Reporting.Drawing.PointU" /> to translate.
            </param>
      <param name="size">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU" /> that specifies 
            the numbers to add to the x- and y-coordinates of the 
            <B>PointU</B>.
            </param>
      <returns>
            The translated <B>PointU</B>.
            </returns>
      <remarks>
        <para>
            The <B>op_Addition</B> operator adds the 
            <see cref="P:Telerik.Reporting.Drawing.SizeU.Width" /> of the 
            specified size to the x-coordinate of the <B>PointU</B> and the 
            <see cref="P:Telerik.Reporting.Drawing.SizeU.Height" /> to the 
            y-coordinate of the <B>PointU</B>.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointU.op_Subtraction(Telerik.Reporting.Drawing.PointU,Telerik.Reporting.Drawing.SizeU)">
      <summary>
            Translates the <B>PointU</B> by the negative of a specified 
            <B>SizeU</B>. 
            </summary>
      <param name="pt">
            The <see cref="T:Telerik.Reporting.Drawing.PointU" /> to translate.
            </param>
      <param name="size">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU" /> that specifies 
            the numbers to subtract from the x- and y-coordinates of the 
            <B>PointU</B>.
            </param>
      <returns>
            The translated <B>PointU</B>.
            </returns>
      <remarks>
        <para>
            The <B>op_Subtraction</B> operator subtracts the 
            <see cref="P:Telerik.Reporting.Drawing.SizeU.Width" /> of the 
            specified size from the x-coordinate of the <B>PointU</B> and the 
            <see cref="P:Telerik.Reporting.Drawing.SizeU.Height" /> from the 
            y-coordinate of the <B>PointU</B>.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointU.op_Equality(Telerik.Reporting.Drawing.PointU,Telerik.Reporting.Drawing.PointU)">
      <summary>
            Compares two <B>PointU</B> structures. The result specifies whether 
            the values of the <see cref="P:Telerik.Reporting.Drawing.PointU.X" /> 
            and <see cref="P:Telerik.Reporting.Drawing.PointU.Y" /> properties of 
            the two <B>PointU</B> structures are equal. 
            </summary>
      <param name="pt1">
            A <see cref="T:Telerik.Reporting.Drawing.PointU" /> to compare. 
            </param>
      <param name="pt2">
            A <see cref="T:Telerik.Reporting.Drawing.PointU" /> to compare. 
            </param>
      <returns>
        <B>true</B> if the <B>X</B> and <B>Y</B> values of the left and 
            right <B>PointU</B> structures are equal; otherwise, <B>false</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointU.op_Inequality(Telerik.Reporting.Drawing.PointU,Telerik.Reporting.Drawing.PointU)">
      <summary>
            Determines whether the coordinates of the specified points are not 
            equal. 
            </summary>
      <param name="pt1">
            A <see cref="T:Telerik.Reporting.Drawing.PointU" /> to compare. 
            </param>
      <param name="pt2">
            A <see cref="T:Telerik.Reporting.Drawing.PointU" /> to compare. 
            </param>
      <returns>
        <B>true</B> to indicate the 
            <see cref="P:Telerik.Reporting.Drawing.PointU.X" /> and 
            <see cref="P:Telerik.Reporting.Drawing.PointU.Y" /> values of 
            <I>pt1</I> and <I>pt2</I> are not equal; otherwise, <B>false</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointU.op_Explicit(Telerik.Reporting.Drawing.PointU)~System.Drawing.PointF">
      <summary>
            Converts the specified reporting 
            <see cref="T:Telerik.Reporting.Drawing.PointU" /> to a 
            <see cref="T:System.Drawing.PointF" />.
            </summary>
      <param name="point">
            The <see cref="T:Telerik.Reporting.Drawing.PointU" /> to convert.
            </param>
      <returns>
            The <see cref="T:System.Drawing.PointF" /> that is converted from the 
            specified reporting <B>Point</B> structure. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointU.op_Explicit(Telerik.Reporting.Drawing.PointU)~System.Drawing.Point">
      <summary>
            Converts the specified reporting 
            <see cref="T:Telerik.Reporting.Drawing.PointU" /> to a 
            <see cref="T:System.Drawing.Point" />.
            </summary>
      <param name="point">
            The <see cref="T:Telerik.Reporting.Drawing.PointU" /> to convert.
            </param>
      <returns>
            The <see cref="T:System.Drawing.Point" /> that is converted from the 
            specified reporting <B>Point</B> structure. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointU.Equals(System.Object)">
      <summary>
            Specifies whether this 
            <see cref="T:Telerik.Reporting.Drawing.PointU" /> contains the same 
            coordinates as the specified <B>Object</B>. 
            </summary>
      <param name="obj">
            The <see cref="T:System.Object" /> to test.
            </param>
      <returns>
            This method returns <B>true</B> if <I>obj</I> is a <B>PointU</B> 
            and has the same coordinates as this 
            <see cref="T:Telerik.Reporting.Drawing.PointU" />. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointU.GetHashCode">
      <summary>
            Returns a hash code for this 
            <see cref="T:Telerik.Reporting.Drawing.PointU" /> structure. 
            </summary>
      <returns>
            An integer value that specifies a hash value for this <B>PointU</B> 
            structure. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointU.ToString">
      <summary>
            Converts this <see cref="T:Telerik.Reporting.Drawing.PointU" /> to a 
            human readable string. 
            </summary>
      <returns>
            A string that represents this <B>PointU</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointU.ToString(System.Globalization.CultureInfo)">
      <summary>
            Converts this <see cref="T:Telerik.Reporting.Drawing.PointU" /> to a 
            human readable string according to the 
            <see cref="T:System.Globalization.CultureInfo" /> specified. 
            </summary>
      <param name="culture">
            A <see cref="T:System.Globalization.CultureInfo" /> that is used to
            format the string.
            </param>
      <returns>
            A string that represents this <B>PointU</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointU.Offset(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Offsets this <see cref="T:Telerik.Reporting.Drawing.PointU" /> 
            structure by a specified amount in the x- and y-direction.
            </summary>
      <param name="dx">
            A <see cref="T:Telerik.Reporting.Drawing.Unit" /> value specifying
            the amount to offset in the horizontal direction.
            </param>
      <param name="dy">
            A <see cref="T:Telerik.Reporting.Drawing.Unit" /> value specifying
            the amount to offset in the vertical direction.
            </param>
    </member>
    <member name="P:Telerik.Reporting.Drawing.PointU.X">
      <summary>
            Gets or sets the x-coordinate of this
            <see cref="T:Telerik.Reporting.Drawing.PointU" /></summary>
      <value>
            The x-coordinate of this <B>PointU</B>. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.PointU.Y">
      <summary>
            Gets or sets the y-coordinate of this
            <see cref="T:Telerik.Reporting.Drawing.PointU" /></summary>
      <value>
            The y-coordinate of this <B>PointU</B>. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.PointU.IsEmpty">
      <summary>
            Gets a value indicating whether this 
            <see cref="T:Telerik.Reporting.Drawing.PointU" /> is empty. 
            </summary>
      <value>
        <B>true</B> if both 
            <see cref="P:Telerik.Reporting.Drawing.PointU.X" /> and 
            <see cref="P:Telerik.Reporting.Drawing.PointU.Y" /> are equal to zero;
            otherwise, <B>false</B>.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.PointUConverter">
      <summary>
            Converts a <see cref="T:Telerik.Reporting.Drawing.PointU" /> object from 
            one data type to another. Access this class through the 
            <see cref="T:System.ComponentModel.TypeDescriptor" /> object. 
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointUConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if this converter can convert an object in the given 
            source type to the native type of the converter.
            </summary>
      <param name="context">
            A formatter context. This object can be used to get additional 
            information about the environment this converter is being called 
            from. This may be a null reference (<B>Nothing</B> in Visual 
            Basic), so you should always check. Also, properties on the context 
            object may also return a null reference (<B>Nothing</B> in Visual 
            Basic). 
            </param>
      <param name="sourceType">
            The type you want to convert from. 
            </param>
      <returns>
        <B>true</B> if this object can perform the conversion; otherwise, 
            <B>false</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointUConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Gets a value indicating whether this converter can convert an 
            object to the given destination type using the context.
            </summary>
      <param name="context">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 
            object that provides a format context.
            </param>
      <param name="destinationType">
            A <see cref="T:System.Type" /> object that represents the type you 
            want to convert to.
            </param>
      <returns>
        <B>true</B> if this converter can perform the conversion; 
            otherwise, <B>false</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointUConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Converts the specified object to a 
            <see cref="T:Telerik.Reporting.Drawing.PointU" /> object. 
            </summary>
      <param name="context">
            A formatter context. This object can be used to get additional 
            information about the environment this converter is being called 
            from. This may be a null reference (<B>Nothing</B> in Visual 
            Basic), so you should always check. Also, properties on the context 
            object may also return a null reference (<B>Nothing</B> in Visual 
            Basic). 
            </param>
      <param name="culture">
            An object that contains culture specific information, such as the 
            language, calendar, and cultural conventions associated with a 
            specific culture. It is based on the RFC 1766 standard.
            </param>
      <param name="value">
            The object to convert.
            </param>
      <exception cref="T:System.ArgumentException">
            The conversion cannot be completed.
            </exception>
      <returns>
            The converted object.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointUConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Converts the specified object to the specified type. 
            </summary>
      <param name="context">
            A formatter context. This object can be used to get additional 
            information about the environment this converter is being called 
            from. This may be a null reference (<B>Nothing</B> in Visual 
            Basic), so you should always check. Also, properties on the context 
            object may also return a null reference (<B>Nothing</B> in Visual 
            Basic). 
            </param>
      <param name="culture">
            An object that contains culture specific information, such as the 
            language, calendar, and cultural conventions associated with a 
            specific culture. It is based on the RFC 1766 standard.
            </param>
      <param name="value">
            The object to convert.
            </param>
      <param name="destinationType">
            The type to convert the object to. 
            </param>
      <returns>
            The converted object.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointUConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
            Creates an instance of this type given a set of property values for 
            the object.
            </summary>
      <param name="context">
            A type descriptor through which additional context can be provided. 
            </param>
      <param name="propertyValues">
            A dictionary of new property values. The dictionary contains a 
            series of name-value pairs, one for each property returned from 
            <B>GetProperties</B>. 
            </param>
      <returns>
            The newly created object.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointUConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Determines if changing a value on this object should require a call 
            to <B>CreateInstance</B> to create a new value. 
            </summary>
      <param name="context">
            A type descriptor through which additional context can be provided. 
            </param>
      <returns>
        <B>true</B> if the <B>CreateInstance</B> method should be called 
            when a change is made to one or more properties of this object; 
            otherwise, <B>false</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointUConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            Retrieves the set of properties for this type. By default, a type 
            does not return any properties.
            </summary>
      <param name="context">
            A type descriptor through which additional context can be provided. 
            </param>
      <param name="value">
            The value of the object to get the properties for. 
            </param>
      <param name="attributes">
            An array of <see cref="T:System.Attribute" /> objects that describe 
            the properties. 
            </param>
      <returns>
            The set of properties that are exposed for this data type.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.PointUConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Determines if this object supports properties. By default, this is 
            <B>true</B>. 
            </summary>
      <param name="context">
            A type descriptor through which additional context can be provided.
            </param>
      <returns>
        <B>true</B> if <B>GetProperties</B> should be called to find the 
            properties of this object; otherwise, false. 
            </returns>
    </member>
    <member name="T:Telerik.Reporting.Drawing.PropagateParentStyleAttrbute">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.PropertyNameConverter">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.RectangleU">
      <summary>
            Stores a set of four Unit-based numbers that represent the location and 
            size of a rectangle. 
            </summary>
      <remarks>
            A <B>RectangleU</B> is defined by its width, height, and upper-left 
            corner.
            </remarks>
    </member>
    <member name="F:Telerik.Reporting.Drawing.RectangleU.Empty">
      <summary>
            Represents an instance of the 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> class with its 
            members uninitialized. 
            </summary>
      <remarks>
            The members of the new <B>RectangleU</B> are left uninitialized.
            </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.#ctor(System.Drawing.Rectangle)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> class from the 
            specified <see cref="T:System.Drawing.Rectangle" />.
            </summary>
      <param name="rect">
            A <see cref="T:System.Drawing.Rectangle" /> that represents the 
            rectangular region.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.#ctor(System.Drawing.RectangleF)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> class from the 
            specified <see cref="T:System.Drawing.RectangleF" />.
            </summary>
      <param name="rect">
            A <see cref="T:System.Drawing.RectangleF" /> that represents the 
            rectangular region.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.#ctor(Telerik.Reporting.Drawing.PointU,Telerik.Reporting.Drawing.SizeU)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> class with the 
            specified location and size. 
            </summary>
      <param name="location">
            A <see cref="T:Telerik.Reporting.Drawing.PointU" /> that represents 
            the upper-left corner of the rectangular region. 
            </param>
      <param name="size">
            A <see cref="T:Telerik.Reporting.Drawing.SizeU" /> that represents the 
            width and height of the rectangular region. 
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.#ctor(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> class with the 
            specified location and size. 
            </summary>
      <param name="x">
            The x-coordinate of the upper-left corner of the rectangle. 
            </param>
      <param name="y">
            The y-coordinate of the upper-left corner of the rectangle. 
            </param>
      <param name="width">
            The width of the rectangle. 
            </param>
      <param name="height">
            The height of the rectangle. 
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.op_Equality(Telerik.Reporting.Drawing.RectangleU,Telerik.Reporting.Drawing.RectangleU)">
      <summary>
            Tests whether two <B>RectangleU</B> structures have equal location 
            and size. 
            </summary>
      <param name="rect1">
            The <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure 
            that is to the left of the equality operator. 
            </param>
      <param name="rect2">
            The <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure 
            that is to the right of the equality operator. 
            </param>
      <returns>
            This operator returns <B>true</B> if the two specified 
            <B>RectangleU</B> structures have equal 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.X" />,
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Y" />,
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Width" />, and 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Height" /> 
            properties. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.op_Inequality(Telerik.Reporting.Drawing.RectangleU,Telerik.Reporting.Drawing.RectangleU)">
      <summary>
            Tests whether two <B>RectangleU</B> structures differ in location 
            or size.
            </summary>
      <param name="rect1">
            The <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure 
            that is to the left of the equality operator. 
            </param>
      <param name="rect2">
            The <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure 
            that is to the right of the equality operator. 
            </param>
      <returns>
            This operator returns <B>true</B> if any of the 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.X" />,
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Y" />,
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Width" />, or 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Height" /> 
            properties of the two 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> 
            structures are unequal; otherwise <B>false</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.op_Explicit(Telerik.Reporting.Drawing.RectangleU)~System.Drawing.Rectangle">
      <summary>
            Converts the specified <B>RectangleU</B> structure to a 
            <see cref="T:System.Drawing.Rectangle" /> structure. 
            </summary>
      <param name="rect">
            The <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure
            to convert.
            </param>
      <returns>
            The <B>Rectangle</B> structure that is converted from the specified 
            <B>RectangleU</B> structure. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.op_Explicit(Telerik.Reporting.Drawing.RectangleU)~System.Drawing.RectangleF">
      <summary>
            Converts the specified <B>RectangleU</B> structure to a 
            <see cref="T:System.Drawing.RectangleF" /> structure. 
            </summary>
      <param name="rect">
            The <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure
            to convert.
            </param>
      <returns>
            The <B>RectangleF</B> structure that is converted from the specified 
            <B>RectangleU</B> structure. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.Contains(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Determines if the specified point is contained within this 
            <B>RectangleU</B> structure. 
            </summary>
      <param name="x">
            The x-coordinate of the point to test.
            </param>
      <param name="y">
            The x-coordinate of the point to test.
            </param>
      <returns>
            This method returns <B>true</B> if the point defined by <I>x</I> 
            and <I>y</I> is contained within this <B>RectangleU</B> structure; 
            otherwise <B>false</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.Contains(Telerik.Reporting.Drawing.PointU)">
      <summary>
            Determines if the specified point is contained within this 
            <B>RectangleU</B> structure. 
            </summary>
      <param name="pt">
            The <see cref="T:Telerik.Reporting.Drawing.PointU" /> to test.
            </param>
      <returns>
            This method returns <B>true</B> if the point represented by the 
            <I>pt</I> parameter is contained within this <B>RectangleU</B> 
            structure; otherwise <B>false</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.Contains(Telerik.Reporting.Drawing.RectangleU)">
      <summary>
            Determines if the rectangular region represented by <I>rect</I> is 
            entirely contained within this <B>RectangleU</B> structure.
            </summary>
      <param name="rect">
            The <see cref="T:System.Drawing.RectangleF" /> to test.
            </param>
      <returns>
            This method returns <B>true</B> if the rectangular region 
            represented by <I>rect</I> is entirely contained within the 
            rectangular region represented by this <B>RectangleU</B>; otherwise 
            <B>false</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.Inflate(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Inflates this <B>RectangleU</B> structure by the specified amount. 
            </summary>
      <param name="width">
            The amount to inflate this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure 
            horizontally.
            </param>
      <param name="height">
            The amount to inflate this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure 
            vertically.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.Inflate(Telerik.Reporting.Drawing.SizeU)">
      <summary>
            Inflates this <B>RectangleU</B> structure by the specified amount. 
            </summary>
      <param name="size">
            The amount to inflate this rectangle.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.Inflate(Telerik.Reporting.Drawing.RectangleU,Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Inflates <I>rect</I> by the specified amount.
            </summary>
      <param name="rect">
            The <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure
            to inflate.
            </param>
      <param name="x">
            The amount to inflate this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure 
            horizontally.
            </param>
      <param name="y">
            The amount to inflate this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure 
            vertically.
            </param>
      <returns>
            The inflated <B>RectangleU</B> structure.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.IntersectsWith(Telerik.Reporting.Drawing.RectangleU)">
      <summary>
            Determines if this rectangle intersects with <I>rect</I>. 
            </summary>
      <param name="rect">
            The rectangle to test.
            </param>
      <returns>
            This method returns <B>true</B> if there is any intersection; 
            otherwise <B>false</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.Offset(Telerik.Reporting.Drawing.PointU)">
      <summary>
            Adjusts the location of this rectangle by the specified amount. 
            </summary>
      <param name="pos">
            The amount to offset the location.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.Offset(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Adjusts the location of this rectangle by the specified amount. 
            </summary>
      <param name="x">
            The amount to offset the location horizontally. 
            </param>
      <param name="y">
            The amount to offset the location vertically.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.Equals(System.Object)">
      <summary>
            Tests whether <I>obj</I> is a 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> with the same 
            location and size of this <B>RectangleU</B>. 
            </summary>
      <param name="obj">
            The <see cref="T:System.Object" /> to test. 
            </param>
      <returns>
            This method returns <B>true</B> if <I>obj</I> is a 
            <B>RectangleU</B> and its <B>X</B>, <B>Y</B>, <B>Width</B>, and 
            <B>Height</B> properties are equal to the corresponding properties 
            of this <B>RectangleU</B>; otherwise, <B>false</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.ToString">
      <summary>
            Converts the <B>Location</B> and <B>Size</B> of this 
            <B>RectangleU</B> to a human-readable string. 
            </summary>
      <returns>
            A human-readable representation of the rectangle.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.ToString(System.Globalization.CultureInfo)">
      <summary>
            Converts the <B>Location</B> and <B>Size</B> of this 
            <B>RectangleU</B> to a human-readable string. 
            </summary>
      <param name="culture">
            A <see cref="T:System.Globalization.CultureInfo" /> object according
            to which to format the string.
            </param>
      <returns>
            A human-readable representation of the rectangle.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.RectangleU.GetHashCode">
      <summary>
            Returns a hash code for this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure. 
            </summary>
      <returns>
            An integer value that specifies a hash value for this 
            <B>RectangleU</B> structure. 
            </returns>
    </member>
    <member name="P:Telerik.Reporting.Drawing.RectangleU.X">
      <summary>
            Gets or sets the x-coordinate of the upper-left corner of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure.
            </summary>
      <value>
            The x-coordinate of the upper-left corner of this <B>RectangleF</B> 
            structure. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.RectangleU.Y">
      <summary>
            Gets or sets the y-coordinate of the upper-left corner of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure.
            </summary>
      <value>
            The y-coordinate of the upper-left corner of this <B>RectangleF</B> 
            structure. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.RectangleU.Width">
      <summary>
            Gets or sets the width of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure.
            </summary>
      <value>
            The width of this <B>RectangleF</B> structure. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.RectangleU.Height">
      <summary>
            Gets or sets the height of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure.
            </summary>
      <value>
            The height of this <B>RectangleF</B> structure. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.RectangleU.Location">
      <summary>
            Gets or sets the coordinates of the upper-left corner of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.PointU" /> that represents 
            the upper-left corner of this RectangleF structure. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.RectangleU.Size">
      <summary>
            Gets or sets the size of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" />. 
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.SizeU" /> that represents the 
            width and height of this <B>RectangleU</B> structure. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.RectangleU.Left">
      <summary>
            Gets the x-coordinate of the left edge of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure. 
            </summary>
      <value>
            The x-coordinate of the left edge of this 
            <B>RectangleU</B> structure. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.RectangleU.Top">
      <summary>
            Gets the y-coordinate of the left edge of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> structure. 
            </summary>
      <value>
            The y-coordinate of the left edge of this 
            <B>RectangleU</B> structure. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.RectangleU.Right">
      <summary>
            Gets the x-coordinate that is the sum of 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.X" /> and 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Width" /> of this 
            <B>RectangleU</B> structure. 
            </summary>
      <value>
            The x-coordinate that is the sum of <B>X</B> and <B>Width</B> of 
            this <B>RectangleU</B> structure. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.RectangleU.Bottom">
      <summary>
            Gets the y-coordinate that is the sum of 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Y" /> and 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Height" /> of this 
            <B>RectangleU</B> structure. 
            </summary>
      <value>
            The y-coordinate that is the sum of <B>Y</B> and <B>Height</B> of 
            this <B>RectangleU</B> structure. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.RectangleU.IsEmpty">
      <summary>
            Tests whether the 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.X" />,
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Y" />,
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Width" />, and
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Height" /> 
            properties of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> have a value of 
            zero.
            </summary>
      <value>
            This property returns <B>true</B> if the <B>X</B>, <B>Y</B>, 
            <B>Width</B>, and <B>Height</B> properties of this 
            <B>RectangleU</B> have a value of zero; otherwise, <B>false</B>. 
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.SelectorCollection">
      <summary>
            Represents a collection of objects that implement 
            <see cref="T:Telerik.Reporting.Drawing.ISelector" /></summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SelectorCollection.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.SelectorCollection" /> class. 
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SelectorCollection.Add(Telerik.Reporting.Drawing.ISelector)">
      <summary>
            Adds the specified selector to the selector collection.
            </summary>
      <returns>
            The index of the added 
            <see cref="T:Telerik.Reporting.Drawing.ISelector" /></returns>
      <param name="selector">
            The <see cref="T:Telerik.Reporting.Drawing.ISelector" /> to add to 
            the selector collection. 
            </param>
      <remarks>
        <para>The 
            <see cref="M:Telerik.Reporting.Drawing.SelectorCollection.Add(Telerik.Reporting.Drawing.ISelector)" /> 
            method allows you to add 
            <see cref="T:Telerik.Reporting.Drawing.ISelector" /> objects to the 
            end of the selector collection.
            </para>
        <para>
            You can also add new 
            <see cref="T:Telerik.Reporting.Drawing.ISelector" /> objects to the 
            collection by using the 
            <see cref="M:Telerik.Reporting.Drawing.SelectorCollection.AddRange(Telerik.Reporting.Drawing.ISelector[])" /> 
            method.
            </para>
        <para>
            To remove a 
            <see cref="T:Telerik.Reporting.Drawing.ISelector" /> that you 
            previously added, use the 
            <see cref="M:Telerik.Reporting.Drawing.SelectorCollection.Remove(Telerik.Reporting.Drawing.ISelector)" />, 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />, 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SelectorCollection.AddRange(Telerik.Reporting.Drawing.ISelector[])">
      <summary>
            Adds an array of selector objects to the collection. 
            </summary>
      <param name="selectors">
            An array of <see cref="T:Telerik.Reporting.Drawing.ISelector" /> 
            objects to add to the collection.
            </param>
      <remarks>
        <para>
            The <B>ISelector</B> objects contained in the 
            selectors array are appended to the end of the collection.
            </para>
        <para>
            You can use the <B>AddRange</B> method to quickly add a 
            group of <B>ISelector</B> objects to the collection 
            instead of manually adding each <B>ISelector</B> to the 
            collection using the 
            <see cref="M:Telerik.Reporting.Drawing.SelectorCollection.Add(Telerik.Reporting.Drawing.ISelector)" /> 
            method.
            </para>
        <para>
            To remove a 
            <see cref="T:Telerik.Reporting.Drawing.ISelector" /> that you 
            previously added, use the 
            <see cref="M:Telerik.Reporting.Drawing.SelectorCollection.Remove(Telerik.Reporting.Drawing.ISelector)" />, 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />, 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SelectorCollection.Insert(System.Int32,Telerik.Reporting.Drawing.ISelector)">
      <summary>
            Inserts a specified <B>ISelector</B> object into the 
            <see cref="T:Telerik.Reporting.Drawing.SelectorCollection" /> 
            at the specified index location.
            </summary>
      <param name="index">
            The zero-based index location at which to insert the 
            <see cref="T:Telerik.Reporting.Drawing.ISelector" /> object.
            </param>
      <param name="selector">
            The <B>ISelector</B> object to insert into the collection.
            </param>
      <remarks>
        <para>
            Use the <B>Insert</B> method to insert a specified 
            <B>ISelector</B> object into the 
            <B>SelectorCollection</B> object at a specified 
            index location.
            </para>
        <para>
            To add a <B>ISelector</B> object at the end of the 
            <B>SelectorCollection</B> object, use the 
            <see cref="M:Telerik.Reporting.Drawing.SelectorCollection.Add(Telerik.Reporting.Drawing.ISelector)" /> 
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SelectorCollection.Remove(Telerik.Reporting.Drawing.ISelector)">
      <summary>
            Removes the specified selector from the selector collection.
            </summary>
      <param name="selector">
            The <see cref="T:Telerik.Reporting.Drawing.ISelector" /> to remove 
            from the 
            <see cref="T:Telerik.Reporting.Drawing.SelectorCollection" />.
            </param>
      <remarks>
        <para>
            When a <B>ISelector</B> is removed from the selector 
            collection, all subsequent selectors are moved up one 
            position in the collection.
            </para>
        <para>
            You can also remove a <B>ISelector</B> by using the 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" /> 
            method, or remove all selectors by using the 
            <see cref="M:System.Collections.CollectionBase.Clear" /> method.
            </para>
        <para>
            To add new <B>ISelector</B> objects to the collection, use 
            the 
            <see cref="M:Telerik.Reporting.Drawing.SelectorCollection.Add(Telerik.Reporting.Drawing.ISelector)" /> 
            or 
            <see cref="M:Telerik.Reporting.Drawing.SelectorCollection.AddRange(Telerik.Reporting.Drawing.ISelector[])" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SelectorCollection.Contains(Telerik.Reporting.Drawing.ISelector)">
      <summary>
            Determines whether the specified selector is a member of the 
            collection.
            </summary>
      <param name="selector">
            The <see cref="T:Telerik.Reporting.Drawing.ISelector" /> to locate in 
            the collection.
            </param>
      <returns>
        <B>true</B> if the <B>ISelector</B> is a member of the 
            collection; otherwise, <B>false</B>.
            </returns>
      <remarks>
        <para>This method enables you to determine whether a 
            <B>ISelector</B> is a member of the collection before 
            attempting to perform operations on the <B>ISelector</B>. 
            You can use this method to confirm that an <B>ISelector</B> 
            has been added to or is still a member of the collection.</para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SelectorCollection.IndexOf(Telerik.Reporting.Drawing.ISelector)">
      <summary>
            Retrieves the index of the specified selector in the selector 
            collection.
            </summary>
      <param name="selector">
            The <see cref="T:Telerik.Reporting.Drawing.ISelector" /> to locate in 
            the collection.
            </param>
      <returns>
            A zero-based index value that represents the position of the specified 
            <B>ISelector</B> in the 
            <see cref="T:Telerik.Reporting.Drawing.SelectorCollection" />.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SelectorCollection.OnValidate(System.Object)">
      <summary>
            Performs additional custom processes when validating a value. 
            </summary>
      <param name="value">
            The object to validate.
            </param>
      <exception cref="T:System.ArgumentException">
            The object is not an implementer of the 
            <see cref="T:Telerik.Reporting.Drawing.ISelector" /> interface.
            </exception>
    </member>
    <member name="P:Telerik.Reporting.Drawing.SelectorCollection.Item(System.Int32)">
      <summary>
            Returns the <see cref="T:Telerik.Reporting.Drawing.ISelector" /> at 
            the specified indexed location in the collection.
            </summary>
      <param name="index">
            The index of the selector to retrieve from the selector collection.
            </param>
      <value>
            The <see cref="T:Telerik.Reporting.Drawing.ISelector" /> located at 
            the specified index location within the selector collection. 
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.SizeU">
      <summary>
            Stores an ordered pair of Unit-based numbers, typically the width and
            height of a rectangle.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.SizeU.Empty">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.SizeU" /> class. 
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeU.#ctor(System.Drawing.Size)">
      <summary>
            Initializes a new instance of the <B>SizeU</B> class from the 
            specified existing <B>Size</B>. 
            </summary>
      <param name="size">
            The <see cref="T:System.Drawing.Size" /> from which to create the new 
            <B>SizeU</B>.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeU.#ctor(System.Drawing.SizeF)">
      <summary>
            Initializes a new instance of the <B>SizeU</B> class from the 
            specified existing <B>SizeF</B>. 
            </summary>
      <param name="size">
            The <see cref="T:System.Drawing.SizeF" /> from which to create the new 
            <B>SizeU</B>.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeU.#ctor(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Initializes a new instance of the <B>SizeU</B> class from the specified
            dimensions.
            </summary>
      <param name="width">
            The width component of the new 
            <see cref="T:Telerik.Reporting.Drawing.SizeU" />. 
            </param>
      <param name="height">
            The height component of the new 
            <see cref="T:Telerik.Reporting.Drawing.SizeU" />. 
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeU.op_Addition(Telerik.Reporting.Drawing.SizeU,Telerik.Reporting.Drawing.SizeU)">
      <summary>
            Adds the width and height of one <B>SizeU</B> structure to the 
            width and height of another <B>SizeU</B> structure. 
            </summary>
      <param name="size1">
            The first <see cref="T:Telerik.Reporting.Drawing.SizeU" /> to add.
            </param>
      <param name="size2">
            The second <see cref="T:Telerik.Reporting.Drawing.SizeU" /> to add.
            </param>
      <returns>
            A <see cref="T:Telerik.Reporting.Drawing.SizeU" /> structure that is 
            the result of the addition operation. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeU.op_Subtraction(Telerik.Reporting.Drawing.SizeU,Telerik.Reporting.Drawing.SizeU)">
      <summary>
            Subtracts the width and height of one <B>SizeU</B> structure from 
            the width and height of another <B>SizeU</B> structure.
            </summary>
      <param name="size1">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU" /> on the left side 
            of the subtraction operator.
            </param>
      <param name="size2">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU" /> on the right side 
            of the subtraction operator.
            </param>
      <returns>
            A <see cref="T:Telerik.Reporting.Drawing.SizeU" /> structure that is 
            the result of the subtraction operation. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeU.op_Equality(Telerik.Reporting.Drawing.SizeU,Telerik.Reporting.Drawing.SizeU)">
      <summary>
            Tests whether two <B>SizeU</B> structures are equal. 
            </summary>
      <param name="size1">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU" /> structure on the 
            left side of the equality operator. 
            </param>
      <param name="size2">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU" /> structure on the 
            right side of the equality operator. 
            </param>
      <returns>
            This operator returns <B>true</B> if <I>size1</I> and <I>size2</I> 
            have equal width and height; otherwise, <B>false</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeU.op_Inequality(Telerik.Reporting.Drawing.SizeU,Telerik.Reporting.Drawing.SizeU)">
      <summary>
            Tests whether two <B>SizeU</B> structures are different. 
            </summary>
      <param name="size1">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU" /> structure on the 
            left side of the equality operator. 
            </param>
      <param name="size2">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU" /> structure on the 
            right side of the equality operator. 
            </param>
      <returns>
            This operator returns <B>true</B> if <I>size1</I> and <I>size2</I> 
            differ either in width or height; <B>false</B> if <I>size1</I> and 
            <I>size2</I> are equal. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeU.op_Explicit(Telerik.Reporting.Drawing.SizeU)~System.Drawing.SizeF">
      <summary>
            Converts the specified <B>SizeU</B> to a 
            <see cref="T:System.Drawing.SizeF" />. 
            </summary>
      <param name="size">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU" /> structure to be 
            converted.
            </param>
      <returns>
            The <see cref="T:System.Drawing.SizeF" /> structure to which this 
            operator converts. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeU.op_Explicit(Telerik.Reporting.Drawing.SizeU)~System.Drawing.Size">
      <summary>
            Converts the specified <B>SizeU</B> to a 
            <see cref="T:System.Drawing.Size" />. 
            </summary>
      <param name="size">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU" /> structure to be 
            converted.
            </param>
      <returns>
            The <see cref="T:System.Drawing.Size" /> structure to which this 
            operator converts. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeU.Equals(System.Object)">
      <summary>
            Tests to see whether the specified object is a 
            <see cref="T:Telerik.Reporting.Drawing.SizeU" /> with the same 
            dimensions as this <B>SizeU</B>. 
            </summary>
      <param name="obj">
            The <see cref="T:System.Object" /> to test. 
            </param>
      <returns>
            This method returns <B>true</B> if <I>obj</I> is a 
            <see cref="T:Telerik.Reporting.Drawing.SizeU" /> and has the same 
            width and height as this <B>SizeU</B>; otherwise, <B>false</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeU.GetHashCode">
      <summary>
            Returns a hash code for this 
            <see cref="T:Telerik.Reporting.Drawing.SizeU" /> structure. 
            </summary>
      <returns>
            An integer value that specifies a hash value for this <B>SizeU</B> 
            structure. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeU.ToString">
      <summary>
            Creates a human-readable string that represents this 
            <see cref="T:Telerik.Reporting.Drawing.SizeU" />. 
            </summary>
      <returns>
            A string that represents this <B>SizeU</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.SizeU.ToString(System.Globalization.CultureInfo)">
      <summary>
            Creates a human-readable string that represents this 
            <see cref="T:Telerik.Reporting.Drawing.SizeU" />. 
            </summary>
      <param name="culture">
            A <see cref="T:System.Globalization.CultureInfo" /> object according
            to which to format the string.
            </param>
      <returns>
            A string that represents this <B>SizeU</B>. 
            </returns>
    </member>
    <member name="P:Telerik.Reporting.Drawing.SizeU.Width">
      <summary>
            Gets or sets the horizontal component of this
            <see cref="T:Telerik.Reporting.Drawing.SizeU" />.
            </summary>
      <value>
            The horizontal component of this <B>SizeU</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.SizeU.Height">
      <summary>
            Gets or sets the vertical component of this 
            <see cref="T:Telerik.Reporting.Drawing.SizeU" />.
            </summary>
      <value>
            The vertical component of this <B>SizeU</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.SizeU.IsEmpty">
      <summary>
            Gets a value indicating whether this 
            <see cref="T:Telerik.Reporting.Drawing.SizeU" /> has zero width and 
            height. 
            </summary>
      <value>
            This property returns <B>true</B> when this <B>SizeU</B> has both 
            a width and height of zero; otherwise, <B>false</B>. 
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Style">
      <summary>
            Represents the style of a report item.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Style.StylePropertyDescriptorInternal">
      <summary>
            This property descriptor is used for every style property 
            of the current style.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Style.StylePropertyDictionary">
      <summary>
            Storage for the style properties
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Style.StylePropertyValue">
      <summary>
            Represents a style property triple value
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Style.StylePropertyDescriptor">
      <summary>
      </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Style.StylePropertyDescriptor.SetValue(Telerik.Reporting.Drawing.Style,System.Int32,System.Object)">
      <summary>
            Returns true if the style has changed; otherwise retuns false;
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Style.StyleCollection">
      <summary>
            Represents a collection of styles.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Style.Copy(Telerik.Reporting.Drawing.Style,Telerik.Reporting.Drawing.Style,System.Boolean,System.Boolean)">
      <summary>
            This method supports the Telerik Reporting infrastructure 
            and is not intended to be used directly from your code.
            </summary>
      <param name="src">
            Style to copy the values from.
            </param>
      <param name="dest">
            Style to copy the values to.
            </param>
      <param name="copyAll">
            Indicates whether to copy all the style properties of the src style (if true) 
            or only the explicitly set values for the src style.
            </param>
      <param name="copyDiff">
            Indicates whether to copy only the different properties (if true) 
            or all style properties.
            </param>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Style.Visible">
      <summary>
            Gets or sets a value indicating whether the report item is
            displayed. 
            </summary>
      <value>
        <B>true</B> if the report item is displayed; otherwise,
            <B>false</B>. The default is <B>true</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Style.BackgroundColor">
      <summary>
            Gets or sets the background color of the report item. 
            </summary>
      <value>
            A <see cref="T:System.Drawing.Color" /> that represents the background 
            color of the report item. The default is 
            <see cref="F:System.Drawing.Color.Empty" />, which indicates that this 
            property is not set. 
            </value>
      <remarks>
            Use the <B>BackColor</B> property to specify the background color 
            of the report item. This property is set using a 
            <see cref="T:System.Drawing.Color" /> object.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Style.BackgroundImage">
      <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.BackgroundImage" /> 
            object that controls the image displayed in the background of the 
            report item.
            </summary>
      <value>
            An <see cref="T:Telerik.Reporting.Drawing.BackgroundImage" /> that 
            represents the image to display in the background of the report 
            item. Report items have no background image by default.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Style.Color">
      <summary>
            Gets or sets the foreground color of the report item. 
            </summary>
      <value>
            The foreground <see cref="T:System.Drawing.Color" /> of the report 
            item. The default is <see cref="P:System.Drawing.Color.Black" />. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Style.TextAlign">
      <summary>
            Gets or sets the horizontal alignment of text in the report item. 
            </summary>
      <value>
            One of the 
            <see cref="T:Telerik.Reporting.Drawing.HorizontalAlign" /> values. 
            The default is 
            <B>HorizontalAlign.Left</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Style.VerticalAlign">
      <summary>
            Gets or sets the vertical alignment of text in the report item. 
            </summary>
      <value>
            One of the 
            <see cref="T:Telerik.Reporting.Drawing.VerticalAlign" /> values. 
            The default is <B>VerticalAlign.Top</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Style.BorderStyle">
      <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.BorderStyle" /> object
            used to define the border style of a report item.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderStyle" /> representing
            the border style of the report item.
            </value>
      <remarks>
            You can set the border style of the item by using the properties
            <see cref="P:Telerik.Reporting.Drawing.BorderStyle.Default" />,
            <see cref="P:Telerik.Reporting.Drawing.BorderStyle.Left" />,
            <see cref="P:Telerik.Reporting.Drawing.BorderStyle.Right" />,
            <see cref="P:Telerik.Reporting.Drawing.BorderStyle.Top" />, and
            <see cref="P:Telerik.Reporting.Drawing.BorderStyle.Bottom" />.
            The <B>Default</B> property is used to set all borders styles at 
            once. All borders are 
            <B>BorderType.None</B> by default.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Style.BorderColor">
      <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.BorderColor" /> object
            used to define the border color of a report item.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderColor" /> representing
            the border color of the report item.
            </value>
      <remarks>
            You can set the border color of the item by using the properties
            <see cref="P:Telerik.Reporting.Drawing.BorderColor.Default" />,
            <see cref="P:Telerik.Reporting.Drawing.BorderColor.Left" />,
            <see cref="P:Telerik.Reporting.Drawing.BorderColor.Right" />,
            <see cref="P:Telerik.Reporting.Drawing.BorderColor.Top" />, and
            <see cref="P:Telerik.Reporting.Drawing.BorderColor.Bottom" />.
            The <B>Default</B> property is used to set all borders colors at 
            once. All borders are 
            <see cref="P:System.Drawing.Color.Black" /> by default.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Style.BorderWidth">
      <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.BorderWidth" /> object
            used to define the border width of a report item.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderWidth" /> representing
            the border width of the report item.
            </value>
      <remarks>
            You can set the border width of the item by using the properties
            <see cref="P:Telerik.Reporting.Drawing.BorderWidth.Default" />,
            <see cref="P:Telerik.Reporting.Drawing.BorderWidth.Left" />,
            <see cref="P:Telerik.Reporting.Drawing.BorderWidth.Right" />,
            <see cref="P:Telerik.Reporting.Drawing.BorderWidth.Top" />, and
            <see cref="P:Telerik.Reporting.Drawing.BorderWidth.Bottom" />.
            The <B>Default</B> property is used to set all borders widths at 
            once. All borders are 1pt wide by default.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Style.Font">
      <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.Font" /> object 
            representing the font of the report item.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.Font" /> object used to
            define the font of a report item. By default the font of a report
            item is Arial-Regular, 10pts.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Style.Padding">
      <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.Padding" /> object
            used to define the padding of a report item.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.Padding" /> object 
            representing the padding of the report item.
            </value>
      <remarks>
            You can set the padding of the item by using the properties
            <see cref="P:Telerik.Reporting.Drawing.Padding.Left" />,
            <see cref="P:Telerik.Reporting.Drawing.Padding.Right" />,
            <see cref="P:Telerik.Reporting.Drawing.Padding.Top" />, and
            <see cref="P:Telerik.Reporting.Drawing.Padding.Bottom" />.
            Padding on all sides is 
            <see cref="F:Telerik.Reporting.Drawing.Unit.Zero" /> by default.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Style.LineStyle">
      <summary>
            Gets or sets a <see cref="T:Telerik.Reporting.Drawing.LineStyle" /> 
            object used to define the line style of report items that 
            support it, such as lines and shapes.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.LineStyle" /> object 
            representing the line style of the report item. By default the line 
            style is <B>LineStyle.Solid</B>. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Style.LineWidth">
      <summary>
            Gets or sets a <see cref="T:Telerik.Reporting.Drawing.Unit" /> 
            representing the line width of report items that support it, such 
            as lines and shapes.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit" /> value representing 
            the line width of the report item. By default the width is 1pt.
            </value>
    </member>
    <member name="M:Telerik.Reporting.Drawing.StyleDescriptor.ForEach(Telerik.Reporting.Drawing.StyleDescriptor.Action)">
      <summary>
            Performs the specified action on each registered StylePropertyDescriptor. 
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.StylePropertyAttribute">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.StylePropertyChangeEventHandler">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.StyleRule">
      <summary>
            Represents a style rule to be applied.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.StyleRule.SelectorCollectionInternal">
      <summary>
      </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.StyleRule.#ctor">
      <summary>
            Initializes a new empty 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule" />.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.StyleRule.ToString">
      <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule" />.
            </summary>
      <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule" />.
            </returns>
    </member>
    <member name="P:Telerik.Reporting.Drawing.StyleRule.Selectors">
      <summary>
            A collection of selectors that determine which report items the
            style applies to.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.SelectorCollection" /> object
            containing all of the selectors for this rule.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.StyleRule.Style">
      <summary>
            The <see cref="T:Telerik.Reporting.Drawing.Style" /> to apply to all 
            report items selected by the 
            <see cref="P:Telerik.Reporting.Drawing.StyleRule.Selectors" /></summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.Style" /> object defining the
            style of this <see cref="T:Telerik.Reporting.Drawing.StyleRule" /></value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.StyleRuleCollection">
      <summary>
            Represents a collection of 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> objects.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.StyleRuleCollection.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.StyleRuleCollection" /> class. 
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.StyleRuleCollection.Add(Telerik.Reporting.Drawing.StyleRule)">
      <summary>
            Adds the specified style rule to the style rule collection.
            </summary>
      <returns>
            The index of the added 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule" /></returns>
      <param name="rule">
            The <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> to add to 
            the style rule collection. 
            </param>
      <remarks>
        <para>The 
            <see cref="M:Telerik.Reporting.Drawing.StyleRuleCollection.Add(Telerik.Reporting.Drawing.StyleRule)" /> 
            method allows you to add 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> objects to the 
            end of the style rule collection.
            </para>
        <para>
            You can also add new 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> objects to the 
            collection by using the 
            <see cref="M:Telerik.Reporting.Drawing.StyleRuleCollection.AddRange(Telerik.Reporting.Drawing.StyleRule[])" /> 
            method.
            </para>
        <para>
            To remove a 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> that you 
            previously added, use the 
            <see cref="M:Telerik.Reporting.Drawing.StyleRuleCollection.Remove(Telerik.Reporting.Drawing.StyleRule)" />, 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />, 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.StyleRuleCollection.AddRange(Telerik.Reporting.Drawing.StyleRule[])">
      <summary>
            Adds an array of style rule objects to the collection. 
            </summary>
      <param name="rules">
            An array of <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> 
            objects to add to the collection.
            </param>
      <remarks>
        <para>
            The <B>StyleRule</B> objects contained in the 
            rules array are appended to the end of the collection.
            </para>
        <para>
            You can use the <B>AddRange</B> method to quickly add a 
            group of <B>StyleRule</B> objects to the collection 
            instead of manually adding each <B>StyleRule</B> to the 
            collection using the 
            <see cref="M:Telerik.Reporting.Drawing.StyleRuleCollection.Add(Telerik.Reporting.Drawing.StyleRule)" /> 
            method.
            </para>
        <para>
            To remove a 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> that you 
            previously added, use the 
            <see cref="M:Telerik.Reporting.Drawing.StyleRuleCollection.Remove(Telerik.Reporting.Drawing.StyleRule)" />, 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />, 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.StyleRuleCollection.Insert(System.Int32,Telerik.Reporting.Drawing.StyleRule)">
      <summary>
            Inserts a specified <B>StyleRule</B> object into the 
            <see cref="T:Telerik.Reporting.Drawing.StyleRuleCollection" /> 
            at the specified index location.
            </summary>
      <param name="index">
            The zero-based index location at which to insert the 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> object.
            </param>
      <param name="rule">
            The <B>StyleRule</B> object to insert into the collection.
            </param>
      <remarks>
        <para>
            Use the <B>Insert</B> method to insert a specified 
            <B>StyleRule</B> object into the 
            <B>StyleRuleCollection</B> object at a specified 
            index location.
            </para>
        <para>
            To add a <B>StyleRule</B> object at the end of the 
            <B>StyleRuleCollection</B> object, use the 
            <see cref="M:Telerik.Reporting.Drawing.StyleRuleCollection.Add(Telerik.Reporting.Drawing.StyleRule)" /> 
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.StyleRuleCollection.Remove(Telerik.Reporting.Drawing.StyleRule)">
      <summary>
            Removes the specified style rule from the selector collection.
            </summary>
      <param name="rule">
            The <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> to remove 
            from the 
            <see cref="T:Telerik.Reporting.Drawing.StyleRuleCollection" />.
            </param>
      <remarks>
        <para>
            When a <B>StyleRule</B> is removed from the style rule 
            collection, all subsequent rules are moved up one 
            position in the collection.
            </para>
        <para>
            You can also remove a <B>StyleRule</B> by using the 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" /> 
            method, or remove all rules by using the 
            <see cref="M:System.Collections.CollectionBase.Clear" /> method.
            </para>
        <para>
            To add new <B>StyleRule</B> objects to the collection, use 
            the 
            <see cref="M:Telerik.Reporting.Drawing.StyleRuleCollection.Add(Telerik.Reporting.Drawing.StyleRule)" /> 
            or 
            <see cref="M:Telerik.Reporting.Drawing.StyleRuleCollection.AddRange(Telerik.Reporting.Drawing.StyleRule[])" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.StyleRuleCollection.Contains(Telerik.Reporting.Drawing.StyleRule)">
      <summary>
            Determines whether the specified style rule is a member of the 
            collection.
            </summary>
      <param name="rule">
            The <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> to locate in 
            the collection.
            </param>
      <returns>
        <B>true</B> if the <B>StyleRule</B> is a member of the 
            collection; otherwise, <B>false</B>.
            </returns>
      <remarks>
        <para>This method enables you to determine whether a 
            <B>StyleRule</B> is a member of the collection before 
            attempting to perform operations on the <B>StyleRule</B>. 
            You can use this method to confirm that an <B>StyleRule</B> 
            has been added to or is still a member of the collection.</para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.StyleRuleCollection.IndexOf(Telerik.Reporting.Drawing.StyleRule)">
      <summary>
            Retrieves the index of the specified style rule in the selector 
            collection.
            </summary>
      <param name="rule">
            The <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> to locate in 
            the collection.
            </param>
      <returns>
            A zero-based index value that represents the position of the specified 
            <B>StyleRule</B> in the 
            <see cref="T:Telerik.Reporting.Drawing.StyleRuleCollection" />.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.StyleRuleCollection.OnValidate(System.Object)">
      <summary>
            Performs additional custom processes when validating a value. 
            </summary>
      <param name="value">
            The object to validate.
            </param>
      <exception cref="T:System.ArgumentException">
            The object is not a  
            <see cref="T:Telerik.Reporting.Drawing.StyleRule" />.
            </exception>
    </member>
    <member name="P:Telerik.Reporting.Drawing.StyleRuleCollection.Item(System.Int32)">
      <summary>
            Returns the <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> at 
            the specified indexed location in the collection.
            </summary>
      <param name="index">
            The index of the style rule to retrieve from the style rule 
            collection.
            </param>
      <value>
            The <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> located at 
            the specified index location within the style rule collection. 
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.StyleSelector">
      <summary>
            An attribute selector based on the style name property.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.StyleSelector.#ctor">
      <summary>
            Initializes a new 
            <see cref="T:Telerik.Reporting.Drawing.StyleSelector" />.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.StyleSelector.#ctor(System.String)">
      <summary>
            Initializes a new 
            <see cref="T:Telerik.Reporting.Drawing.StyleSelector" /> with the
            specified style name.
            </summary>
      <param name="name">
            A string value specifying the style name to
            match.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.StyleSelector.#ctor(System.Type,System.String)">
      <summary>
            Initializes a new 
            <see cref="T:Telerik.Reporting.Drawing.StyleSelector" /> with the
            specified style name, that matches items of the specified 
            <see cref="T:System.Type" /></summary>
      <param name="type">
            The <see cref="T:System.Type" /> of items to match. 
            </param>
      <param name="name">
            A string value specifying the style name to
            match.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.StyleSelector.ToString">
      <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.StyleSelector" />.
            </summary>
      <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.StyleSelector" />.
            </returns>
    </member>
    <member name="P:Telerik.Reporting.Drawing.StyleSelector.StyleName">
      <summary>
            Gets or sets the name of the style that this selector matches.
            </summary>
      <value>
            A string value representing the style name to match.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.StyleSelectorConverter">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.StyleSheet">
      <summary>
            Represents a collection of styles for a 
            <see cref="T:Telerik.Reporting.ReportItemBase" /></summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.HorizontalAlign">
      <summary>
            Specifies the vertical alignment of an object or text in a report item.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.HorizontalAlign.Left">
      <summary>
            Specifies that the object is aligned to the left.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.HorizontalAlign.Center">
      <summary>
            Specifies that the object is aligned to the center.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.HorizontalAlign.Right">
      <summary>
            Specifies that the object is aligned to the right.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.TypeSelectorConverter">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.Unit">
      <summary>
            A structure representing a unit of measure.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.Unit.Empty">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit" /> structure. 
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.Unit.Zero">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit" /> structure equal to
            zero. 	    
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Pixel(System.Double)">
      <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit" />
            of type <B>UnitType.Pixel</B> and magnitude equal to <I>value</I>.
            </summary>
      <param name="value">
            A <I>double</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
      <returns>
            The created <B>Unit</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Pixel(System.Int32)">
      <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit" />
            of type <B>UnitType.Pixel</B>
            and magnitude equal to <I>value</I>.
            </summary>
      <param name="value">
            An <I>int</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
      <returns>
            The created <B>Unit</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Point(System.Double)">
      <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit" />
            of type <B>UnitType.Point</B>
            and magnitude equal to <I>value</I>.
            </summary>
      <param name="value">
            A <I>double</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
      <returns>
            The created <B>Unit</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Point(System.Int32)">
      <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit" />
            of type <B>UnitType.Point</B>
            and magnitude equal to <I>value</I>.
            </summary>
      <param name="value">
            An <I>int</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
      <returns>
            The created <B>Unit</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Cm(System.Double)">
      <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit" />
            of type <B>UnitType.Cm</B>
            and magnitude equal to <I>value</I>.
            </summary>
      <param name="value">
            A <I>double</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
      <returns>
            The created <B>Unit</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Cm(System.Int32)">
      <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit" />
            of type <B>UnitType.Cm</B>
            and magnitude equal to <I>value</I>.
            </summary>
      <param name="value">
            An <I>int</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
      <returns>
            The created <B>Unit</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Mm(System.Double)">
      <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit" />
            of type <B>UnitType.Mm</B>
            and magnitude equal to <I>value</I>.
            </summary>
      <param name="value">
            A <I>double</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
      <returns>
            The created <B>Unit</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Mm(System.Int32)">
      <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit" />
            of type <B>UnitType.Mm</B>
            and magnitude equal to <I>value</I>.
            </summary>
      <param name="value">
            An <I>int</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
      <returns>
            The created <B>Unit</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Inch(System.Double)">
      <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit" />
            of type <B>UnitType.Inch</B>
            and magnitude equal to <I>value</I>.
            </summary>
      <param name="value">
            A <I>double</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
      <returns>
            The created <B>Unit</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Inch(System.Int32)">
      <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit" />
            of type <B>UnitType.Inch</B>
            and magnitude equal to <I>value</I>.
            </summary>
      <param name="value">
            An <I>int</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
      <returns>
            The created <B>Unit</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Pica(System.Double)">
      <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit" />
            of type <B>UnitType.Pica</B>
            and magnitude equal to <I>value</I>.
            </summary>
      <param name="value">
            A <I>double</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
      <returns>
            The created <B>Unit</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Pica(System.Int32)">
      <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit" />
            of type <B>UnitType.Pica</B>
            and magnitude equal to <I>value</I>.
            </summary>
      <param name="value">
            An <I>int</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
      <returns>
            The created <B>Unit</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.#ctor(System.Double)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit" /> structure from the 
            specified <I>pixels</I>. The <B>Unit</B>'s type is 
            <see cref="P:Telerik.Reporting.Drawing.Unit.DefaultType" /></summary>
      <param name="pixels">
            A <I>double</I> value specifying the magnitued of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit" /> in pixels.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.#ctor(System.Double,Telerik.Reporting.Drawing.UnitType)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit" /> structure with the 
            specified <I>value</I> and <I>type</I>.
            </summary>
      <param name="value">
            A <I>double</I> value representing the magnitude of the 
            <B>Unit</B>.
            </param>
      <param name="type">
            A <see cref="T:Telerik.Reporting.Drawing.UnitType" /> specifying the
            type of the <B>Unit</B>.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.#ctor(System.String)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit" /> structure from the 
            specified string <I>value</I>.
            </summary>
      <param name="value">
            A <I>string</I> value representing the magnitude and type of the 
            <B>Unit</B>.
            </param>
      <remarks>
            Parameters passed to this constructor should be of the form "2px",
            "3.4in", "4cm", "2mm", "12.5pt", "4pc", etc. For more information
            on string representations of units see 
            <see cref="T:Telerik.Reporting.Drawing.UnitType" />.
            </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.#ctor(System.String,System.Globalization.CultureInfo)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit" /> structure from the 
            specified string <I>value</I> and using the specified 
            <see cref="T:System.Globalization.CultureInfo" />.
            </summary>
      <param name="value">
            A <I>string</I> value representing the magnitude and type of the 
            <B>Unit</B>.
            </param>
      <param name="culture">
            A <see cref="T:System.Globalization.CultureInfo" />. If a null 
            reference (<B>Nothing</B> in Visual Basic) is passed, the current 
            culture is assumed. 
            </param>
      <remarks>
            The <I>culture</I> parameters is used to parse the string value.
            </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.#ctor(System.String,System.Globalization.CultureInfo,Telerik.Reporting.Drawing.UnitType)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit" /> structure from the 
            specified string <I>value</I>, <I>culture</I>, and <I>type</I>.
            </summary>
      <param name="value">
            A <I>string</I> value representing the magnitude of the 
            <B>Unit</B>.
            </param>
      <param name="culture">
            A <see cref="T:System.Globalization.CultureInfo" />. If a null 
            reference (<B>Nothing</B> in Visual Basic) is passed, the current 
            culture is assumed. 
            </param>
      <param name="type">
            A <see cref="T:Telerik.Reporting.Drawing.UnitType" /> specifying the
            type of the <B>Unit</B>.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Parse(System.String)">
      <summary>
            Parses a string value to create a new <B>Unit</B>.
            </summary>
      <param name="value">
            A <I>string</I> value defining the unit.
            </param>
      <returns>
            The created <B>Unit</B>.
            </returns>
      <remarks>
            The parameter passed to this Method should be of the form "2px",
            "3.4in", "4cm", "2mm", "12.5pt", "4pc", etc. For more information
            on string representations of units see 
            <see cref="T:Telerik.Reporting.Drawing.UnitType" />.
            </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Parse(System.String,System.Globalization.CultureInfo)">
      <summary>
            Parses a string value to create a new <B>Unit</B> based on the
            specified culture.
            </summary>
      <param name="value">
            A <I>string</I> value defining the unit.
            </param>
      <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> object defining
            the rules for the parsing.
            </param>
      <returns>
            The created <B>Unit</B>.
            </returns>
      <remarks>
            The parameter passed to this Method should be of the form "2px",
            "3.4in", "4cm", "2mm", "12.5pt", "4pc", etc. For more information
            on string representations of units see 
            <see cref="T:Telerik.Reporting.Drawing.UnitType" />.
            </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.ChangeType(Telerik.Reporting.Drawing.UnitType)">
      <summary>
            Returns a unit equal to this 
            <see cref="T:Telerik.Reporting.Drawing.Unit" /> but with its type
            changed.
            </summary>
      <param name="type">
            The <see cref="T:Telerik.Reporting.Drawing.UnitType" /> to change to.
            </param>
      <returns>
            A <B>Unit</B> equal to this <B>Unit</B>, but with type that equals
            <I>type</I>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.ConvertToPixels(System.Double,Telerik.Reporting.Drawing.UnitType)">
      <summary>
            Returns a magnitude in pixels based on the specified <I>value</I>
            and <I>type</I>.
            </summary>
      <param name="value">
            A <I>double</I> value specifying the magnitude.
            </param>
      <param name="type">
            A <see cref="T:Telerik.Reporting.Drawing.UnitType" /> specifying the
            unit type.
            </param>
      <returns>
            A <I>double</I> value representing the magnitude in pixels.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.ConvertToUnits(System.Double,Telerik.Reporting.Drawing.UnitType)">
      <summary>
            Returns a magnitude in units based on the specified <I>pixels</I>
            and <I>type</I>.
            </summary>
      <param name="pixels">
            A <I>double</I> value specifying the magnitude in pixels.
            </param>
      <param name="type">
            A <see cref="T:Telerik.Reporting.Drawing.UnitType" /> specifying the
            unit type to convert to.
            </param>
      <returns>
            A <I>double</I> value representing the magnitude in the specified
            units.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Add(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.UnitType)">
      <summary>
            Returns a <see cref="T:Telerik.Reporting.Drawing.Unit" /> that is the 
            sum of two units and is of the specified <I>type</I>.
            </summary>
      <param name="unit1">
            The first <B>Unit</B>.
            </param>
      <param name="unit2">
            The second <B>Unit</B>.
            </param>
      <param name="type">
            A <see cref="T:Telerik.Reporting.Drawing.UnitType" /> specifying the
            type of the resultant unit.
            </param>
      <returns>
            The sum of the two units.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Subtract(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.UnitType)">
      <summary>
            Returns a <see cref="T:Telerik.Reporting.Drawing.Unit" /> that is the 
            difference of two units and is of the specified <I>type</I>.
            </summary>
      <param name="unit1">
            The <B>Unit</B> to subtract from.
            </param>
      <param name="unit2">
            The <B>Unit</B> to subtract.
            </param>
      <param name="type">
            A <see cref="T:Telerik.Reporting.Drawing.UnitType" /> specifying the
            type of the resultant unit.
            </param>
      <returns>
            The difference of the two units in the specified unit type.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Add(Telerik.Reporting.Drawing.Unit)">
      <summary>
            Adds a unit to this <see cref="T:Telerik.Reporting.Drawing.Unit" />.
            </summary>
      <param name="unit1">
            The <B>Unit</B> to add.
            </param>
      <returns>
            The sum of <I>unit1</I> and this <B>Unit</B> in this <B>Unit</B>'s
            type.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Subtract(Telerik.Reporting.Drawing.Unit)">
      <summary>
            Subtracts a unit from this 
            <see cref="T:Telerik.Reporting.Drawing.Unit" />.
            </summary>
      <param name="unit1">
            The <B>Unit</B> to subtract.
            </param>
      <returns>
            The difference of this <B>Unit</B> and <I>unit1</I> in this 
            <B>Unit</B>'s type.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Multiply(System.Double)">
      <summary>
            Multiplies this <see cref="T:Telerik.Reporting.Drawing.Unit" /> by a 
            specified <I>value</I>.
            </summary>
      <param name="value">
            A <I>double</I> value to multiply by.
            </param>
      <returns>
            The product of multiplying this <B>Unit</B> by the specified 
            <I>value</I>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Divide(System.Double)">
      <summary>
            Divides this <see cref="T:Telerik.Reporting.Drawing.Unit" /> by a 
            specified <I>value</I>.
            </summary>
      <param name="value">
            A <I>double</I> value to divide by.
            </param>
      <returns>
            The quotient resulting by dividing this <B>Unit</B> by the 
            specified <I>value</I>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.op_Addition(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Adds one <see cref="T:Telerik.Reporting.Drawing.Unit" /> to another.
            </summary>
      <param name="unit1">
            The first <B>Unit</B>.
            </param>
      <param name="unit2">
            The second <B>Unit</B>.
            </param>
      <returns>
            The sum of the two units.
            </returns>
      <remarks>
        <para>
            If <I>unit1</I> is empty the method returns <I>unit2</I>. If 
            <I>unit2</I> is empty the method returns <I>unit1</I>. Othwerwise,
            the method returns the sum of the two units in <I>unit1</I>'s type.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.op_Subtraction(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Subtract one <see cref="T:Telerik.Reporting.Drawing.Unit" /> from 
            another.
            </summary>
      <param name="unit1">
            The <B>Unit</B> to subtract from.
            </param>
      <param name="unit2">
            The <B>Unit</B> to subtract.
            </param>
      <returns>
            The difference of the two units.
            </returns>
      <exception cref="T:System.ArgumentException">
            Thrown when <I>unit1</I> is empty.
            </exception>
      <remarks>
        <para>
            If <I>unit2</I> is empty the method returns <I>unit1</I>.
            Othwerwise, the method returns the difference of the two units 
            in <I>unit1</I>'s type.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.op_UnaryNegation(Telerik.Reporting.Drawing.Unit)">
      <summary>
            Unary minus. Reverses the sign of
            <see cref="T:Telerik.Reporting.Drawing.Unit" /></summary>
      <param name="unit">
            The <B>unit</B> to negate.
            </param>
      <returns>
            A <B>Unit</B> of the same type as <I>unit</I> but with opposite
            sign.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.op_Multiply(Telerik.Reporting.Drawing.Unit,System.Double)">
      <summary>
            Multiplies a <see cref="T:Telerik.Reporting.Drawing.Unit" /> by a 
            specified <I>value</I>.
            </summary>
      <param name="unit1">
            The <B>Unit</B> to multiply.
            </param>
      <param name="value">
            A <I>double</I> value to multiply by.
            </param>
      <returns>
            The product of <I>unit1</I> and <I>value</I>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.op_Multiply(System.Double,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Multiplies a <I>value</I> by a 
            <see cref="T:Telerik.Reporting.Drawing.Unit" />.
            </summary>
      <param name="value">
            The <I>double</I> value to multiply.
            </param>
      <param name="unit1">
            The <B>Unit</B> to multiply by.
            </param>
      <returns>
            A <B>Unit</B> that is the product of <I>value</I> and <I>unit1</I>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.op_Division(Telerik.Reporting.Drawing.Unit,System.Double)">
      <summary>
            Divides a <see cref="T:Telerik.Reporting.Drawing.Unit" /> by a 
            specified <I>value</I>.
            </summary>
      <param name="unit1">
            The <B>Unit</B> to divide.
            </param>
      <param name="value">
            A <I>double</I> value to divide by.
            </param>
      <returns>
            A <B>Unit</B> that is the quotient of <I>unit1</I> and 
            <I>value</I>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.op_LessThan(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Compares two units.
            </summary>
      <param name="unit1">
            The first unit to compare.
            </param>
      <param name="unit2">
            The second unit to compare.
            </param>
      <returns>
        <B>true</B> if <I>unit1</I> is less than <I>unit2</I>; otherwise
            <B>false</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.op_GreaterThan(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Compares two units.
            </summary>
      <param name="unit1">
            The first unit to compare.
            </param>
      <param name="unit2">
            The second unit to compare.
            </param>
      <returns>
        <B>true</B> if <I>unit1</I> is greater than <I>unit2</I>; otherwise
            <B>false</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.op_LessThanOrEqual(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Compares two units.
            </summary>
      <param name="unit1">
            The first unit to compare.
            </param>
      <param name="unit2">
            The second unit to compare.
            </param>
      <returns>
        <B>true</B> if <I>unit1</I> is less than or equal to <I>unit2</I>; 
            otherwise <B>false</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.op_GreaterThanOrEqual(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Compares two units.
            </summary>
      <param name="unit1">
            The first unit to compare.
            </param>
      <param name="unit2">
            The second unit to compare.
            </param>
      <returns>
        <B>true</B> if <I>unit1</I> is greater than or equal to 
            <I>unit2</I>; otherwise <B>false</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.op_Equality(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Compares two units.
            </summary>
      <param name="unit1">
            The first unit to compare.
            </param>
      <param name="unit2">
            The second unit to compare.
            </param>
      <returns>
        <B>true</B> if <I>unit1</I> is equal to <I>unit2</I>; otherwise <B>false</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.op_Inequality(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
      <summary>
            Compares two units.
            </summary>
      <param name="unit1">
            The first unit to compare.
            </param>
      <param name="unit2">
            The second unit to compare.
            </param>
      <returns>
        <B>true</B> if <I>unit1</I> is not equal to <I>unit2</I>; otherwise 
            <B>false</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.GetHashCode">
      <summary>
            Returns a hash code for this 
            <see cref="T:Telerik.Reporting.Drawing.Unit" /> structure. 
            </summary>
      <returns>
            An integer value that specifies a hash value for this 
            <B>Unit</B> structure. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.Equals(System.Object)">
      <summary>
            Tests whether <I>obj</I> is a 
            <see cref="T:Telerik.Reporting.Drawing.Unit" /> that equals this
            <B>Unit</B>.
            </summary>
      <param name="obj">
            The <see cref="T:System.Object" /> to test. 
            </param>
      <returns>
            This method returns <B>true</B> if <I>obj</I> is a 
            <B>Unit</B> and its magnitude is equal to this <B>Unit</B>'s
            magnitude; otherwise <B>false</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.ToString">
      <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Unit" />.
            </summary>
      <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Unit" />.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.Unit.ToString(System.Globalization.CultureInfo)">
      <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Unit" />.
            </summary>
      <param name="culture">
            A <see cref="T:System.Globalization.CultureInfo" /> specifying the
            culture to use.
            </param>
      <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Unit" />.
            </returns>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Unit.DefaultType">
      <summary>
            Gets or sets a <see cref="T:Telerik.Reporting.Drawing.UnitType" />
            representing the default units of measure for a 
            <see cref="T:Telerik.Reporting.Report" />.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.UnitType" /> value
            that defines the default units of measure for a <B>Report</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Unit.DotsPerInch">
      <summary>
            Gets a double value representing the dpi of the current graphics
            context.
            </summary>
      <value>
            A double value representing the dpi of the current graphics
            context.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Unit.IsEmpty">
      <summary>
            Specifies whether this <see cref="T:Telerik.Reporting.Drawing.Unit" /> 
            structure is uninitialized. 
            </summary>
      <value>
            This property returns <B>true</B> if this unit is uninitialized; 
            otherwise, <B>false</B>. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Unit.Type">
      <summary>
            Gets the type of the <B>Unit</B>.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.UnitType" /> specifying the
            type of this <B>Unit</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Unit.Value">
      <summary>
            Gets the magnitude of this <B>Unit</B>.
            </summary>
      <value>
            A <I>float</I> value indicating the magnitude of the <B>Unit</B>.
            </value>
      <remarks>
            This property makes sense only in combination with the 
            <see cref="P:Telerik.Reporting.Drawing.Unit.Type" /> property.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Unit.Pixels">
      <summary>
            Gets the magnitude of this <B>Unit</B> in pixels.
            </summary>
      <value>
            An <I>int</I> value specifying the unit's magnitude in pixels.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Drawing.Unit.FPixels">
      <summary>
            Gets or sets the magnitude of this <B>Unit</B> in pixels.
            </summary>
      <value>
            A <I>float</I> value specifying the unit's magnitude in pixels.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Drawing.UnitConverter">
      <summary>
            Converts a <see cref="T:Telerik.Reporting.Drawing.Unit" /> object from 
            one data type to another. Access this class through the 
            <see cref="T:System.ComponentModel.TypeDescriptor" /> object. 
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Drawing.UnitConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if this converter can convert an object in the given 
            source type to the native type of the converter.
            </summary>
      <param name="context">
            A formatter context. This object can be used to get additional 
            information about the environment this converter is being called 
            from. This may be a null reference (<B>Nothing</B> in Visual 
            Basic), so you should always check. Also, properties on the context 
            object may also return a null reference (<B>Nothing</B> in Visual 
            Basic). 
            </param>
      <param name="sourceType">
            The type you want to convert from. 
            </param>
      <returns>
        <B>true</B> if this object can perform the conversion; otherwise, 
            <B>false</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.UnitConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Converts the specified object to a 
            <see cref="T:Telerik.Reporting.Drawing.Unit" /> object. 
            </summary>
      <param name="context">
            A formatter context. This object can be used to get additional 
            information about the environment this converter is being called 
            from. This may be a null reference (<B>Nothing</B> in Visual 
            Basic), so you should always check. Also, properties on the context 
            object may also return a null reference (<B>Nothing</B> in Visual 
            Basic). 
            </param>
      <param name="culture">
            An object that contains culture specific information, such as the 
            language, calendar, and cultural conventions associated with a 
            specific culture. It is based on the RFC 1766 standard.
            </param>
      <param name="value">
            The object to convert.
            </param>
      <returns>
            The converted object.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.UnitConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Gets a value indicating whether this converter can convert an 
            object to the given destination type using the context.
            </summary>
      <param name="context">
            An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 
            object that provides a format context.
            </param>
      <param name="destinationType">
            A <see cref="T:System.Type" /> object that represents the type you 
            want to convert to.
            </param>
      <returns>
        <B>true</B> if this converter can perform the conversion; 
            otherwise, <B>false</B>. 
            </returns>
    </member>
    <member name="M:Telerik.Reporting.Drawing.UnitConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Converts the specified object to the specified type. 
            </summary>
      <param name="context">
            A formatter context. This object can be used to get additional 
            information about the environment this converter is being called 
            from. This may be a null reference (<B>Nothing</B> in Visual 
            Basic), so you should always check. Also, properties on the context 
            object may also return a null reference (<B>Nothing</B> in Visual 
            Basic). 
            </param>
      <param name="culture">
            An object that contains culture specific information, such as the 
            language, calendar, and cultural conventions associated with a 
            specific culture. It is based on the RFC 1766 standard.
            </param>
      <param name="value">
            The object to convert.
            </param>
      <param name="destinationType">
            The type to convert the object to. 
            </param>
      <returns>
            The converted object.
            </returns>
    </member>
    <member name="T:Telerik.Reporting.Drawing.UnitType">
      <summary>
            Represents the type of a <see cref="T:Telerik.Reporting.Drawing.Unit" />.
            </summary>
      <remarks>
        <para>
            1 inch = 6 picas = 72 points.
            </para>
        <para>
            1 centimeter = 10 millimeters.
            </para>
        <para>
            Pixels convert to and from other units based on the dpi of the currrent
            graphics context.
            </para>
      </remarks>
    </member>
    <member name="F:Telerik.Reporting.Drawing.UnitType.Pixel">
      <summary>
            Represents pixels. String equivalent used in <B>Unit</B>'s 
            contructor should be "px".
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.UnitType.Point">
      <summary>
            Represents points. String equivalent used in <B>Unit</B>'s 
            contructor should be "pt".
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.UnitType.Pica">
      <summary>
            Represents picas. String equivalent used in <B>Unit</B>'s 
            contructor should be "pc".
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.UnitType.Inch">
      <summary>
            Represents inches. String equivalent used in <B>Unit</B>'s 
            contructor should be "in".
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.UnitType.Mm">
      <summary>
            Represents millimeters. String equivalent used in <B>Unit</B>'s 
            contructor should be "mm".
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.UnitType.Cm">
      <summary>
            Represents centimeters. String equivalent used in <B>Unit</B>'s 
            contructor should be "cm".
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Drawing.VerticalAlign">
      <summary>
            Specifies the vertical alignment of an object or text in an report item.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.VerticalAlign.Top">
      <summary>
            Specifies that the object is aligned to the top.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.VerticalAlign.Middle">
      <summary>
            Specifies that the object is aligned to the middle.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.Drawing.VerticalAlign.Bottom">
      <summary>
            Specifies that the object is aligned to the bottom.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Xml.INeedAllData">
      <summary>
            Used by the StyleClipboardService to indicate that a Style should be
            fully serialized, i.e. all of its properties should be serialized
            no matter whether they are inline, parent or global.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.ReportItemBase">
      <summary>
            Defines the base class for visual report items used for creating 
            reports.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.ReportItemBase.ItemCollection">
      <summary>
            Represents a collection of 
            <see cref="T:Telerik.Reporting.ReportItemBase" /> objects. 
            </summary>
      <remarks>
            The <see cref="M:Telerik.Reporting.ReportItemBase.ItemCollection.Add(Telerik.Reporting.ReportItemBase)" />, 
            <see cref="M:Telerik.Reporting.ReportItemBase.ItemCollection.Remove(Telerik.Reporting.ReportItemBase)" />, 
            and <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" /> 
            methods enable you to add and remove individual items from the 
            collection. You can also use the 
            <see cref="M:Telerik.Reporting.ReportItemBase.ItemCollection.AddRange(Telerik.Reporting.ReportItemBase[])" /> 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> methods 
            to add or remove all the items from the collection.
            You can determine if a 
            <see cref="T:Telerik.Reporting.ReportItemBase" /> is a member of the 
            collection by passing the item into the 
            <see cref="M:Telerik.Reporting.ReportItemBase.ItemCollection.Contains(Telerik.Reporting.ReportItemBase)" /> 
            method. To get the index value of the location of a 
            <see cref="T:Telerik.Reporting.ReportItemBase" /> in the collection, 
            pass the item into the <see cref="M:Telerik.Reporting.ReportItemBase.ItemCollection.IndexOf(Telerik.Reporting.ReportItemBase)" /> 
            method. The collection can be copied into an array by calling the 
            <see cref="M:Telerik.Reporting.ReportItemBase.ItemCollection.CopyTo(System.Array,System.Int32)" /> 
            method.
            </remarks>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.#ctor(Telerik.Reporting.ReportItemBase)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" /> 
            class. 
            </summary>
      <param name="owner">
            A <see cref="T:Telerik.Reporting.ReportItemBase" /> representing 
            the report item that owns the report item collection.
            </param>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.Add(Telerik.Reporting.ReportItemBase)">
      <summary>
            Adds the specified report item to the report item collection.
            </summary>
      <returns>
            The index of the added 
            <see cref="T:Telerik.Reporting.ReportItemBase" /></returns>
      <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase" /> to add to 
            the report item collection. 
            </param>
      <remarks>
        <para>The 
            <see cref="M:Telerik.Reporting.ReportItemBase.ItemCollection.Add(Telerik.Reporting.ReportItemBase)" /> 
            method allows you to add 
            <see cref="T:Telerik.Reporting.ReportItemBase" /> objects to the 
            end of the report item collection.</para>
        <para>You can also add new 
            <see cref="T:Telerik.Reporting.ReportItemBase" /> objects to the 
            collection by using the 
            <see cref="M:Telerik.Reporting.ReportItemBase.ItemCollection.AddRange(Telerik.Reporting.ReportItemBase[])" /> 
            method.</para>
        <para>To remove a 
            <see cref="T:Telerik.Reporting.ReportItemBase" /> that you 
            previously added, use the 
            <see cref="M:Telerik.Reporting.ReportItemBase.ItemCollection.Remove(Telerik.Reporting.ReportItemBase)" />, 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />, 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> 
            methods.</para>
        <para>
          <B>Note:</B> A <see cref="T:Telerik.Reporting.ReportItemBase" /> can only 
            be assigned to one 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" /> 
            at a time. If the 
            <see cref="T:Telerik.Reporting.ReportItemBase" /> is already a 
            child of another report item it is removed from that item 
            before it is added to another item.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.AddRange(Telerik.Reporting.ReportItemBase[])">
      <summary>
            Adds an array of report item objects to the collection. 
            </summary>
      <param name="items">
            An array of <see cref="T:Telerik.Reporting.ReportItemBase" /> 
            objects to add to the collection.
            </param>
      <remarks>
        <para>The <B>ReportItemBase</B> objects contained in the 
            items array are appended to the end of the collection.</para>
        <para>You can use the <B>AddRange</B> method to quickly add a 
            group of <B>ReportItemBase</B> objects to the collection 
            instead of manually adding each <B>ReportItemBase</B> to the 
            collection using the 
            <see cref="M:Telerik.Reporting.ReportItemBase.ItemCollection.Add(Telerik.Reporting.ReportItemBase)" /> 
            method.</para>
        <para>To remove a <B>ReportItemBase</B> that you previously 
            added, use the 
            <see cref="M:Telerik.Reporting.ReportItemBase.ItemCollection.Remove(Telerik.Reporting.ReportItemBase)" />, 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />, 
            or <see cref="M:System.Collections.CollectionBase.Clear" /> 
            methods.</para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.Insert(System.Int32,Telerik.Reporting.ReportItemBase)">
      <summary>
            Inserts a specified <B>ReportItemBase</B> object into the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" /> 
            at the specified index location.
            </summary>
      <param name="index">
            The zero-based index location at which to insert the 
            <see cref="T:Telerik.Reporting.ReportItemBase" /> object.
            </param>
      <param name="item">
            The <B>ReportItemBase</B> object to insert into the collection.
            </param>
      <remarks>
        <para>Use the <B>Insert</B> method to insert a specified 
            <B>ReportItemBase</B> object into the 
            <B>ReportItemBase.ItemCollection</B> object at a specified 
            index location.
            </para>
        <para>To add a <B>ReportItemBase</B> object at the end of the 
            <B>ReportItemBase.ItemCollection</B> object, use the 
            <see cref="M:Telerik.Reporting.ReportItemBase.ItemCollection.Add(Telerik.Reporting.ReportItemBase)" /> 
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.Remove(Telerik.Reporting.ReportItemBase)">
      <summary>
            Removes the specified report item from the item collection.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase" /> to remove 
            from the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" />.
            </param>
      <remarks>
        <para>
            When a <B>ReportItemBase</B> is removed from the report item 
            collection, all subsequent report items are moved up one 
            position in the collection.
            </para>
        <para>
            You can also remove a <B>ReportItemBase</B> by using the 
            <see cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" /> 
            method, or remove all report items by using the 
            <see cref="M:System.Collections.CollectionBase.Clear" /> method.
            </para>
        <para>
            To add new <B>ReportItemBase</B> objects to the collection, use 
            the 
            <see cref="M:Telerik.Reporting.ReportItemBase.ItemCollection.Add(Telerik.Reporting.ReportItemBase)" /> 
            or 
            <see cref="M:Telerik.Reporting.ReportItemBase.ItemCollection.AddRange(Telerik.Reporting.ReportItemBase[])" /> 
            methods.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.RemoveByKey(System.String)">
      <summary>
            Removes the child report item with the specified key.
            </summary>
      <param name="key">
            The name of the child report item to remove.
            </param>
      <remarks>
            The <see cref="P:Telerik.Reporting.ReportItemBase.Name" /> 
            property of a <see cref="T:Telerik.Reporting.ReportItemBase" /> 
            corresponds to the key for a <B>ReportItemBase</B> in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" />.
            </remarks>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.Contains(Telerik.Reporting.ReportItemBase)">
      <summary>
            Determines whether the specified report item is a member of the 
            collection.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase" /> to locate in 
            the collection.
            </param>
      <returns>
        <B>true</B> if the <B>ReportItemBase</B> is a member of the 
            collection; otherwise, <B>false</B>.
            </returns>
      <remarks>
        <para>This method enables you to determine whether a 
            <B>ReportItemBase</B> is a member of the collection before 
            attempting to perform operations on the <B>ReportItemBase</B>. 
            You can use this method to confirm that a <B>ReportItemBase</B> 
            has been added to or is still a member of the collection.</para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.ContainsKey(System.String)">
      <summary>
            Determines whether the <B>ReportItemBase.ItemCollection</B> 
            contains an item with the specified key.
            </summary>
      <param name="key">
            The key to locate in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" />.
            </param>
      <returns>
        <B>true</B> if the <B>ReportItemBase.ItemCollection</B> 
            contains an item with the specified key; otherwise, 
            <B>false</B>.
            </returns>
      <remarks>
            The <see cref="P:Telerik.Reporting.ReportItemBase.Name" /> 
            property of a <see cref="T:Telerik.Reporting.ReportItemBase" /> 
            corresponds to the key for a <B>ReportItemBase</B> in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" />.
            </remarks>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.IsValidIndex(System.Int32)">
      <summary>
            Gets a value indicating whether the specified index exists in
            the collection.
            </summary>
      <param name="index">
            An index value to check.
            </param>
      <returns>
        <B>true</B> if the collection contains an item with the 
            specified index; otherwise <B>false</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.IndexOf(Telerik.Reporting.ReportItemBase)">
      <summary>
            Retrieves the index of the specified report item in the report 
            item collection.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase" /> to locate in 
            the collection.
            </param>
      <returns>
            A zero-based index value that represents the position of the specified 
            <B>ReportItemBase</B> in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" />.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.IndexOfKey(System.String)">
      <summary>
            Retrieves the index of the first occurrence of the specified 
            item within the collection.
            </summary>
      <param name="key">
            The name of the report item to search for. 
            </param>
      <returns>
            The zero-based index of the first occurrence of the report item 
            with the specified name in the collection. 
            </returns>
      <remarks>
        <para>
            The key comparison is not case-sensitive. If the <I>key</I> 
            parameter is a null reference (Nothing in Visual Basic) or an 
            empty string, or an item with the specified key is not found, 
            <B>IndexOfKey</B> returns -1.
            </para>
        <para>
            The <see cref="P:Telerik.Reporting.ReportItemBase.Name" /> 
            property of a <see cref="T:Telerik.Reporting.ReportItemBase" /> 
            corresponds to the key for a <B>ReportItemBase</B> in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" />.
            </para>
      </remarks>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the entire contents of this collection to a compatible 
            one-dimensional <B>Array</B>, starting at the specified index 
            of the target array.
            </summary>
      <param name="dest">
            The one-dimensional <see cref="T:System.Array" /> that is the 
            destination of the elements copied from the current collection. 
            The array must have zero-based indexing.
            </param>
      <param name="index">
            The zero-based index in <I>array</I> at which copying begins.
            </param>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.OnValidate(System.Object)">
      <summary>
            Performs additional custom processes when validating a value. 
            </summary>
      <param name="value">
            The object to validate.
            </param>
      <exception cref="T:System.ArgumentException">
            The object is not an instance of the 
            <see cref="T:Telerik.Reporting.ReportItemBase" /> class or one of 
            its derived classes.
            </exception>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>
            Overrides the <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /> 
            method.
            </summary>
      <param name="index">
            The zero-based index at which to insert <I>value</I>.
            </param>
      <param name="value">
            The new value of the element at <I>index</I>.
            </param>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
            Overrides the <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> 
            method.
            </summary>
      <param name="index">
            The zero-based index at which <I>value</I> can be found.
            </param>
      <param name="value">
            The value of the element to remove from <I>index</I>.
            </param>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.Find(System.String,System.Boolean)">
      <summary>
            Searches for report items by their 
            <see cref="P:Telerik.Reporting.ReportItemBase.Name" /> 
            property and builds an array of all the report items that 
            match.
            </summary>
      <param name="key">
            The key to locate in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" />.
            </param>
      <param name="recursive">
        <B>true</B> to search all child report items; otherwise, 
            <B>false</B>.
            </param>
      <returns>
            An array of type 
            <see cref="T:Telerik.Reporting.ReportItemBase" /> containing the 
            matching report items.
            </returns>
      <exception cref="T:System.ArgumentNullException">
            The <I>key</I> parameter is <B>null</B> or empty.
            </exception>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.FindItem(System.Type)">
      <summary>
            Searches the collection for a report item of the specified 
            type. 
            </summary>
      <param name="type">
            The <see cref="T:System.Type" /> to search for.
            </param>
      <returns>
            The first <see cref="T:Telerik.Reporting.ReportItemBase" /> in 
            the collection that matches the given 
            <see cref="T:System.Type" />. If no item in the collection
            matches the given <see cref="T:System.Type" /> the method returns
            <B>null</B>.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.Find(System.Type)">
      <summary>
            Searches for report items by their Type and builds an array of 
            all the items that match.
            </summary>
      <param name="type">
            The <see cref="T:System.Type" /> to search for.
            </param>
      <returns>
            An array of type 
            <see cref="T:Telerik.Reporting.ReportItemBase" /> containing the 
            matching report items.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.Find(System.Type,System.Boolean)">
      <summary>
            Searches for report items by their Type and builds an array of 
            all the items that match.
            </summary>
      <param name="type">
            The <see cref="T:System.Type" /> to search for.
            </param>
      <param name="recursive">A value indicating whether to search 
            all children recursively.</param>
      <returns>
            An array of type 
            <see cref="T:Telerik.Reporting.ReportItemBase" /> containing the 
            matching report items.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.GetChildIndex(Telerik.Reporting.ReportItemBase)">
      <summary>
            Retrieves the index of a report item within the item 
            collection. 
            </summary>
      <param name="child">
            The <see cref="T:Telerik.Reporting.ReportItemBase" /> to search 
            for in the item collection. 
            </param>
      <returns>
            A zero-based index value that represents the location of the 
            specified child report item within the item collection.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.GetChildIndex(Telerik.Reporting.ReportItemBase,System.Boolean)">
      <summary>
            Retrieves the index of the specified child report item within 
            the item collection, and optionally raises an exception if the 
            specified report item is not within the item collection.
            </summary>
      <param name="child">
            The <see cref="T:Telerik.Reporting.ReportItemBase" /> to search 
            for in the item collection. 
            </param>
      <param name="throwException">
        <B>true</B> to throw an exception if the <B>ReportItemBase</B> 
            specified in the child parameter is not an item in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" />; 
            otherwise, <B>false</B>.
            </param>
      <returns>
            A zero-based index value that represents the location of the 
            specified child report item within the item collection; 
            otherwise -1 if the specified <B>ReportItemBase</B> is not 
            found in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" />. 
            </returns>
      <exception cref="T:System.ArgumentException">
            The <I>child</I> is not contained in the collection and the
            <I>throwException</I> parameter is <B>true</B>.
            </exception>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.SetChildIndex(Telerik.Reporting.ReportItemBase,System.Int32)">
      <summary>
            Sets the index of the specified child report item in the 
            collection to the specified index value.
            </summary>
      <param name="child">
            The child <see cref="T:Telerik.Reporting.ReportItemBase" /> to 
            search for.
            </param>
      <param name="newIndex">
            The new index value of the report item. 
            </param>
      <remarks>
        <para>
            When <B>SetChildIndex</B> is called, the <B>ReportItemBase</B> 
            referred to by the <I>child</I> parameter is moved to the 
            position specified by <I>newIndex</I> and the other 
            <B>ReportItemBase</B> references in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" /> 
            are reordered to accommodate the move.
            </para>
      </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItemBase.ItemCollection.Item(System.Int32)">
      <summary>
            Returns the <see cref="T:Telerik.Reporting.ReportItemBase" /> at 
            the specified indexed location in the collection.            
            </summary>
      <param name="index">
            The index of the report item to retrieve from the report item 
            collection.
            </param>
      <value>
            The <see cref="T:Telerik.Reporting.ReportItemBase" /> located at 
            the specified index location within the report item collection. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.ReportItemBase.ItemCollection.Item(System.String)">
      <summary>
            Returns the <see cref="T:Telerik.Reporting.ReportItemBase" /> with 
            the specified key in the collection.            
            </summary>
      <param name="key">
            The name of the report item to retrieve from the report item 
            collection.
            </param>
      <value>
            The <see cref="T:Telerik.Reporting.ReportItemBase" /> with the 
            specified key in the collection. 
            </value>
    </member>
    <member name="T:Telerik.Reporting.ReportItemBase.PropertyDescriptor">
      <summary>
      </summary>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the 
            <see cref="T:Telerik.Reporting.ReportItemBase" /> and its child items
            and optionally releases the managed resources. 
            </summary>
      <param name="disposing">
        <B>true</B> to release both managed and unmanaged resources;
            <B>false</B> to release only unmanaged resources.
            </param>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents the current 
            <see cref="T:Telerik.Reporting.ReportItemBase" />.
            </summary>
      <returns>
            A <B>String</B> that contains the <B>Name</B> and the Type's 
            FullName of the current 
            <see cref="T:Telerik.Reporting.ReportItemBase" />.
            </returns>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.Contains(Telerik.Reporting.ReportItemBase)">
      <summary>
            Retrieves a value indicating whether the specified report item is 
            a child of the report item.
            </summary>
      <returns>
        <b>true</b> if the specified report item is a child of the report 
            item; otherwise, <b>false</b>.
            </returns>
      <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase" /> to evaluate.
            </param>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.RaiseBeginRender(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary>
            Raises the <see cref="E:Telerik.Reporting.ReportItemBase.BeginRender" /> 
            event.
            </summary>
      <param name="e">
            An <see cref="T:System.EventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.RaiseEndRender(System.Object,System.EventArgs)">
      <summary>
            Raises the <see cref="E:Telerik.Reporting.ReportItemBase.EndRender" /> 
            event.
            </summary>
      <param name="e">
            An <see cref="T:System.EventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.RaiseItemDataBinding(System.Object,System.EventArgs)">
      <summary>
            Raises the 
            <see cref="E:Telerik.Reporting.ReportItemBase.ItemDataBinding" /> 
            event.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.RaiseItemDataBound(System.Object,System.EventArgs)">
      <summary>
            Raises the 
            <see cref="E:Telerik.Reporting.ReportItemBase.ItemDataBound" /> event.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.OnItemAdded(Telerik.Reporting.ReportItemBase)">
      <summary>
            Raises the <see cref="E:Telerik.Reporting.ReportItemBase.ItemAdded" /> 
            event.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase" /> being added.
            </param>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.OnItemRemoved(Telerik.Reporting.ReportItemBase)">
      <summary>
            Raises the 
            <see cref="E:Telerik.Reporting.ReportItemBase.ItemRemoved" /> event.
            </summary>
      <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase" /> being removed.
            </param>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.CanAdd(Telerik.Reporting.ReportItemBase)">
      <summary>
            Indicates whether this item can add the specified <i>item</i> as a 
            child.
            </summary>
      <param name="item">The <i>item</i> to check.</param>
      <returns>
        <B>true</B> if the specified <I>item</I> can be a 
            <B>added</B> to this item, otherwise <B>false</B>.</returns>
      <remarks>
            The CanAdd method checks two conditions
            </remarks>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.CanParent(System.Type)">
      <summary>
            Indicates wheter an object of the specified <I>type</I> can be a 
            <B>direct child</B> of this item.
            </summary>
      <param name="type">The <I>type</I> to check.</param>
      <returns>
        <B>true</B> if an object of the specified <I>type</I> can 
            be a <B>direct child</B> of this item, otherwise <B>false</B>.
            </returns>
      <remarks>
            If an item cannot contain an object of a given type, then it cannot 
            parent it as well. If an item cannot parent an object of a given 
            type, this does not mean that it cannot contain it. For example, a 
            Report cannot directly parent a TextBox, but it can contain a 
            TextBox.
            </remarks>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.CanContain(System.Type)">
      <summary>
            Indicates wheter this item can contain an object of the specified 
            <I>type</I>.
            </summary>
      <param name="type">The <I>type</I> to check.</param>
      <returns>
        <B>true</B> if this item can contain an object of the 
            specified <I>type</I>, otherwise <B>false</B>.</returns>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.CanBeAncestorOf(Telerik.Reporting.ReportItemBase)">
      <summary>
            Indicates whether this can be an ancestor of the specified item.
            THIS OBJECT CAN BE AN ANCESTOR OF THE SPECIFIED ITEM WHEN IT CAN 
            CONTAIN THE TYPE OF THE ITEM AND ALL OF ITS DESCENDANTS.
            </summary>
      <param name="item">The <see cref="T:Telerik.Reporting.ReportItemBase" /> 
            to check.</param>
      <returns>
        <B>true</B> if this can be an ancestor of the specified 
            item, otherwise <B>false</B>.</returns>
      <remarks>
            Invalid ancestor-descendant relationships may occur even if the 
            direct parent-child relation (as indicated by the CanParent method) 
            is OK, but the item hierarchy as a whole is not OK (as indicated by 
            the CanContain method). 
            For example, a PageSection can have a Panel as a direct child and a 
            Panel can have a SubReport as a direct child (as indicated by the 
            CanParent method), but if we add a Panel with a SubReport in it to 
            a PageSection we will break the rule that PageSections cannot be
            ancestors of SubReports (CanContain method).
            </remarks>
    </member>
    <member name="M:Telerik.Reporting.ReportItemBase.ApplyStyle(Telerik.Reporting.Drawing.StyleRule,System.Boolean)">
      <summary>
            Applies the specified 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> to this item. 
            </summary>
      <param name="rule">
            The <see cref="T:Telerik.Reporting.Drawing.StyleRule" /> to apply to 
            this istance.
            </param>
      <param name="recursive">A value indicating whether to apply the
            style to the children of this item recursively.
            </param>
    </member>
    <member name="P:Telerik.Reporting.ReportItemBase.Margins">
      <summary>
            Design time purposes only
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportItemBase.Name">
      <summary>
            Gets or sets the name of the report item. 
            </summary>
      <value>
            The name of the report item. 
            </value>
      <remarks>
            The <B>Name</B> property can be used at run time to evaluate the 
            object by name rather than type and programmatic name.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItemBase.Visible">
      <summary>
            Gets or sets a value indicating whether the report item is
            displayed. 
            </summary>
      <value>
        <B>true</B> if the report item is displayed; otherwise,
            <B>false</B>. The default is <B>true</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.ReportItemBase.StyleName">
      <summary>
            Gets or sets the name of the report item's global style. 
            </summary>
      <value>
            A string value specifying the style name.
            </value>
      <remarks>
            Global styles are defined through the 
            <see cref="T:Telerik.Reporting.Report" />'s 
            <see cref="T:Telerik.Reporting.Drawing.StyleSheet" /> property.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItemBase.Style">
      <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.Style" /> object 
            specifying the appearance of the report item. 
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.Style" /> object specifying
            the items's style. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.ReportItemBase.Items">
      <summary>
            Gets the collection of report items contained within the report
            item. 
            </summary>
      <value>
            An <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" />
            representing the collection of items contained within the item.
            </value>
    </member>
    <member name="P:Telerik.Reporting.ReportItemBase.HasChildren">
      <summary>
            Gets a value indicating whether the report item contains one or 
            more child items. 
            </summary>
      <value>
        <B>true</B> if the report item contains one or more child items;
            otherwise, <B>false</B>. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.ReportItemBase.Parent">
      <summary>Gets or sets the parent container of the report item.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.ReportItemBase" /> that represents
            the parent item of the report item. 
            </value>
      <remarks>
            Setting the <B>Parent</B> property value to a null reference
            (Nothing in Visual Basic) removes the item from the
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" /> of 
            its current parent item.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItemBase.Report">
      <summary>
            Gets the report this item belongs to.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Report" /> object which the item 
            belongs to.
            </value>
    </member>
    <member name="P:Telerik.Reporting.ReportItemBase.Properties">
      <summary>
      </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportItemBase.Item(Telerik.Reporting.ReportItemProperty)">
      <summary>
      </summary>
      <param name="key">
      </param>
      <returns>
      </returns>
    </member>
    <member name="E:Telerik.Reporting.ReportItemBase.PropertyChange">
      <summary>
      </summary>
    </member>
    <member name="E:Telerik.Reporting.ReportItemBase.ItemAdded">
      <summary>
            Occurs when a new report item is added to the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" />. 
            </summary>
    </member>
    <member name="E:Telerik.Reporting.ReportItemBase.ItemRemoved">
      <summary>
            Occurs when a report item is removed from the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection" />. 
            </summary>
    </member>
    <member name="E:Telerik.Reporting.ReportItemBase.ItemCreated">
      <summary>
            Occurs when a report item is created. 
            </summary>
    </member>
    <member name="E:Telerik.Reporting.ReportItemBase.ItemDataBinding">
      <summary>
            Occurs when the report item binds to a data source. 
            </summary>
    </member>
    <member name="E:Telerik.Reporting.ReportItemBase.ItemDataBound">
      <summary>
            Occurs after the report item binds to a data source. 
            </summary>
    </member>
    <member name="E:Telerik.Reporting.ReportItemBase.BeginRender">
      <summary>
            Occurs when the report item is about to render to its containing 
            <see cref="T:Telerik.Reporting.Report" />.
            </summary>
    </member>
    <member name="E:Telerik.Reporting.ReportItemBase.EndRender">
      <summary>
            Occurs when the report item is about to render to its containing 
            <see cref="T:Telerik.Reporting.Report" />.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.ReportItem">
      <summary>
            Defines the base class for all report items that can be placed in a
            <see cref="T:Telerik.Reporting.ReportSectionBase" />. Items of this type
            have a location and a size.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.ReportItem.GetClientRectangle">
      <summary>
            Gets the rectangle that represents the client area of the 
            report item. 
            </summary>
      <returns>
            A <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> that 
            represents the client area of the report item. 
            </returns>
      <remarks>
            The client area of a report is the bounds of the item, minus the 
            nonclient elements such as borders and padding.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItem.Size">
      <summary>
            Gets or sets the height and width of the report item. 
            </summary>
      <value>
            The <see cref="T:Telerik.Reporting.Drawing.SizeU" /> that represents 
            the height and width of the report item in <B>Units</B>. 
            </value>
      <remarks>
            Because the <B>SizeU</B> class is a value type (<B>Structure</B> in 
            Visual Basic, <B>struct</B> in Visual C#), it is returned by value, 
            meaning accessing the property returns a copy of the size of the 
            report item. So, adjusting the 
            <see cref="P:Telerik.Reporting.Drawing.SizeU.Width" /> or 
            <see cref="P:Telerik.Reporting.Drawing.SizeU.Height" /> properties of 
            the <B>SizeU</B> returned from this property will not affect the 
            <see cref="P:Telerik.Reporting.ReportItem.Width" /> or 
            <see cref="P:Telerik.Reporting.ReportItem.Height" /> of the report 
            item. To adjust the <B>Width</B> or <B>Height</B> of the report 
            item, you must set the item's <B>Width</B> or <B>Height</B> 
            property, or set the <B>Size</B> property with a new <B>SizeU</B>.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItem.Location">
      <summary>
            Gets or sets the coordinates of the upper-left corner of the report 
            item relative to the upper-left corner of its container.
            </summary>
      <value>
            The <see cref="T:Telerik.Reporting.Drawing.PointU" /> that represents 
            the upper-left corner of the report item relative to the upper-left 
            corner of its container. 
            </value>
      <remarks>
            Because the <B>PointU</B> class is a value type (<B>Structure</B> 
            in Visual Basic, <B>struct</B> in Visual C#), it is returned by 
            value, meaning accessing the property returns a copy of the 
            upper-left point of the report item. So, adjusting the 
            <see cref="P:Telerik.Reporting.Drawing.PointU.X" /> or 
            <see cref="P:Telerik.Reporting.Drawing.PointU.Y" /> properties of the 
            <B>PointU</B> returned from this property will not affect the 
            <see cref="P:Telerik.Reporting.ReportItem.Left" />, 
            <see cref="P:Telerik.Reporting.ReportItem.Right" />, 
            <see cref="P:Telerik.Reporting.ReportItem.Top" />, or 
            <see cref="P:Telerik.Reporting.ReportItem.Bottom" /> property values 
            of the report item. To adjust these properties set each property 
            value individually, or set the <B>Location</B> property with a new 
            <B>PointU</B>.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItem.Anchor">
      <summary>
            Gets or sets the edges of the container to which a report is bound 
            and determines how a report items is resized with its parent.
            </summary>
      <value>
            A bitwise combination of the 
            <see cref="T:System.Windows.Forms.AnchorStyles" /> values. The default 
            is <see cref="F:System.Windows.Forms.AnchorStyles.None" />. 
            </value>
      <remarks>
        <para>
            Use the <B>Anchor</B> property to define how a report is automatically 
            resized as its parent item is resized. Anchoring a report to its 
            parent ensures that the anchored edges remain in the same position 
            relative to the edges of the parent when the parent control is 
            resized.
            </para>
        <para>
            You can anchor a report item to one or more edges of its 
            container. For example, if you have a <B>DetailSection</B> with a 
            <B>TextBox</B> whose <B>Anchor</B> property value is set to 
            <B>Top</B> and <B>Bottom</B>, the <B>TextBox</B> is stretched to 
            maintain the anchored distance to the top and bottom edges of the 
            <B>DetailSection</B> as the <B>Height</B> of the 
            <B>DetailSection</B> is increased.
            </para>
        <para>
          <B>Note:</B>The <B>Anchor</B> and 
            <see cref="P:Telerik.Reporting.ReportItem.Dock" /> properties are 
            mutually exclusive. Only one can be set at a time, and the last one 
            set takes precedence.
            </para>
      </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItem.Dock">
      <summary>
            Gets or sets which report item borders are docked to its parent 
            and determines how a report item is resized with its parent. 
            </summary>
      <value>
            One of the <see cref="T:System.Windows.Forms.DockStyle" /> values. 
            The default is <see cref="F:System.Windows.Forms.DockStyle.None" />. 
            </value>
      <remarks>
        <para>
            Use the <B>Dock</B> property to define how a report is 
            automatically resized as its parent is resized. For example, 
            setting <B>Dock</B> to 
            <see cref="F:System.Windows.Forms.DockStyle.Bottom" /> causes the report 
            item to align itself with the bottom edges of its parent and to 
            resize as the parent is resized.
            </para>
        <para>
            A report item can be docked to one edge of its parent container or 
            can be docked to all edges and fill the parent container.
            </para>
        <para>
          <B>Note:</B>The <see cref="P:Telerik.Reporting.ReportItem.Anchor" /> 
            and <B>Dock</B> properties are mutually exclusive. Only one can be 
            set at a time, and the last one set takes precedence.
            </para>
      </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItem.Bounds">
      <summary>
            Gets or sets the size and location of the report item including its 
            nonclient elements, in Units, relative to the parent report item.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.RectangleU" /> relative to 
            the parent report item that represents the size and location of the 
            report item including its nonclient elements.
            </value>
      <remarks>
            The bounds of the report item include the nonclient elements such 
            as borders and padding.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItem.Left">
      <summary>
            Gets or sets the distance, in Units, between the left edge of the 
            report item and the left edge of its container's client area.
            </summary>
      <value>
            An <see cref="T:Telerik.Reporting.Drawing.Unit" /> representing the 
            distance between the left edge of the report item and the left edge 
            of its container's client area.
            </value>
      <remarks>
        <para>
            The <B>Left</B> property value is equivalent to the 
            <see cref="P:Telerik.Reporting.Drawing.PointU.X" /> property of the 
            <see cref="P:Telerik.Reporting.ReportItem.Location" /> property value 
            of the report item.
            </para>
        <para>
            Changes made to the 
            <see cref="P:Telerik.Reporting.ReportItem.Width" /> and <B>Left</B> 
            property values cause the 
            <see cref="P:Telerik.Reporting.ReportItem.Right" /> property value of 
            the report item to change.
            </para>
      </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItem.Right">
      <summary>
            Gets the distance, in Units, between the right edge of the 
            report item and the left edge of its container's client area.
            </summary>
      <value>
            An <see cref="T:Telerik.Reporting.Drawing.Unit" /> representing the 
            distance between the right edge of the report item and the left edge 
            of its container's client area.
            </value>
      <remarks>
        <para>
            The value of the <B>Right</B> property is equal to the sum of the 
            <see cref="P:Telerik.Reporting.ReportItem.Left" /> property value and 
            the <see cref="P:Telerik.Reporting.ReportItem.Width" /> property 
            value.
            </para>
      </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItem.Top">
      <summary>
            Gets or sets the distance, in Units, between the top edge of the 
            report item and the top edge of its container's client area.
            </summary>
      <value>
            An <see cref="T:Telerik.Reporting.Drawing.Unit" /> representing the 
            distance between the top edge of the report item and the top edge 
            of its container's client area.
            </value>
      <remarks>
        <para>
            The <B>Top</B> property value is equivalent to the 
            <see cref="P:Telerik.Reporting.Drawing.PointU.Y" /> property of the 
            <see cref="P:Telerik.Reporting.ReportItem.Location" /> property value 
            of the report item.
            </para>
        <para>
            Changes made to the 
            <see cref="P:Telerik.Reporting.ReportItem.Height" /> and <B>Top</B> 
            property values cause the 
            <see cref="P:Telerik.Reporting.ReportItem.Bottom" /> property value of 
            the report item to change.
            </para>
      </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItem.Bottom">
      <summary>
            Gets the distance, in Units, between the bottom edge of the 
            report item and the top edge of its container's client area.
            </summary>
      <value>
            An <see cref="T:Telerik.Reporting.Drawing.Unit" /> representing the 
            distance between the bottom edge of the report item and the top 
            edge of its container's client area.
            </value>
      <remarks>
        <para>
            The value of the <B>Bottom</B> property is equal to the sum of the 
            <see cref="P:Telerik.Reporting.ReportItem.Top" /> property value and 
            the <see cref="P:Telerik.Reporting.ReportItem.Height" /> property 
            value.
            </para>
      </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItem.Width">
      <summary>
            Gets or sets the width of the report item.
            </summary>
      <value>
            The width of the report item in Units.
            </value>
      <remarks>
            Changes made to the <B>Width</B> and 
            <see cref="P:Telerik.Reporting.ReportItem.Left" /> property values 
            cause the <see cref="P:Telerik.Reporting.ReportItem.Right" /> property 
            value of the report item to change.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItem.Height">
      <summary>
            Gets or sets the height of the report item.
            </summary>
      <value>
            The height of the report item in Units.
            </value>
      <remarks>
            Changes made to the <B>Height</B> and 
            <see cref="P:Telerik.Reporting.ReportItem.Top" /> property values 
            cause the <see cref="P:Telerik.Reporting.ReportItem.Bottom" /> property 
            value of the report item to change.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.ReportItem.DefaultSize">
      <summary>
            Gets the default size of the report item.
            </summary>
      <value>
            The default <see cref="T:Telerik.Reporting.Drawing.SizeU" /> of the 
            report item. 
            </value>
      <remarks>
            The <B>DefaultSize</B> property represents the <B>SizeU</B> of the 
            report item when it is initially created. You can adjust the size 
            of the report item by setting its 
            <see cref="P:Telerik.Reporting.ReportItem.Size" /> property value.
            </remarks>
    </member>
    <member name="T:Telerik.Reporting.Barcode">
      <summary>
            Represents a barcode report item. 
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Barcode.Value">
      <summary>
            Gets or sets the current value to be encoded in the barcode.
            </summary>
      <value>
            A <see cref="T:System.String" /> that starts with the symbol "=" is 
            interpreted as an expression to calculate the value of the current
            barcode, otherwise the value is interpreted as a literal string.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Barcode.Module">
      <summary>
            Gets or sets a <see cref="T:Telerik.Reporting.Drawing.Unit" /> 
            representing the width of of the narrowest bar of the barcode.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit" /> value representing 
            the width of the narrowest bar of the barcode.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Barcode.Angle">
      <summary>
            Gets or sets a value indicating the angle of rotation of the bar
            code inside the report item, specified in degrees.
            </summary>
      <value>
            A <I>double</I> value indicating the angle of rotation in degrees.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Barcode.Stretch">
      <summary>
            Gets or sets a value indicating whether to stretch the barcode to 
            fill the entire area of the report item item or not.
            </summary>
      <value>
        <B>true</B> if the barcode should be stretched, otherwise <B>false</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Barcode.Checksum">
      <summary>
            Gets or sets a value indicating whether the barcode should contain a
            checksum for validation purposes during the scanning process or not.
            </summary>
      <value>
        <B>true</B> if the barcode should contain a checksum for validation 
            purposes during the scanning process, otherwise <B>false</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Barcode.ShowText">
      <summary>
            Gets or sets a value indicating whether the barcode should display a 
            human-readable text representation of the encoded value.
            </summary>
      <value>
        <B>true</B> if the barcode should display text, otherwise <B>false</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Barcode.BarAlign">
      <summary>
            Gets or sets the horizontal alignment of the barcode in the report item. 
            </summary>
      <value>
            One of the <see cref="T:Telerik.Reporting.Drawing.HorizontalAlign" /> values. 
            The default value is <B>HorizontalAlign.Center</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Barcode.Symbology">
      <summary>
            Gets or sets a value indicating the current symbology used to 
            encode the <B>Value</B> property as series of bars and spaces.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Barcode.SymbologyType" /> enumerated value 
            indicating the symbology associated with the current barcode.
            </value>
    </member>
    <member name="T:Telerik.Reporting.Chart.EventKeys">
      <summary>
      </summary>
    </member>
    <member name="M:Telerik.Reporting.Chart.RaiseNeedDataSource(System.Object,System.EventArgs)">
      <summary>
            Raises the <see cref="E:Telerik.Reporting.Report.NeedDataSource" />
            event.
            </summary>
      <param name="sender">
            The subreport being processed.
            </param>
      <param name="e">
            An <see cref="T:System.EventArgs" /> that contains event data.
            </param>
    </member>
    <member name="P:Telerik.Reporting.Chart.ChartTitle">
      <summary>
            Collection of titles for chart
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Chart.Legend">
      <summary>
            Chart legend
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Chart.Appearance">
      <summary>
            Link to visualization and design properties
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Chart.PlotArea">
      <summary>
            Chart plot areaa
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Chart.DefaultType">
      <summary>
            Default chart type
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Chart.DataGroupColumn">
      <summary>
            Define a data source column name for grouping data
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Chart.Series">
      <summary>
            Gets or sets the RadChart's chart series collection object.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Chart.SeriesPalette">
      <summary>
            Specifies the series palette        
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Chart.AutoLayout">
      <summary>
            Specifies AutoLayout mode to all items on the chart control.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Chart.AutoTextWrap">
      <summary>
            Specifies AutoTextWrap mode for all wrappable text blocks of the chart control.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Chart.IntelligentLabelsEnabled">
      <summary>Toggles the use of the IntelligentLabels feature.</summary>
    </member>
    <member name="E:Telerik.Reporting.Chart.NeedDataSource">
      <summary>
            Occurs at the start of report processing if the chart has no data source set.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.TextItemBase">
      <summary>
            Represents a Text Item - a base class for report items like TextBox and CheckBox.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.TextItemBase.Angle">
      <summary>
            Gets or sets the angle of rotation of the text in degrees.
            </summary>
      <value>
            A <I>double</I> value indicating the angle of rotation in degrees.
            </value>
    </member>
    <member name="P:Telerik.Reporting.TextItemBase.Format">
      <summary>
            Gets or sets the character(s) that specify how text is formatted.
            </summary>
      <value>
            The character or characters that specify how text is formatted.
            </value>
      <reamarks>
        <para>
            For more information see the 
            <see cref="!:System.String.Format(string format, Object arg0)" /> 
            method.
            </para>
      </reamarks>
    </member>
    <member name="P:Telerik.Reporting.TextItemBase.CanGrow">
      <summary>
            Gets or sets a value indicating whether the Text Item can grow 
            vertically. 
            </summary>
      <value>
        <B>true</B> if the Text Item can grow vertically; otherwise 
            <B>false</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.TextItemBase.CanShrink">
      <summary>
            Gets or sets a value indicating whether the Text Item can shrink 
            vertically. 
            </summary>
      <value>
        <B>true</B> if the Text Item can shrink vertically; otherwise 
            <B>false</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.TextItemBase.Multiline">
      <summary>
            Gets or sets a value indicating whether this is a multiline Text Item.
            </summary>
      <value>
        <B>true</B> if the Text Item supports multiple lines; otherwise 
            <B>false</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.TextItemBase.TextWrap">
      <summary>
            Gets or sets a value indicating whether a Text Item 
            automatically wraps words to the beginning of the next line when 
            necessary. 
            </summary>
      <value>
        <B>true</B> if the Text Item wraps words; otherwise 
            <B>false</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.TextItemBase.Culture">
      <summary>
            Gets or sets the culture information associated with the Text Item.
            </summary>
      <value>
            A <see cref="T:System.Globalization.CultureInfo" /> representing the 
            culture supported by the <see cref="T:Telerik.Reporting.TextItemBase" />. 
            </value>
    </member>
    <member name="T:Telerik.Reporting.CheckBox">
      <summary>
            Represents a check box report item. 
            </summary>
    </member>
    <member name="P:Telerik.Reporting.CheckBox.Text">
      <summary>
            Gets or sets the current text (aka label) in the check box.
            </summary>
      <value>
            A <see cref="T:System.String" /> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string.
            </value>
    </member>
    <member name="P:Telerik.Reporting.CheckBox.Value">
      <summary>
            Gets or sets the value of the check box.
            </summary>
      <value>
            A <see cref="T:System.String" /> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string.
            </value>
    </member>
    <member name="P:Telerik.Reporting.CheckBox.CheckAlign">
      <summary>
            Gets or sets the alignment of the check mark on a CheckBox. 
            </summary>
      <value>
            One of the <see cref="T:System.Drawing.ContentAlignment" /> values.
            The default is <see cref="F:System.Drawing.ContentAlignment.MiddleLeft" />.
            </value>
    </member>
    <member name="P:Telerik.Reporting.CheckBox.FalseValue">
      <summary>
            Gets or sets the value template corresponding to an Unchecked CheckBox
            </summary>
      <value>
            A <see cref="T:System.String" /> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string.
            </value>
    </member>
    <member name="P:Telerik.Reporting.CheckBox.TrueValue">
      <summary>
            Gets or sets the value template corresponding to an Selected CheckBox
            </summary>
      <value>
            A <see cref="T:System.String" /> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string.
            </value>
    </member>
    <member name="P:Telerik.Reporting.CheckBox.IndeterminateValue">
      <summary>
            Gets or sets the value template corresponding to an Indeterminate CheckBox
            </summary>
      <value>
            A <see cref="T:System.String" /> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string.
            </value>
    </member>
    <member name="P:Telerik.Reporting.CheckBox.UncheckedImage">
      <summary>
            Gets or sets the image corresponding to an Unchecked CheckBox
            </summary>
      <value>
            A <see cref="T:System.String" /> started with "=" is interpreted as
            an expression,
            </value>
    </member>
    <member name="P:Telerik.Reporting.CheckBox.CheckedImage">
      <summary>
            Gets or sets the image corresponding to an Selected CheckBox
            </summary>
      <value>
            A <see cref="T:System.String" /> started with "=" is interpreted as
            an expression,
            </value>
    </member>
    <member name="P:Telerik.Reporting.CheckBox.IndeterminateImage">
      <summary>
            Gets or sets the image corresponding to an Indeterminate CheckBox
            </summary>
      <value>
            A <see cref="T:System.String" /> started with "=" is interpreted as
            an expression,
            </value>
    </member>
    <member name="T:Telerik.Reporting.CheckBoxHelper">
      <summary>
            Represents some helpers related to the CheckBox classes.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.ILayoutContainer">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.ILayoutArranger">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.ReportSectionBase">
      <summary>
            Defines the base class for report sections.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.ReportSectionBase.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.ReportSectionBase" /> class.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportSectionBase.Height">
      <summary>
            Gets or sets the height of the current section.
            </summary>
      <value>
            The height of the current section in Units.
            </value>
    </member>
    <member name="T:Telerik.Reporting.ReportSection">
      <summary>
            Base abstract class for all report sections contained in the report
            body. Inherited by 
            <see cref="T:Telerik.Reporting.DetailSection" />, 
            <see cref="T:Telerik.Reporting.GroupSection" />, 
            <see cref="T:Telerik.Reporting.ReportHeaderSection" />, 
            <see cref="T:Telerik.Reporting.ReportFooterSection" />, 
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportSection.PageBreak">
      <summary>
            Gets or sets the page braking rule for this
            <see cref="T:Telerik.Reporting.ReportSection" />.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.PageBreak" /> object specifying the
            page braking rule for this
            <see cref="T:Telerik.Reporting.ReportSection" />.
            </value>
    </member>
    <member name="P:Telerik.Reporting.ReportSection.KeepTogether">
      <summary>
            Gets or sets a value indicating whether the rendering engine should
            try to keep the 
            <see cref="T:Telerik.Reporting.ReportSection" />
            on one page if possible.
            </summary>
      <value>
            A <I>boolean</I> value indicating whether the rendering engine 
            should try to keep the 
            <see cref="T:Telerik.Reporting.ReportSection" />
            on one page if possible.
            </value>
    </member>
    <member name="T:Telerik.Reporting.DetailSection">
      <summary>
            Represents the main section of a 
            <see cref="T:Telerik.Reporting.Report" />. It is printed once for 
            every record in the data source of the report.
            </summary>
      <remarks>
            The Detail section appears below
            <see cref="T:Telerik.Reporting.PageHeaderSection" /> and 
            <see cref="T:Telerik.Reporting.ReportHeaderSection" /> sections and
            above <see cref="T:Telerik.Reporting.PageFooterSection" /> and
            <see cref="T:Telerik.Reporting.ReportFooterSection" /> sections.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.DetailSection.ColumnCount">
      <summary>
            Gets or sets a value that specifies how many columns are present
            in the <see cref="T:Telerik.Reporting.DetailSection" /> of the report.
            </summary>
      <value>
            An integer value specifying the number of columns. 
            The value should be equal to or greater than 1. The default is 1.
            </value>
      <remarks>
        <para>
            Column widths are calculated based on the following rule:
            <B>DetailWidth</B> = <B>ColumnWidth</B> * <B>ColumnCount</B> + 
            <B>ColumSpacing</B> * (<B>ColumnCount</B> - 1)
            </para>
        <para>
            Multi-column reports are primarily used for printing labels. 
            </para>
      </remarks>
    </member>
    <member name="P:Telerik.Reporting.DetailSection.ColumnSpacing">
      <summary>
            Gets or sets a value indicating the space in Units between two 
            adjacent columns.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit" /> value specifying the
            space between two adjacent columns. The value should be a
            non-negative <B>Unit</B>. The default is 
            <see cref="F:Telerik.Reporting.Drawing.Unit.Zero" /></value>
      <remarks>
        <para>
            This property should be used when there should be some blank space
            left between adjacent columns.
            </para>
      </remarks>
    </member>
    <member name="P:Telerik.Reporting.DetailSection.ColumnDirection">
      <summary>
            For the time being image/pdf renderers can render columns 
            in ColumnDirection.Vertical mode only and this prop does not make any sense.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.EnumTypeConverter`1">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Group">
      <summary>
            Represents a class that defines a report group.
            </summary>
      <remartks>
        <para>
            The <B>Group</B> class represents a set of grouping criteria. It also
            acts as a logical holder of the 
            <see cref="T:Telerik.Reporting.GroupHeaderSection" /> and 
            <see cref="T:Telerik.Reporting.GroupFooterSection" /> of the group.
            </para>
        <para>
            The <B>Group</B> objects of a report reside in the component tray.
            </para>
      </remartks>
    </member>
    <member name="M:Telerik.Reporting.Group.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Group" /> class with default settings.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Group.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Group" /> class with the specified
            group header/footer creation option.
            </summary>
      <param name="createHeaderFooter">
        <B>true</B> to create a 
            <see cref="T:Telerik.Reporting.GroupHeaderSection" /> and a 
            <see cref="T:Telerik.Reporting.GroupFooterSection" />; otherwise, 
            <B>false</B>. 
            </param>
    </member>
    <member name="P:Telerik.Reporting.Group.Grouping">
      <summary>
            Gets a 
            <see cref="T:Telerik.Reporting.Data.GroupingCollection" />
            object that holds all 
            <see cref="T:Telerik.Reporting.Data.Grouping" /> objects for
            the group.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Data.GroupingCollection" />
            value containing the group expressions of the group.
            </value>
      <remarks>
            Groups are defined by adding one or more group expressions to the
            collection. Grouping can be done by one or more data fields. Each
            data field is represented by a group expression in the collection.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.Group.Sorting">
      <summary>
            Gets a 
            <see cref="T:Telerik.Reporting.Data.SortingCollection" /> 
            that defines the sort column(s), and their type and order for the
            <B>Group</B></summary>
      <value>
            A <see cref="T:Telerik.Reporting.Data.SortingCollection" /> 
            that contains the 
            <see cref="T:Telerik.Reporting.Data.Sorting" /> objects for the
            <B>Group</B></value>
      <remarks>
            Sort expressions sort the data that is displayed in the 
            <B>Group</B></remarks>
    </member>
    <member name="P:Telerik.Reporting.Group.Filters">
      <summary>
            Gets a 
            <see cref="T:Telerik.Reporting.Data.FilterCollection" /> 
            that defines the filter expression(s) for the
            <see cref="T:Telerik.Reporting.Group" /></summary>
      <value>
            A <see cref="T:Telerik.Reporting.Data.FilterCollection" /> 
            that contains the 
            <see cref="T:Telerik.Reporting.Data.Filter" /> objects for 
            the <B>Group</B></value>
      <remarks>
            Filter expressions limit the data that is displayed in the
            <B>Group</B></remarks>
    </member>
    <member name="P:Telerik.Reporting.Group.GroupKeepTogether">
      <summary>
            Set to FirstDetail to ensure that the group header and the first detail record are printed on the same page of output, or All to ensure that the entire group is printed on the same page of output. If there is not enough space on the current page, then rendering will skip to the top of the next page.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Group.GroupHeader">
      <summary>
            Gets a <see cref="T:Telerik.Reporting.GroupHeaderSection" /> 
            representing the group's header section.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.GroupHeaderSection" /> value that
            reporesents the group header section of the <B>Group</B>.
            </value>
      <remarks>
        <para>
            The Group header section is rendered <I>before</I> the detail 
            sections of the <B>Group</B>. Typically, this section will contain 
            report items that are bound to the data fields of the 
            <B>Group</B>'s grouping expressions.
            </para>
      </remarks>
    </member>
    <member name="P:Telerik.Reporting.Group.GroupFooter">
      <summary>
            Gets a <see cref="T:Telerik.Reporting.GroupFooterSection" /> 
            representing the group's footer section.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.GroupFooterSection" /> value that
            reporesents the group footer section of the <B>Group</B>.
            </value>
      <remarks>
        <para>
            The Group footer section is rendered <I>after</I> the detail 
            sections of the <B>Group</B>.
            </para>
      </remarks>
    </member>
    <member name="P:Telerik.Reporting.Group.Report">
      <summary>
            Gets a <see cref="T:Telerik.Reporting.Report" /> 
            representing the group's owner report.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Report" /> value that
            reporesents the owner report of the <B>Group</B>.
            </value>
    </member>
    <member name="T:Telerik.Reporting.GroupSection">
      <summary>
            Base abstract class for group sections. 
            <see cref="T:Telerik.Reporting.GroupHeaderSection" /> and 
            <see cref="T:Telerik.Reporting.GroupFooterSection" /> inherit from this
            class.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.GroupSection.Group">
      <summary>
            Gets the <see cref="T:Telerik.Reporting.Group" /> object associated
            with this section.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Group" /> object that this section 
            belong to.
            </value>
    </member>
    <member name="P:Telerik.Reporting.GroupSection.PrintOnEveryPage">
      <summary>
            Indicates whether the section should be printed on every page
            that the group occupies.
            </summary>
      <value>
            A <I>boolean</I> value indicating whether the section should be 
            printed on every page that the group occupies.
            </value>
    </member>
    <member name="T:Telerik.Reporting.GroupFooterSection">
      <summary>
            Represents a group footer section. Group footers are displayed at the
            end of a group. Group headers and footers are unified by the
            <see cref="T:Telerik.Reporting.Group" /> class.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.GroupFooterSection.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.GroupFooterSection" /> class.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.GroupHeaderSection">
      <summary>
            Represents a group header section. Group headers are displayed at the
            beginning of a group. Group headers and footers are unified by the
            <see cref="T:Telerik.Reporting.Group" /> class.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.GroupHeaderSection.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.GroupHeaderSection" /> class.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.GroupKeepTogether">
      <summary>
        <B>GroupKeepTogether</B> applies to a group and has similar to the 
            <see cref="P:Telerik.Reporting.ReportSection.KeepTogether" /> meaning, 
            but for the whole group. It indicates whether the rendering engine 
            should try to render the <I>whole group</I> on a single page, the 
            <I>group header plus the first detail</I> on a single page, or leave
            the group flow as it is. If <B>GroupKeepTogether</B> is set to 
            <B>FirstDetail</B> -- the group header and at least one detail in this 
            group should be on the same page; if set to <B>All</B> -- the whole 
            group should be on a single page. The following rule applies: the 
            rendering engine will try to render the group as specified, but if 
            there is not enough space on the current page, the group is moved to 
            the next page and it continues as long as it needs.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.GroupKeepTogether.None">
      <summary>
            The rendering engine will leave the group flow as it is.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.GroupKeepTogether.FirstDetail">
      <summary>
            The rendering engine should try to keep the <I>group header and at 
            least 1 detail</I> on the same page.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.GroupKeepTogether.All">
      <summary>
            The rendering engine should try to keep the <I>whole</I> group on 
            the same 
            page.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.IDataItem">
      <summary>
            Defines an interface for data-bound items.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Arranger">
      <summary>
            Helper class to perform layout operation (if not suspended).
            </summary>
    </member>
    <member name="T:Telerik.Reporting.AutoLayout">
      <summary>
            Helper class to perform automatic suspend/resume + perform layout 
            </summary>
    </member>
    <member name="T:Telerik.Reporting.IResourceResolutionService">
      <summary>
            Provides an interface for resolving resources.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.ItemEventArgs">
      <summary>
            Provides data for the 
            <see cref="E:Telerik.Reporting.ReportItemBase.ItemAdded" /> and
            <see cref="E:Telerik.Reporting.ReportItemBase.ItemRemoved" /> events. 
            </summary>
    </member>
    <member name="M:Telerik.Reporting.ItemEventArgs.#ctor(Telerik.Reporting.ReportItemBase)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.ItemEventArgs" /> class with the
            specified item that is added or removed.
            </summary>
      <param name="item">
            A <see cref="T:Telerik.Reporting.ReportItemBase" /> that is the item
            being added or removed.
            </param>
    </member>
    <member name="P:Telerik.Reporting.ItemEventArgs.Item">
      <summary>
            Gets the report item that is added/removed.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.ReportItemBase" /> that is the item
            being added or removed.
            </value>
    </member>
    <member name="T:Telerik.Reporting.ItemEventHandler">
      <summary>
            Handles the events that occur when items are being added to or removed
            from an items collection.
            </summary>
      <param name="sender">
            The item whose collection is being modified.
            </param>
      <param name="e">
            An object of the <see cref="T:Telerik.Reporting.ItemEventArgs" /> class 
            that contains the item that is being added or removed.
            </param>
    </member>
    <member name="T:Telerik.Reporting.LayoutEngine">
      <summary>
      </summary>
    </member>
    <member name="M:Telerik.Reporting.LayoutEngine.Layout(Telerik.Reporting.ILayoutContainer)">
      <summary>
      </summary>
      <param name="container">container which children need to be arranged</param>
    </member>
    <member name="T:Telerik.Reporting.ObjectValueConverter">
      <summary>
            Allows a property of type Object to be edited like a string property in the Properties window
            </summary>
    </member>
    <member name="T:Telerik.Reporting.PageBreak">
      <summary>
            Specifies where to make a page break, with respect to a
            <see cref="T:Telerik.Reporting.ReportSection" />.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.PageBreak.None">
      <summary>
            No page break will occur.
            </summary>
    </member>
    <member name="F:Telerik.Reporting.PageBreak.Before">
      <summary>
            A page break will occur before the 
            <see cref="T:Telerik.Reporting.ReportSection" /></summary>
    </member>
    <member name="F:Telerik.Reporting.PageBreak.After">
      <summary>
            A page break will occur after the 
            <see cref="T:Telerik.Reporting.ReportSection" /></summary>
    </member>
    <member name="F:Telerik.Reporting.PageBreak.BeforeAndAfter">
      <summary>
            A page break will occur before and after the 
            <see cref="T:Telerik.Reporting.ReportSection" /></summary>
    </member>
    <member name="T:Telerik.Reporting.PageEventArgs">
      <summary>
            Provides data for the 
            <see cref="E:Telerik.Reporting.Report.BeginRenderPage" /> and
            <see cref="E:Telerik.Reporting.Report.EndRenderPage" /> events. 
            </summary>
    </member>
    <member name="M:Telerik.Reporting.PageEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.PageEventArgs" /> class with the
            specified page number and page count.
            </summary>
      <param name="pageNumber">
            The number of the page.
            </param>
      <param name="pageCount">
            The total number of pages.
            </param>
    </member>
    <member name="P:Telerik.Reporting.PageEventArgs.PageNumber">
      <summary>
            Gets the number of the page that the event is beign raised for.
            </summary>
      <value>
            A <I>int</I> value specifying the number of the page that the event 
            is beign raised for.
            </value>
    </member>
    <member name="P:Telerik.Reporting.PageEventArgs.PageCount">
      <summary>
            Gets the total number of pages of the report.
            </summary>
      <value>
            A <I>int</I> value specifying the total number of pages of the 
            report.
            </value>
    </member>
    <member name="T:Telerik.Reporting.PageEventHandler">
      <summary>
            Handles the events that occur when a page rendering begins or ends.
            </summary>
      <param name="sender">
            The report that owns the page.
            </param>
      <param name="e">
            An object of the <see cref="T:Telerik.Reporting.PageEventArgs" /> class 
            that contains data for the page being rendered.
            </param>
    </member>
    <member name="T:Telerik.Reporting.PageSection">
      <summary>
            Base abstract class for group sections. 
            <see cref="T:Telerik.Reporting.PageHeaderSection" /> and 
            <see cref="T:Telerik.Reporting.PageFooterSection" /> inherit from this
            class.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.PageSection.PrintOnFirstPage">
      <summary>
            Gets or sets a value indicating whether the section should print
            on the first page of the report.
            </summary>
      <value>
            A <I>boolean</I> value indicating whether the section should print
            on the first page of the report.
            </value>
    </member>
    <member name="P:Telerik.Reporting.PageSection.PrintOnLastPage">
      <summary>
            Gets or sets a value indicating whether the section should print
            on the last page of the report.
            </summary>
      <value>
            A <I>boolean</I> value indicating whether the section should print
            on the last page of the report.
            </value>
    </member>
    <member name="T:Telerik.Reporting.PageFooterSection">
      <summary>
            Represents a page footer section. Page footers are displayed at the
            end of a page.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.PageHeaderSection">
      <summary>
            Represents a page header section. Page headers are displayed at the
            beginning of a page.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Panel">
      <summary>
            Provides a grouping mechanism for organizing report items. 
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Parameter">
      <summary>
            Represents a parameter of nested report (subreport)
            </summary>
    </member>
    <member name="T:Telerik.Reporting.ParameterCollection">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.ParameterConverter">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.PictureBox">
      <summary>
            Represents a picture box report item for displaying an image. 
            </summary>
    </member>
    <member name="P:Telerik.Reporting.PictureBox.Value">
      <summary>
            Gets or sets the value associated with this <see cref="T:Telerik.Reporting.PictureBox" />.
            </summary>
      <value>
            A <see cref="T:System.String" /> that starts with "=" is interpreted as data expression;
            <see cref="T:System.Drawing.Image" /> that holds an image data.
            </value>
    </member>
    <member name="P:Telerik.Reporting.PictureBox.Sizing">
      <summary>
            Gets or sets the sizing mode of the 
            <see cref="T:Telerik.Reporting.PictureBox" />.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.ImageSizeMode" /> object
            that specifies the sizing mode of the 
            <see cref="T:Telerik.Reporting.PictureBox" />.
            </value>
    </member>
    <member name="P:Telerik.Reporting.PictureBox.MimeType">
      <summary>
            Gets or sets a string that contains the picture box's Multipurpose 
            Internet Mail Extensions (MIME) type.
            </summary>
      <value>
            A string that contains the picture box's Multipurpose Internet Mail 
            Extensions (MIME) type. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.PictureBox.DefaultSize">
      <summary>
            This member overrides 
            <see cref="P:Telerik.Reporting.ReportItem.DefaultSize" />.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.SizeU" /> object that defines
            the default size of the <see cref="T:Telerik.Reporting.PictureBox" />.
            It is 100 pixels wide by 100 pixels high by default.
            </value>
    </member>
    <member name="T:Telerik.Reporting.PropertyChangeEventArgs">
      <summary>
            Used in PropertyStore
            </summary>
    </member>
    <member name="T:Telerik.Reporting.PropertyChangeEventHandler">
      <summary>
            Used in PropertyStore
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Report">
      <summary>
            Represents the base class for any report in the Telerik Reporting. 
            </summary>
      <remarks>
            All reports created with Telerik Reporting inherit from the 
            <see cref="T:Telerik.Reporting.Report" /> class. The <B>Report</B>
            comprises of one or more report sections which contain report items.
            </remarks>
    </member>
    <member name="T:Telerik.Reporting.Report.EventKeys">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.Report.GroupCollectionInternal">
      <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.Group" />
            objects.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Report.#ctor">
      <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Report" /> class with default settings.
            </summary>
    </member>
    <member name="M:Telerik.Reporting.Report.RaiseNeedDataSource(System.Object,System.EventArgs)">
      <summary>
            Raises the <see cref="E:Telerik.Reporting.Report.NeedDataSource" />
            event.
            </summary>
      <param name="sender">
            The report being processed.
            </param>
      <param name="e">
            An <see cref="T:System.EventArgs" /> that contains event data.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Report.RaiseBeginRenderPage(System.Object,Telerik.Reporting.PageEventArgs)">
      <summary>
            Raises the <see cref="E:Telerik.Reporting.Report.BeginRenderPage" /> 
            event.
            </summary>
      <param name="sender">
            The report being processed.
            </param>
      <param name="e">
            A <see cref="T:Telerik.Reporting.PageEventArgs" /> object that 
            contains the event data.
            </param>
    </member>
    <member name="M:Telerik.Reporting.Report.RaiseEndRenderPage(System.Object,Telerik.Reporting.PageEventArgs)">
      <summary>
            Raises the <see cref="E:Telerik.Reporting.Report.EndRenderPage" /> 
            event.
            </summary>
      <param name="sender">
            The report being processed.
            </param>
      <param name="e">
            A <see cref="T:Telerik.Reporting.PageEventArgs" /> object that 
            contains the event data.
            </param>
    </member>
    <member name="P:Telerik.Reporting.Report.Width">
      <summary>
            Gets or sets the width of the report.
            </summary>
      <value>
            The width of the report in Units.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Report.StyleSheet">
      <summary>
            Gets the <see cref="T:Telerik.Reporting.Drawing.StyleSheet" />
            associated with the report.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.StyleSheet" /> object
            representing a collection of style rules.
            </value>
      <remarks>
            The <see cref="P:Telerik.Reporting.Report.StyleSheet" /> property
            of a report can be used to define various types of styles for use
            by the report items.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.Report.ExternalStyleSheets">
      <summary>
            Gets the collection of ExternalStyleSheets for the report.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Report.Culture">
      <summary>
            Gets or sets the culture information associated with the report. 
            </summary>
      <value>
            A <see cref="T:System.Globalization.CultureInfo" /> representing the 
            culture supported by the <see cref="T:Telerik.Reporting.Report" />. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Report.UnitOfMeasure">
      <summary>
            Gets or sets the default unit of measure for the report.
            </summary>
      <value>
            An <see cref="T:Telerik.Reporting.Drawing.UnitType" /> representing
            the default unit of measure for the report.
            </value>
      <remarks>
            All newly created report items will have their locations, sizes, 
            etc. in this <see cref="T:Telerik.Reporting.Drawing.UnitType" />.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.Report.PageSettings">
      <summary>
            Gets or sets the page settings for the 
            <see cref="T:Telerik.Reporting.Report" /> . 
            </summary>
      <value>
            The page settings for the <see cref="T:Telerik.Reporting.Report" />. 
            </value>
    </member>
    <member name="P:Telerik.Reporting.Report.DataSource">
      <summary>
            Gets or sets the data source that the 
            <see cref="T:Telerik.Reporting.Report" /> is displaying data for.
            </summary>
      <value>
            An object that functions as a data source. 
            </value>
      <remarks>
        <para>
            The following data sources are valid:
            </para>
        <ul>
          <li>A <see cref="T:System.Data.DataTable" /></li>
          <li>A <see cref="T:System.Data.DataView" /></li>
          <li>A <see cref="T:System.Data.DataSet" /></li>
          <li>A <see cref="T:System.Data.DataViewManager" /></li>
          <li>Any component that implements the 
            <see cref="T:System.ComponentModel.IListSource" /> interface</li>
          <li>Any component that implements the 
            <see cref="T:System.Collections.IEnumerable" /> interface</li>
          <li>Any component that implements the 
            <see cref="T:System.Data.IDataAdapter" /> interface</li>
        </ul>
        <para>
            If the <B>DataSource</B> reference contains more than one table, 
            you must set the <B>DataMember</B> property a string that specifies 
            the table to bind to. For example, if the <B>DataSource</B> is a 
            <B>DataSet</B> or <B>DataViewManager</B> that contains three tables 
            named <CODE>Customers</CODE>, <CODE>Orders</CODE>, and 
            <CODE>OrderDetails</CODE>, you must specify the table to bind to.
            </para>
        <para>
            Setting the <B>DataSource</B> to an object that does not implement 
            the <B>IListSource</B>, <B>IEnumerable</B>, or <B>IDataAdapter</B> 
            will cause an exception.
            </para>
      </remarks>
    </member>
    <member name="P:Telerik.Reporting.Report.DataMember">
      <summary>
            Gets or sets the specific list in a 
            <see cref="P:Telerik.Reporting.Report.DataSource" /> which the 
            <see cref="T:Telerik.Reporting.Report" /> will render.
            </summary>
      <value>
            A list in a <B>DataSource</B>. The default is an empty string (""). 
            </value>
      <remarks>
        <para>
            If a <B>DataSource</B> contains multiple sources of data, you 
            should set the <B>DataMember</B> to one of the sources. For 
            example, if the <B>DataSource</B> is a 
            <see cref="T:System.Data.DataSet" /> or 
            <see cref="T:System.Data.DataViewManager" /> that contains three 
            tables named <CODE>Customers</CODE>, <CODE>Orders</CODE>, and 
            <CODE>OrderDetails</CODE>, you must specify the table to bind to.
            </para>
        <para>
            If the <B>DataSource</B> is a <see cref="T:System.Data.DataTable" />, 
            <see cref="T:System.Data.DataView" />, collection, or array, there is
            no need to set the <B>DataMember</B> property of the 
            <see cref="T:Telerik.Reporting.Report" /></para>
      </remarks>
    </member>
    <member name="P:Telerik.Reporting.Report.Filters">
      <summary>
            Gets a 
            <see cref="T:Telerik.Reporting.Data.FilterCollection" /> 
            that defines the filter expression(s) for the
            <see cref="T:Telerik.Reporting.Report" /></summary>
      <value>
            A <see cref="T:Telerik.Reporting.Data.FilterCollection" /> 
            that contains the 
            <see cref="T:Telerik.Reporting.Data.Filter" /> objects for 
            the <B>Report</B></value>
      <remarks>
            Filter expressions limit the data that is displayed to the user 
            after the data is retrieved from the data source.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.Report.Sorting">
      <summary>
            Gets a 
            <see cref="T:Telerik.Reporting.Data.SortingCollection" /> 
            that defines the sort column(s), and their type and order for the
            <see cref="T:Telerik.Reporting.Report" /></summary>
      <value>
            A <see cref="T:Telerik.Reporting.Data.SortingCollection" /> 
            that contains the 
            <see cref="T:Telerik.Reporting.Data.Sorting" /> objects for the
            <B>Report</B></value>
      <remarks>
            Sort expressions sort the data that is displayed to the user 
            after the data is retrieved from the data source.
            </remarks>
    </member>
    <member name="P:Telerik.Reporting.Report.Groups">
      <summary>
            Gets a 
            <see cref="T:Telerik.Reporting.Data.GroupCollection" /> 
            that defines the groups for the 
            <see cref="T:Telerik.Reporting.Report" /></summary>
      <value>
            A <see cref="T:Telerik.Reporting.Data.GroupCollection" /> 
            that contains the 
            <see cref="T:Telerik.Reporting.Group" /> objects for the <B>Report</B></value>
      <remarks>
        <para>
            Grouping is used to gather all rows that match certain grouping 
            criteria together. Grouping criteria is defined by adding one or
            more <see cref="T:Telerik.Reporting.Data.Grouping" /> objects
            to a <see cref="T:Telerik.Reporting.Group" />.
            </para>
      </remarks>
    </member>
    <member name="P:Telerik.Reporting.Report.ReportParameters">
      <summary>
      </summary>
    </member>
    <member name="P:Telerik.Reporting.Report.DocumentName">
      <summary>
            Gets or sets a <see cref="T:System.String" /> representing the name
            of the report document.
            </summary>
      <value>
            A <see cref="T:System.String" /> representing the document name. The
            default value is the name of the 
            <see cref="T:Telerik.Reporting.Report" /> this property belongs to.
            </value>
      <remarks>
        <para>
            The value of this property is used to suggest a file name when
            exporting a report to one of the available export formats.
            </para>
        <para>
            A <see cref="T:System.String" /> that starts with "=" is interpreted 
            as an expression to evaluate the document name; otherwise it is 
            interpreted as a literal string.
            </para>
      </remarks>
    </member>
    <member name="E:Telerik.Reporting.Report.NeedDataSource">
      <summary>
            Occurs at the start of report processing if the report has no data source set.
            </summary>
    </member>
    <member name="E:Telerik.Reporting.Report.BeginRenderPage">
      <summary>
            Occurs when a page rendering begins when the report is 
            rendered.
            </summary>
    </member>
    <member name="E:Telerik.Reporting.Report.EndRenderPage">
      <summary>
            Occurs when a page rendering ends when the report is 
            rendered.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.ReportConverter">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.ReportFooterSection">
      <summary>
            Represents a report footer section. Report footer is displayed at the
            end of a report, but before the last 
            <see cref="T:Telerik.Reporting.PageFooterSection" /> if any.
            </summary>
      <remarks>
        <para>
            If you do not want a <see cref="T:Telerik.Reporting.PageFooterSection" />
            displayed on the last page set the 
            <see cref="P:Telerik.Reporting.PageSection.PrintOnLastPage" /> property to <B>false</B>.
            </para>
      </remarks>
    </member>
    <member name="T:Telerik.Reporting.ReportHeaderSection">
      <summary>
            Represents a report header section. Report header is displayed at the
            beginning of a report, but after the first
            <see cref="T:Telerik.Reporting.PageHeaderSection" /> if any.
            </summary>
      <remarks>
        <para>
            If you do not want a <see cref="T:Telerik.Reporting.PageHeaderSection" />
            displayed on the first page set the 
            <see cref="P:Telerik.Reporting.PageSection.PrintOnFirstPage" /> property to <B>false</B>.
            </para>
      </remarks>
    </member>
    <member name="T:Telerik.Reporting.ReportItemProperty">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.ReportItemPropertyAttribute">
      <summary>
      </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameter.Name">
      <summary>
            Gets or sets a string that specifies the name of the parameter. Used to access the parameter.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameter.Type">
      <summary>
            Gets or sets the type of the parameter.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameter.Value">
      <summary>
            Gets or sets the value of the parameter. Can be an Expression that evaluates to an object, value of the allowed types, or IEnumerable containing values of the allowed types.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameter.UI">
      <summary>
            Gets or sets the UI settings that determine if and how parameter editor to be displayed in the viewer.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.ReportParameterUISettings.IDataSource">
      <summary>
            Base interface from AvailableValues and DefaultValues data bindable properties
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterUISettings.IDataSource.DataSource">
      <summary>
            Gets or sets the data source.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterUISettings.IDataSource.DataMember">
      <summary>
            Gets or sets the specific list in a DataSource.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterUISettings.IDataSource.ValueMember">
      <summary>
            Gets or sets a string that specifies the property of the data source from which to draw the value.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.ReportParameterUISettings.IAvailableValues">
      <summary>
            Represents the ReportParameterUISettings bindable AvailableValues
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterUISettings.IAvailableValues.DisplayMember">
      <summary>
            Gets or sets a string that specifies the property of the data source from which to draw the value labels.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterUISettings.IAvailableValues.Filters">
      <summary>
            Gets a FilterCollection that defines the filter expression(s).
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterUISettings.IAvailableValues.Sorting">
      <summary>
            Gets a SortingCollection that defines the sort column(s), and their type and order.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterUISettings.Text">
      <summary>
            Gets or sets the text for the parameter to be displayed in the report viewer.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterUISettings.Visible">
      <summary>
            Determines whether the parameter user interface is visible.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterUISettings.MultiValue">
      <summary>
            Determines if the parameter can hold more then one value.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterUISettings.AllowNull">
      <summary>
            Determines if the parameter allows no value to be passed from it's editor.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterUISettings.AllowBlank">
      <summary>
            Determmines if the parameter allows an empty string to be passed. Only for parameters of type string.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterUISettings.AvailableValues">
      <summary>
            Gets an object that defines a set of values the parameter can accept from.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.ReportParameterDataSource.Group">
      <summary>
      </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterDataSource.DataSource">
      <summary>
            Gets or sets the data source.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterDataSource.DataMember">
      <summary>
            Gets or sets the specific list in a DataSource.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterDataSource.ValueMember">
      <summary>
            Gets or sets a string that specifies the property of the data source from which to draw the value.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterAvailableValues.DisplayMember">
      <summary>
            Gets or sets a string that specifies the property of the data source from which to draw the value labels.
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterAvailableValues.Filters">
      <summary>
            Gets a FilterCollection that defines the filter expression(s).
            </summary>
    </member>
    <member name="P:Telerik.Reporting.ReportParameterAvailableValues.Sorting">
      <summary>
            Gets a SortingCollection that defines the sort column(s), and their type and order.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.ReportParameterConverter">
      <summary>
      </summary>
    </member>
    <member name="T:Telerik.Reporting.ResourceHelper">
      <summary>
            A class for common resource needs.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.ResourceKind">
      <summary>
            Specifies the way a resource is loaded.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.ResourceResolutionService">
      <summary>
            Default resource resolution service used at run-time.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.Shape">
      <summary>
            Represents a shape report item. 
            </summary>
    </member>
    <member name="P:Telerik.Reporting.Shape.ShapeType">
      <summary>
            Gets or sets the type of the shape displayed in the item.
            </summary>
      <value>
            A <see cref="T:Telerik.Reporting.Drawing.Shapes.ShapeBase" /> object
            representing the type of the shape displayed in the item.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Shape.Stretch">
      <summary>
            Gets or sets a value indicating whether to stretch the shape in
            the item or not.
            </summary>
      <value>
        <B>true</B> if the shape should be stretched; otherwise <B>false</B>.
            </value>
    </member>
    <member name="P:Telerik.Reporting.Shape.Angle">
      <summary>
            Gets or sets the angle of rotation of the shape in degrees.
            </summary>
      <value>
            A <I>double</I> value indicating the angle of rotation in degrees.
            </value>
    </member>
    <member name="T:Telerik.Reporting.SR">
      <summary>
            Summary description for SR.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.SRCategoryAttribute">
      <summary>
            Summary description for SRCategoryAttribute.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.SubReport">
      <summary>
            Represents a report item used to embed another report into the current 
            report.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.SubReport.EventKeys">
      <summary>
      </summary>
    </member>
    <member name="M:Telerik.Reporting.SubReport.RaiseNeedDataSource(System.Object,System.EventArgs)">
      <summary>
            Raises the <see cref="E:Telerik.Reporting.Report.NeedDataSource" />
            event.
            </summary>
      <param name="sender">
            The subreport being processed.
            </param>
      <param name="e">
            An <see cref="T:System.EventArgs" /> that contains event data.
            </param>
    </member>
    <member name="E:Telerik.Reporting.SubReport.NeedDataSource">
      <summary>
            Occurs at the start of report processing if the inner report has no data source set.
            </summary>
    </member>
    <member name="T:Telerik.Reporting.TextBox">
      <summary>
            Represents a text box report item. 
            </summary>
    </member>
    <member name="P:Telerik.Reporting.TextBox.Value">
      <summary>
            Gets or sets the current text in the text box.
            </summary>
      <value>
            A <see cref="T:System.String" /> that starts with "=" is interpreted as expression 
            to calculate the value of the current TextBox;
            otherwise - literal string.
            </value>
    </member>
    <member name="T:Telerik.Reporting.TextItemHelper">
      <summary>
            Represents some helpers related to the TextItemBase classes.
            </summary>
    </member>
  </members>
</doc>